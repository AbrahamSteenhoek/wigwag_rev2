

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed May 06 10:50:02 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18325
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x620,48
    42                           	dabs	1,0x5A0,80
    43                           	dabs	1,0x520,80
    44                           	dabs	1,0x4A0,80
    45                           	dabs	1,0x450,32
    46                           	dabs	1,0x22B0,0,_stage_stash
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.10
    50                           ; Generated 31/07/2019 GMT
    51                           ; 
    52                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F18325 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000E                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  008C                     	;# 
   117  008E                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0097                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010E                     	;# 
   132  0111                     	;# 
   133  0112                     	;# 
   134  0113                     	;# 
   135  0114                     	;# 
   136  0115                     	;# 
   137  0116                     	;# 
   138  0117                     	;# 
   139  0118                     	;# 
   140  0119                     	;# 
   141  018C                     	;# 
   142  018E                     	;# 
   143  0197                     	;# 
   144  0199                     	;# 
   145  0199                     	;# 
   146  0199                     	;# 
   147  019A                     	;# 
   148  019A                     	;# 
   149  019A                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019C                     	;# 
   156  019C                     	;# 
   157  019C                     	;# 
   158  019D                     	;# 
   159  019D                     	;# 
   160  019D                     	;# 
   161  019E                     	;# 
   162  019E                     	;# 
   163  019E                     	;# 
   164  019F                     	;# 
   165  019F                     	;# 
   166  019F                     	;# 
   167  019F                     	;# 
   168  019F                     	;# 
   169  020C                     	;# 
   170  020E                     	;# 
   171  0211                     	;# 
   172  0211                     	;# 
   173  0212                     	;# 
   174  0212                     	;# 
   175  0213                     	;# 
   176  0213                     	;# 
   177  0214                     	;# 
   178  0214                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0215                     	;# 
   183  0216                     	;# 
   184  0216                     	;# 
   185  0217                     	;# 
   186  0217                     	;# 
   187  0219                     	;# 
   188  021A                     	;# 
   189  021B                     	;# 
   190  021C                     	;# 
   191  021D                     	;# 
   192  021D                     	;# 
   193  021E                     	;# 
   194  021F                     	;# 
   195  028C                     	;# 
   196  028E                     	;# 
   197  0291                     	;# 
   198  0291                     	;# 
   199  0292                     	;# 
   200  0293                     	;# 
   201  0294                     	;# 
   202  0295                     	;# 
   203  0295                     	;# 
   204  0296                     	;# 
   205  0297                     	;# 
   206  0298                     	;# 
   207  029F                     	;# 
   208  030C                     	;# 
   209  030E                     	;# 
   210  0311                     	;# 
   211  0311                     	;# 
   212  0312                     	;# 
   213  0313                     	;# 
   214  0314                     	;# 
   215  0315                     	;# 
   216  0315                     	;# 
   217  0316                     	;# 
   218  0317                     	;# 
   219  0318                     	;# 
   220  038C                     	;# 
   221  038E                     	;# 
   222  0391                     	;# 
   223  0392                     	;# 
   224  0393                     	;# 
   225  0397                     	;# 
   226  0398                     	;# 
   227  0399                     	;# 
   228  039A                     	;# 
   229  039C                     	;# 
   230  039D                     	;# 
   231  039E                     	;# 
   232  039F                     	;# 
   233  0411                     	;# 
   234  0411                     	;# 
   235  0412                     	;# 
   236  0413                     	;# 
   237  0414                     	;# 
   238  0415                     	;# 
   239  0416                     	;# 
   240  0417                     	;# 
   241  0418                     	;# 
   242  0418                     	;# 
   243  0419                     	;# 
   244  041A                     	;# 
   245  041B                     	;# 
   246  041C                     	;# 
   247  041D                     	;# 
   248  041E                     	;# 
   249  041F                     	;# 
   250  0498                     	;# 
   251  0498                     	;# 
   252  0499                     	;# 
   253  049A                     	;# 
   254  049B                     	;# 
   255  049B                     	;# 
   256  049C                     	;# 
   257  049D                     	;# 
   258  049E                     	;# 
   259  049F                     	;# 
   260  0617                     	;# 
   261  0618                     	;# 
   262  0619                     	;# 
   263  0619                     	;# 
   264  061A                     	;# 
   265  061B                     	;# 
   266  061C                     	;# 
   267  061C                     	;# 
   268  061F                     	;# 
   269  0691                     	;# 
   270  0692                     	;# 
   271  0693                     	;# 
   272  0694                     	;# 
   273  0695                     	;# 
   274  0696                     	;# 
   275  0697                     	;# 
   276  0698                     	;# 
   277  0699                     	;# 
   278  0711                     	;# 
   279  0712                     	;# 
   280  0713                     	;# 
   281  0714                     	;# 
   282  0715                     	;# 
   283  0716                     	;# 
   284  0717                     	;# 
   285  0718                     	;# 
   286  0719                     	;# 
   287  0891                     	;# 
   288  0891                     	;# 
   289  0891                     	;# 
   290  0891                     	;# 
   291  0891                     	;# 
   292  0891                     	;# 
   293  0892                     	;# 
   294  0892                     	;# 
   295  0892                     	;# 
   296  0893                     	;# 
   297  0893                     	;# 
   298  0893                     	;# 
   299  0893                     	;# 
   300  0893                     	;# 
   301  0893                     	;# 
   302  0894                     	;# 
   303  0894                     	;# 
   304  0894                     	;# 
   305  0895                     	;# 
   306  0895                     	;# 
   307  0895                     	;# 
   308  0896                     	;# 
   309  0896                     	;# 
   310  0896                     	;# 
   311  089B                     	;# 
   312  0911                     	;# 
   313  0912                     	;# 
   314  0913                     	;# 
   315  0914                     	;# 
   316  0915                     	;# 
   317  0916                     	;# 
   318  0918                     	;# 
   319  0919                     	;# 
   320  091A                     	;# 
   321  091B                     	;# 
   322  091C                     	;# 
   323  091D                     	;# 
   324  091E                     	;# 
   325  091F                     	;# 
   326  0E0F                     	;# 
   327  0E10                     	;# 
   328  0E11                     	;# 
   329  0E12                     	;# 
   330  0E13                     	;# 
   331  0E14                     	;# 
   332  0E15                     	;# 
   333  0E16                     	;# 
   334  0E17                     	;# 
   335  0E18                     	;# 
   336  0E19                     	;# 
   337  0E1A                     	;# 
   338  0E1B                     	;# 
   339  0E1C                     	;# 
   340  0E1D                     	;# 
   341  0E1E                     	;# 
   342  0E1F                     	;# 
   343  0E20                     	;# 
   344  0E21                     	;# 
   345  0E22                     	;# 
   346  0E24                     	;# 
   347  0E25                     	;# 
   348  0E28                     	;# 
   349  0E29                     	;# 
   350  0E2A                     	;# 
   351  0E2B                     	;# 
   352  0E2C                     	;# 
   353  0E2D                     	;# 
   354  0E2E                     	;# 
   355  0E2F                     	;# 
   356  0E90                     	;# 
   357  0E91                     	;# 
   358  0E92                     	;# 
   359  0E94                     	;# 
   360  0E95                     	;# 
   361  0EA0                     	;# 
   362  0EA1                     	;# 
   363  0EA2                     	;# 
   364  0EA3                     	;# 
   365  0EA4                     	;# 
   366  0EA5                     	;# 
   367  0F0F                     	;# 
   368  0F10                     	;# 
   369  0F11                     	;# 
   370  0F12                     	;# 
   371  0F13                     	;# 
   372  0F14                     	;# 
   373  0F15                     	;# 
   374  0F16                     	;# 
   375  0F17                     	;# 
   376  0F18                     	;# 
   377  0F19                     	;# 
   378  0F1A                     	;# 
   379  0F1B                     	;# 
   380  0F1C                     	;# 
   381  0F1D                     	;# 
   382  0F1E                     	;# 
   383  0F1F                     	;# 
   384  0F20                     	;# 
   385  0F21                     	;# 
   386  0F22                     	;# 
   387  0F23                     	;# 
   388  0F24                     	;# 
   389  0F25                     	;# 
   390  0F26                     	;# 
   391  0F27                     	;# 
   392  0F28                     	;# 
   393  0F29                     	;# 
   394  0F2A                     	;# 
   395  0F2B                     	;# 
   396  0F2C                     	;# 
   397  0F2D                     	;# 
   398  0F2E                     	;# 
   399  0F2F                     	;# 
   400  0F30                     	;# 
   401  0F31                     	;# 
   402  0F32                     	;# 
   403  0F33                     	;# 
   404  0F34                     	;# 
   405  0F35                     	;# 
   406  0F36                     	;# 
   407  0F37                     	;# 
   408  0FE4                     	;# 
   409  0FE5                     	;# 
   410  0FE6                     	;# 
   411  0FE7                     	;# 
   412  0FE8                     	;# 
   413  0FE9                     	;# 
   414  0FEA                     	;# 
   415  0FEB                     	;# 
   416  0FED                     	;# 
   417  0FEE                     	;# 
   418  0FEF                     	;# 
   419  0000                     	;# 
   420  0001                     	;# 
   421  0002                     	;# 
   422  0003                     	;# 
   423  0004                     	;# 
   424  0005                     	;# 
   425  0006                     	;# 
   426  0007                     	;# 
   427  0008                     	;# 
   428  0009                     	;# 
   429  000A                     	;# 
   430  000B                     	;# 
   431  000C                     	;# 
   432  000E                     	;# 
   433  0010                     	;# 
   434  0011                     	;# 
   435  0012                     	;# 
   436  0013                     	;# 
   437  0014                     	;# 
   438  0015                     	;# 
   439  0015                     	;# 
   440  0016                     	;# 
   441  0016                     	;# 
   442  0017                     	;# 
   443  0018                     	;# 
   444  0019                     	;# 
   445  0019                     	;# 
   446  001A                     	;# 
   447  001B                     	;# 
   448  001C                     	;# 
   449  001D                     	;# 
   450  001E                     	;# 
   451  001F                     	;# 
   452  008C                     	;# 
   453  008E                     	;# 
   454  0090                     	;# 
   455  0091                     	;# 
   456  0092                     	;# 
   457  0093                     	;# 
   458  0094                     	;# 
   459  0097                     	;# 
   460  009B                     	;# 
   461  009B                     	;# 
   462  009C                     	;# 
   463  009D                     	;# 
   464  009E                     	;# 
   465  009F                     	;# 
   466  010C                     	;# 
   467  010E                     	;# 
   468  0111                     	;# 
   469  0112                     	;# 
   470  0113                     	;# 
   471  0114                     	;# 
   472  0115                     	;# 
   473  0116                     	;# 
   474  0117                     	;# 
   475  0118                     	;# 
   476  0119                     	;# 
   477  018C                     	;# 
   478  018E                     	;# 
   479  0197                     	;# 
   480  0199                     	;# 
   481  0199                     	;# 
   482  0199                     	;# 
   483  019A                     	;# 
   484  019A                     	;# 
   485  019A                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019B                     	;# 
   489  019B                     	;# 
   490  019B                     	;# 
   491  019C                     	;# 
   492  019C                     	;# 
   493  019C                     	;# 
   494  019D                     	;# 
   495  019D                     	;# 
   496  019D                     	;# 
   497  019E                     	;# 
   498  019E                     	;# 
   499  019E                     	;# 
   500  019F                     	;# 
   501  019F                     	;# 
   502  019F                     	;# 
   503  019F                     	;# 
   504  019F                     	;# 
   505  020C                     	;# 
   506  020E                     	;# 
   507  0211                     	;# 
   508  0211                     	;# 
   509  0212                     	;# 
   510  0212                     	;# 
   511  0213                     	;# 
   512  0213                     	;# 
   513  0214                     	;# 
   514  0214                     	;# 
   515  0215                     	;# 
   516  0215                     	;# 
   517  0215                     	;# 
   518  0215                     	;# 
   519  0216                     	;# 
   520  0216                     	;# 
   521  0217                     	;# 
   522  0217                     	;# 
   523  0219                     	;# 
   524  021A                     	;# 
   525  021B                     	;# 
   526  021C                     	;# 
   527  021D                     	;# 
   528  021D                     	;# 
   529  021E                     	;# 
   530  021F                     	;# 
   531  028C                     	;# 
   532  028E                     	;# 
   533  0291                     	;# 
   534  0291                     	;# 
   535  0292                     	;# 
   536  0293                     	;# 
   537  0294                     	;# 
   538  0295                     	;# 
   539  0295                     	;# 
   540  0296                     	;# 
   541  0297                     	;# 
   542  0298                     	;# 
   543  029F                     	;# 
   544  030C                     	;# 
   545  030E                     	;# 
   546  0311                     	;# 
   547  0311                     	;# 
   548  0312                     	;# 
   549  0313                     	;# 
   550  0314                     	;# 
   551  0315                     	;# 
   552  0315                     	;# 
   553  0316                     	;# 
   554  0317                     	;# 
   555  0318                     	;# 
   556  038C                     	;# 
   557  038E                     	;# 
   558  0391                     	;# 
   559  0392                     	;# 
   560  0393                     	;# 
   561  0397                     	;# 
   562  0398                     	;# 
   563  0399                     	;# 
   564  039A                     	;# 
   565  039C                     	;# 
   566  039D                     	;# 
   567  039E                     	;# 
   568  039F                     	;# 
   569  0411                     	;# 
   570  0411                     	;# 
   571  0412                     	;# 
   572  0413                     	;# 
   573  0414                     	;# 
   574  0415                     	;# 
   575  0416                     	;# 
   576  0417                     	;# 
   577  0418                     	;# 
   578  0418                     	;# 
   579  0419                     	;# 
   580  041A                     	;# 
   581  041B                     	;# 
   582  041C                     	;# 
   583  041D                     	;# 
   584  041E                     	;# 
   585  041F                     	;# 
   586  0498                     	;# 
   587  0498                     	;# 
   588  0499                     	;# 
   589  049A                     	;# 
   590  049B                     	;# 
   591  049B                     	;# 
   592  049C                     	;# 
   593  049D                     	;# 
   594  049E                     	;# 
   595  049F                     	;# 
   596  0617                     	;# 
   597  0618                     	;# 
   598  0619                     	;# 
   599  0619                     	;# 
   600  061A                     	;# 
   601  061B                     	;# 
   602  061C                     	;# 
   603  061C                     	;# 
   604  061F                     	;# 
   605  0691                     	;# 
   606  0692                     	;# 
   607  0693                     	;# 
   608  0694                     	;# 
   609  0695                     	;# 
   610  0696                     	;# 
   611  0697                     	;# 
   612  0698                     	;# 
   613  0699                     	;# 
   614  0711                     	;# 
   615  0712                     	;# 
   616  0713                     	;# 
   617  0714                     	;# 
   618  0715                     	;# 
   619  0716                     	;# 
   620  0717                     	;# 
   621  0718                     	;# 
   622  0719                     	;# 
   623  0891                     	;# 
   624  0891                     	;# 
   625  0891                     	;# 
   626  0891                     	;# 
   627  0891                     	;# 
   628  0891                     	;# 
   629  0892                     	;# 
   630  0892                     	;# 
   631  0892                     	;# 
   632  0893                     	;# 
   633  0893                     	;# 
   634  0893                     	;# 
   635  0893                     	;# 
   636  0893                     	;# 
   637  0893                     	;# 
   638  0894                     	;# 
   639  0894                     	;# 
   640  0894                     	;# 
   641  0895                     	;# 
   642  0895                     	;# 
   643  0895                     	;# 
   644  0896                     	;# 
   645  0896                     	;# 
   646  0896                     	;# 
   647  089B                     	;# 
   648  0911                     	;# 
   649  0912                     	;# 
   650  0913                     	;# 
   651  0914                     	;# 
   652  0915                     	;# 
   653  0916                     	;# 
   654  0918                     	;# 
   655  0919                     	;# 
   656  091A                     	;# 
   657  091B                     	;# 
   658  091C                     	;# 
   659  091D                     	;# 
   660  091E                     	;# 
   661  091F                     	;# 
   662  0E0F                     	;# 
   663  0E10                     	;# 
   664  0E11                     	;# 
   665  0E12                     	;# 
   666  0E13                     	;# 
   667  0E14                     	;# 
   668  0E15                     	;# 
   669  0E16                     	;# 
   670  0E17                     	;# 
   671  0E18                     	;# 
   672  0E19                     	;# 
   673  0E1A                     	;# 
   674  0E1B                     	;# 
   675  0E1C                     	;# 
   676  0E1D                     	;# 
   677  0E1E                     	;# 
   678  0E1F                     	;# 
   679  0E20                     	;# 
   680  0E21                     	;# 
   681  0E22                     	;# 
   682  0E24                     	;# 
   683  0E25                     	;# 
   684  0E28                     	;# 
   685  0E29                     	;# 
   686  0E2A                     	;# 
   687  0E2B                     	;# 
   688  0E2C                     	;# 
   689  0E2D                     	;# 
   690  0E2E                     	;# 
   691  0E2F                     	;# 
   692  0E90                     	;# 
   693  0E91                     	;# 
   694  0E92                     	;# 
   695  0E94                     	;# 
   696  0E95                     	;# 
   697  0EA0                     	;# 
   698  0EA1                     	;# 
   699  0EA2                     	;# 
   700  0EA3                     	;# 
   701  0EA4                     	;# 
   702  0EA5                     	;# 
   703  0F0F                     	;# 
   704  0F10                     	;# 
   705  0F11                     	;# 
   706  0F12                     	;# 
   707  0F13                     	;# 
   708  0F14                     	;# 
   709  0F15                     	;# 
   710  0F16                     	;# 
   711  0F17                     	;# 
   712  0F18                     	;# 
   713  0F19                     	;# 
   714  0F1A                     	;# 
   715  0F1B                     	;# 
   716  0F1C                     	;# 
   717  0F1D                     	;# 
   718  0F1E                     	;# 
   719  0F1F                     	;# 
   720  0F20                     	;# 
   721  0F21                     	;# 
   722  0F22                     	;# 
   723  0F23                     	;# 
   724  0F24                     	;# 
   725  0F25                     	;# 
   726  0F26                     	;# 
   727  0F27                     	;# 
   728  0F28                     	;# 
   729  0F29                     	;# 
   730  0F2A                     	;# 
   731  0F2B                     	;# 
   732  0F2C                     	;# 
   733  0F2D                     	;# 
   734  0F2E                     	;# 
   735  0F2F                     	;# 
   736  0F30                     	;# 
   737  0F31                     	;# 
   738  0F32                     	;# 
   739  0F33                     	;# 
   740  0F34                     	;# 
   741  0F35                     	;# 
   742  0F36                     	;# 
   743  0F37                     	;# 
   744  0FE4                     	;# 
   745  0FE5                     	;# 
   746  0FE6                     	;# 
   747  0FE7                     	;# 
   748  0FE8                     	;# 
   749  0FE9                     	;# 
   750  0FEA                     	;# 
   751  0FEB                     	;# 
   752  0FED                     	;# 
   753  0FEE                     	;# 
   754  0FEF                     	;# 
   755  0000                     	;# 
   756  0001                     	;# 
   757  0002                     	;# 
   758  0003                     	;# 
   759  0004                     	;# 
   760  0005                     	;# 
   761  0006                     	;# 
   762  0007                     	;# 
   763  0008                     	;# 
   764  0009                     	;# 
   765  000A                     	;# 
   766  000B                     	;# 
   767  000C                     	;# 
   768  000E                     	;# 
   769  0010                     	;# 
   770  0011                     	;# 
   771  0012                     	;# 
   772  0013                     	;# 
   773  0014                     	;# 
   774  0015                     	;# 
   775  0015                     	;# 
   776  0016                     	;# 
   777  0016                     	;# 
   778  0017                     	;# 
   779  0018                     	;# 
   780  0019                     	;# 
   781  0019                     	;# 
   782  001A                     	;# 
   783  001B                     	;# 
   784  001C                     	;# 
   785  001D                     	;# 
   786  001E                     	;# 
   787  001F                     	;# 
   788  008C                     	;# 
   789  008E                     	;# 
   790  0090                     	;# 
   791  0091                     	;# 
   792  0092                     	;# 
   793  0093                     	;# 
   794  0094                     	;# 
   795  0097                     	;# 
   796  009B                     	;# 
   797  009B                     	;# 
   798  009C                     	;# 
   799  009D                     	;# 
   800  009E                     	;# 
   801  009F                     	;# 
   802  010C                     	;# 
   803  010E                     	;# 
   804  0111                     	;# 
   805  0112                     	;# 
   806  0113                     	;# 
   807  0114                     	;# 
   808  0115                     	;# 
   809  0116                     	;# 
   810  0117                     	;# 
   811  0118                     	;# 
   812  0119                     	;# 
   813  018C                     	;# 
   814  018E                     	;# 
   815  0197                     	;# 
   816  0199                     	;# 
   817  0199                     	;# 
   818  0199                     	;# 
   819  019A                     	;# 
   820  019A                     	;# 
   821  019A                     	;# 
   822  019B                     	;# 
   823  019B                     	;# 
   824  019B                     	;# 
   825  019B                     	;# 
   826  019B                     	;# 
   827  019C                     	;# 
   828  019C                     	;# 
   829  019C                     	;# 
   830  019D                     	;# 
   831  019D                     	;# 
   832  019D                     	;# 
   833  019E                     	;# 
   834  019E                     	;# 
   835  019E                     	;# 
   836  019F                     	;# 
   837  019F                     	;# 
   838  019F                     	;# 
   839  019F                     	;# 
   840  019F                     	;# 
   841  020C                     	;# 
   842  020E                     	;# 
   843  0211                     	;# 
   844  0211                     	;# 
   845  0212                     	;# 
   846  0212                     	;# 
   847  0213                     	;# 
   848  0213                     	;# 
   849  0214                     	;# 
   850  0214                     	;# 
   851  0215                     	;# 
   852  0215                     	;# 
   853  0215                     	;# 
   854  0215                     	;# 
   855  0216                     	;# 
   856  0216                     	;# 
   857  0217                     	;# 
   858  0217                     	;# 
   859  0219                     	;# 
   860  021A                     	;# 
   861  021B                     	;# 
   862  021C                     	;# 
   863  021D                     	;# 
   864  021D                     	;# 
   865  021E                     	;# 
   866  021F                     	;# 
   867  028C                     	;# 
   868  028E                     	;# 
   869  0291                     	;# 
   870  0291                     	;# 
   871  0292                     	;# 
   872  0293                     	;# 
   873  0294                     	;# 
   874  0295                     	;# 
   875  0295                     	;# 
   876  0296                     	;# 
   877  0297                     	;# 
   878  0298                     	;# 
   879  029F                     	;# 
   880  030C                     	;# 
   881  030E                     	;# 
   882  0311                     	;# 
   883  0311                     	;# 
   884  0312                     	;# 
   885  0313                     	;# 
   886  0314                     	;# 
   887  0315                     	;# 
   888  0315                     	;# 
   889  0316                     	;# 
   890  0317                     	;# 
   891  0318                     	;# 
   892  038C                     	;# 
   893  038E                     	;# 
   894  0391                     	;# 
   895  0392                     	;# 
   896  0393                     	;# 
   897  0397                     	;# 
   898  0398                     	;# 
   899  0399                     	;# 
   900  039A                     	;# 
   901  039C                     	;# 
   902  039D                     	;# 
   903  039E                     	;# 
   904  039F                     	;# 
   905  0411                     	;# 
   906  0411                     	;# 
   907  0412                     	;# 
   908  0413                     	;# 
   909  0414                     	;# 
   910  0415                     	;# 
   911  0416                     	;# 
   912  0417                     	;# 
   913  0418                     	;# 
   914  0418                     	;# 
   915  0419                     	;# 
   916  041A                     	;# 
   917  041B                     	;# 
   918  041C                     	;# 
   919  041D                     	;# 
   920  041E                     	;# 
   921  041F                     	;# 
   922  0498                     	;# 
   923  0498                     	;# 
   924  0499                     	;# 
   925  049A                     	;# 
   926  049B                     	;# 
   927  049B                     	;# 
   928  049C                     	;# 
   929  049D                     	;# 
   930  049E                     	;# 
   931  049F                     	;# 
   932  0617                     	;# 
   933  0618                     	;# 
   934  0619                     	;# 
   935  0619                     	;# 
   936  061A                     	;# 
   937  061B                     	;# 
   938  061C                     	;# 
   939  061C                     	;# 
   940  061F                     	;# 
   941  0691                     	;# 
   942  0692                     	;# 
   943  0693                     	;# 
   944  0694                     	;# 
   945  0695                     	;# 
   946  0696                     	;# 
   947  0697                     	;# 
   948  0698                     	;# 
   949  0699                     	;# 
   950  0711                     	;# 
   951  0712                     	;# 
   952  0713                     	;# 
   953  0714                     	;# 
   954  0715                     	;# 
   955  0716                     	;# 
   956  0717                     	;# 
   957  0718                     	;# 
   958  0719                     	;# 
   959  0891                     	;# 
   960  0891                     	;# 
   961  0891                     	;# 
   962  0891                     	;# 
   963  0891                     	;# 
   964  0891                     	;# 
   965  0892                     	;# 
   966  0892                     	;# 
   967  0892                     	;# 
   968  0893                     	;# 
   969  0893                     	;# 
   970  0893                     	;# 
   971  0893                     	;# 
   972  0893                     	;# 
   973  0893                     	;# 
   974  0894                     	;# 
   975  0894                     	;# 
   976  0894                     	;# 
   977  0895                     	;# 
   978  0895                     	;# 
   979  0895                     	;# 
   980  0896                     	;# 
   981  0896                     	;# 
   982  0896                     	;# 
   983  089B                     	;# 
   984  0911                     	;# 
   985  0912                     	;# 
   986  0913                     	;# 
   987  0914                     	;# 
   988  0915                     	;# 
   989  0916                     	;# 
   990  0918                     	;# 
   991  0919                     	;# 
   992  091A                     	;# 
   993  091B                     	;# 
   994  091C                     	;# 
   995  091D                     	;# 
   996  091E                     	;# 
   997  091F                     	;# 
   998  0E0F                     	;# 
   999  0E10                     	;# 
  1000  0E11                     	;# 
  1001  0E12                     	;# 
  1002  0E13                     	;# 
  1003  0E14                     	;# 
  1004  0E15                     	;# 
  1005  0E16                     	;# 
  1006  0E17                     	;# 
  1007  0E18                     	;# 
  1008  0E19                     	;# 
  1009  0E1A                     	;# 
  1010  0E1B                     	;# 
  1011  0E1C                     	;# 
  1012  0E1D                     	;# 
  1013  0E1E                     	;# 
  1014  0E1F                     	;# 
  1015  0E20                     	;# 
  1016  0E21                     	;# 
  1017  0E22                     	;# 
  1018  0E24                     	;# 
  1019  0E25                     	;# 
  1020  0E28                     	;# 
  1021  0E29                     	;# 
  1022  0E2A                     	;# 
  1023  0E2B                     	;# 
  1024  0E2C                     	;# 
  1025  0E2D                     	;# 
  1026  0E2E                     	;# 
  1027  0E2F                     	;# 
  1028  0E90                     	;# 
  1029  0E91                     	;# 
  1030  0E92                     	;# 
  1031  0E94                     	;# 
  1032  0E95                     	;# 
  1033  0EA0                     	;# 
  1034  0EA1                     	;# 
  1035  0EA2                     	;# 
  1036  0EA3                     	;# 
  1037  0EA4                     	;# 
  1038  0EA5                     	;# 
  1039  0F0F                     	;# 
  1040  0F10                     	;# 
  1041  0F11                     	;# 
  1042  0F12                     	;# 
  1043  0F13                     	;# 
  1044  0F14                     	;# 
  1045  0F15                     	;# 
  1046  0F16                     	;# 
  1047  0F17                     	;# 
  1048  0F18                     	;# 
  1049  0F19                     	;# 
  1050  0F1A                     	;# 
  1051  0F1B                     	;# 
  1052  0F1C                     	;# 
  1053  0F1D                     	;# 
  1054  0F1E                     	;# 
  1055  0F1F                     	;# 
  1056  0F20                     	;# 
  1057  0F21                     	;# 
  1058  0F22                     	;# 
  1059  0F23                     	;# 
  1060  0F24                     	;# 
  1061  0F25                     	;# 
  1062  0F26                     	;# 
  1063  0F27                     	;# 
  1064  0F28                     	;# 
  1065  0F29                     	;# 
  1066  0F2A                     	;# 
  1067  0F2B                     	;# 
  1068  0F2C                     	;# 
  1069  0F2D                     	;# 
  1070  0F2E                     	;# 
  1071  0F2F                     	;# 
  1072  0F30                     	;# 
  1073  0F31                     	;# 
  1074  0F32                     	;# 
  1075  0F33                     	;# 
  1076  0F34                     	;# 
  1077  0F35                     	;# 
  1078  0F36                     	;# 
  1079  0F37                     	;# 
  1080  0FE4                     	;# 
  1081  0FE5                     	;# 
  1082  0FE6                     	;# 
  1083  0FE7                     	;# 
  1084  0FE8                     	;# 
  1085  0FE9                     	;# 
  1086  0FEA                     	;# 
  1087  0FEB                     	;# 
  1088  0FED                     	;# 
  1089  0FEE                     	;# 
  1090  0FEF                     	;# 
  1091  0000                     	;# 
  1092  0001                     	;# 
  1093  0002                     	;# 
  1094  0003                     	;# 
  1095  0004                     	;# 
  1096  0005                     	;# 
  1097  0006                     	;# 
  1098  0007                     	;# 
  1099  0008                     	;# 
  1100  0009                     	;# 
  1101  000A                     	;# 
  1102  000B                     	;# 
  1103  000C                     	;# 
  1104  000E                     	;# 
  1105  0010                     	;# 
  1106  0011                     	;# 
  1107  0012                     	;# 
  1108  0013                     	;# 
  1109  0014                     	;# 
  1110  0015                     	;# 
  1111  0015                     	;# 
  1112  0016                     	;# 
  1113  0016                     	;# 
  1114  0017                     	;# 
  1115  0018                     	;# 
  1116  0019                     	;# 
  1117  0019                     	;# 
  1118  001A                     	;# 
  1119  001B                     	;# 
  1120  001C                     	;# 
  1121  001D                     	;# 
  1122  001E                     	;# 
  1123  001F                     	;# 
  1124  008C                     	;# 
  1125  008E                     	;# 
  1126  0090                     	;# 
  1127  0091                     	;# 
  1128  0092                     	;# 
  1129  0093                     	;# 
  1130  0094                     	;# 
  1131  0097                     	;# 
  1132  009B                     	;# 
  1133  009B                     	;# 
  1134  009C                     	;# 
  1135  009D                     	;# 
  1136  009E                     	;# 
  1137  009F                     	;# 
  1138  010C                     	;# 
  1139  010E                     	;# 
  1140  0111                     	;# 
  1141  0112                     	;# 
  1142  0113                     	;# 
  1143  0114                     	;# 
  1144  0115                     	;# 
  1145  0116                     	;# 
  1146  0117                     	;# 
  1147  0118                     	;# 
  1148  0119                     	;# 
  1149  018C                     	;# 
  1150  018E                     	;# 
  1151  0197                     	;# 
  1152  0199                     	;# 
  1153  0199                     	;# 
  1154  0199                     	;# 
  1155  019A                     	;# 
  1156  019A                     	;# 
  1157  019A                     	;# 
  1158  019B                     	;# 
  1159  019B                     	;# 
  1160  019B                     	;# 
  1161  019B                     	;# 
  1162  019B                     	;# 
  1163  019C                     	;# 
  1164  019C                     	;# 
  1165  019C                     	;# 
  1166  019D                     	;# 
  1167  019D                     	;# 
  1168  019D                     	;# 
  1169  019E                     	;# 
  1170  019E                     	;# 
  1171  019E                     	;# 
  1172  019F                     	;# 
  1173  019F                     	;# 
  1174  019F                     	;# 
  1175  019F                     	;# 
  1176  019F                     	;# 
  1177  020C                     	;# 
  1178  020E                     	;# 
  1179  0211                     	;# 
  1180  0211                     	;# 
  1181  0212                     	;# 
  1182  0212                     	;# 
  1183  0213                     	;# 
  1184  0213                     	;# 
  1185  0214                     	;# 
  1186  0214                     	;# 
  1187  0215                     	;# 
  1188  0215                     	;# 
  1189  0215                     	;# 
  1190  0215                     	;# 
  1191  0216                     	;# 
  1192  0216                     	;# 
  1193  0217                     	;# 
  1194  0217                     	;# 
  1195  0219                     	;# 
  1196  021A                     	;# 
  1197  021B                     	;# 
  1198  021C                     	;# 
  1199  021D                     	;# 
  1200  021D                     	;# 
  1201  021E                     	;# 
  1202  021F                     	;# 
  1203  028C                     	;# 
  1204  028E                     	;# 
  1205  0291                     	;# 
  1206  0291                     	;# 
  1207  0292                     	;# 
  1208  0293                     	;# 
  1209  0294                     	;# 
  1210  0295                     	;# 
  1211  0295                     	;# 
  1212  0296                     	;# 
  1213  0297                     	;# 
  1214  0298                     	;# 
  1215  029F                     	;# 
  1216  030C                     	;# 
  1217  030E                     	;# 
  1218  0311                     	;# 
  1219  0311                     	;# 
  1220  0312                     	;# 
  1221  0313                     	;# 
  1222  0314                     	;# 
  1223  0315                     	;# 
  1224  0315                     	;# 
  1225  0316                     	;# 
  1226  0317                     	;# 
  1227  0318                     	;# 
  1228  038C                     	;# 
  1229  038E                     	;# 
  1230  0391                     	;# 
  1231  0392                     	;# 
  1232  0393                     	;# 
  1233  0397                     	;# 
  1234  0398                     	;# 
  1235  0399                     	;# 
  1236  039A                     	;# 
  1237  039C                     	;# 
  1238  039D                     	;# 
  1239  039E                     	;# 
  1240  039F                     	;# 
  1241  0411                     	;# 
  1242  0411                     	;# 
  1243  0412                     	;# 
  1244  0413                     	;# 
  1245  0414                     	;# 
  1246  0415                     	;# 
  1247  0416                     	;# 
  1248  0417                     	;# 
  1249  0418                     	;# 
  1250  0418                     	;# 
  1251  0419                     	;# 
  1252  041A                     	;# 
  1253  041B                     	;# 
  1254  041C                     	;# 
  1255  041D                     	;# 
  1256  041E                     	;# 
  1257  041F                     	;# 
  1258  0498                     	;# 
  1259  0498                     	;# 
  1260  0499                     	;# 
  1261  049A                     	;# 
  1262  049B                     	;# 
  1263  049B                     	;# 
  1264  049C                     	;# 
  1265  049D                     	;# 
  1266  049E                     	;# 
  1267  049F                     	;# 
  1268  0617                     	;# 
  1269  0618                     	;# 
  1270  0619                     	;# 
  1271  0619                     	;# 
  1272  061A                     	;# 
  1273  061B                     	;# 
  1274  061C                     	;# 
  1275  061C                     	;# 
  1276  061F                     	;# 
  1277  0691                     	;# 
  1278  0692                     	;# 
  1279  0693                     	;# 
  1280  0694                     	;# 
  1281  0695                     	;# 
  1282  0696                     	;# 
  1283  0697                     	;# 
  1284  0698                     	;# 
  1285  0699                     	;# 
  1286  0711                     	;# 
  1287  0712                     	;# 
  1288  0713                     	;# 
  1289  0714                     	;# 
  1290  0715                     	;# 
  1291  0716                     	;# 
  1292  0717                     	;# 
  1293  0718                     	;# 
  1294  0719                     	;# 
  1295  0891                     	;# 
  1296  0891                     	;# 
  1297  0891                     	;# 
  1298  0891                     	;# 
  1299  0891                     	;# 
  1300  0891                     	;# 
  1301  0892                     	;# 
  1302  0892                     	;# 
  1303  0892                     	;# 
  1304  0893                     	;# 
  1305  0893                     	;# 
  1306  0893                     	;# 
  1307  0893                     	;# 
  1308  0893                     	;# 
  1309  0893                     	;# 
  1310  0894                     	;# 
  1311  0894                     	;# 
  1312  0894                     	;# 
  1313  0895                     	;# 
  1314  0895                     	;# 
  1315  0895                     	;# 
  1316  0896                     	;# 
  1317  0896                     	;# 
  1318  0896                     	;# 
  1319  089B                     	;# 
  1320  0911                     	;# 
  1321  0912                     	;# 
  1322  0913                     	;# 
  1323  0914                     	;# 
  1324  0915                     	;# 
  1325  0916                     	;# 
  1326  0918                     	;# 
  1327  0919                     	;# 
  1328  091A                     	;# 
  1329  091B                     	;# 
  1330  091C                     	;# 
  1331  091D                     	;# 
  1332  091E                     	;# 
  1333  091F                     	;# 
  1334  0E0F                     	;# 
  1335  0E10                     	;# 
  1336  0E11                     	;# 
  1337  0E12                     	;# 
  1338  0E13                     	;# 
  1339  0E14                     	;# 
  1340  0E15                     	;# 
  1341  0E16                     	;# 
  1342  0E17                     	;# 
  1343  0E18                     	;# 
  1344  0E19                     	;# 
  1345  0E1A                     	;# 
  1346  0E1B                     	;# 
  1347  0E1C                     	;# 
  1348  0E1D                     	;# 
  1349  0E1E                     	;# 
  1350  0E1F                     	;# 
  1351  0E20                     	;# 
  1352  0E21                     	;# 
  1353  0E22                     	;# 
  1354  0E24                     	;# 
  1355  0E25                     	;# 
  1356  0E28                     	;# 
  1357  0E29                     	;# 
  1358  0E2A                     	;# 
  1359  0E2B                     	;# 
  1360  0E2C                     	;# 
  1361  0E2D                     	;# 
  1362  0E2E                     	;# 
  1363  0E2F                     	;# 
  1364  0E90                     	;# 
  1365  0E91                     	;# 
  1366  0E92                     	;# 
  1367  0E94                     	;# 
  1368  0E95                     	;# 
  1369  0EA0                     	;# 
  1370  0EA1                     	;# 
  1371  0EA2                     	;# 
  1372  0EA3                     	;# 
  1373  0EA4                     	;# 
  1374  0EA5                     	;# 
  1375  0F0F                     	;# 
  1376  0F10                     	;# 
  1377  0F11                     	;# 
  1378  0F12                     	;# 
  1379  0F13                     	;# 
  1380  0F14                     	;# 
  1381  0F15                     	;# 
  1382  0F16                     	;# 
  1383  0F17                     	;# 
  1384  0F18                     	;# 
  1385  0F19                     	;# 
  1386  0F1A                     	;# 
  1387  0F1B                     	;# 
  1388  0F1C                     	;# 
  1389  0F1D                     	;# 
  1390  0F1E                     	;# 
  1391  0F1F                     	;# 
  1392  0F20                     	;# 
  1393  0F21                     	;# 
  1394  0F22                     	;# 
  1395  0F23                     	;# 
  1396  0F24                     	;# 
  1397  0F25                     	;# 
  1398  0F26                     	;# 
  1399  0F27                     	;# 
  1400  0F28                     	;# 
  1401  0F29                     	;# 
  1402  0F2A                     	;# 
  1403  0F2B                     	;# 
  1404  0F2C                     	;# 
  1405  0F2D                     	;# 
  1406  0F2E                     	;# 
  1407  0F2F                     	;# 
  1408  0F30                     	;# 
  1409  0F31                     	;# 
  1410  0F32                     	;# 
  1411  0F33                     	;# 
  1412  0F34                     	;# 
  1413  0F35                     	;# 
  1414  0F36                     	;# 
  1415  0F37                     	;# 
  1416  0FE4                     	;# 
  1417  0FE5                     	;# 
  1418  0FE6                     	;# 
  1419  0FE7                     	;# 
  1420  0FE8                     	;# 
  1421  0FE9                     	;# 
  1422  0FEA                     	;# 
  1423  0FEB                     	;# 
  1424  0FED                     	;# 
  1425  0FEE                     	;# 
  1426  0FEF                     	;# 
  1427  0000                     	;# 
  1428  0001                     	;# 
  1429  0002                     	;# 
  1430  0003                     	;# 
  1431  0004                     	;# 
  1432  0005                     	;# 
  1433  0006                     	;# 
  1434  0007                     	;# 
  1435  0008                     	;# 
  1436  0009                     	;# 
  1437  000A                     	;# 
  1438  000B                     	;# 
  1439  000C                     	;# 
  1440  000E                     	;# 
  1441  0010                     	;# 
  1442  0011                     	;# 
  1443  0012                     	;# 
  1444  0013                     	;# 
  1445  0014                     	;# 
  1446  0015                     	;# 
  1447  0015                     	;# 
  1448  0016                     	;# 
  1449  0016                     	;# 
  1450  0017                     	;# 
  1451  0018                     	;# 
  1452  0019                     	;# 
  1453  0019                     	;# 
  1454  001A                     	;# 
  1455  001B                     	;# 
  1456  001C                     	;# 
  1457  001D                     	;# 
  1458  001E                     	;# 
  1459  001F                     	;# 
  1460  008C                     	;# 
  1461  008E                     	;# 
  1462  0090                     	;# 
  1463  0091                     	;# 
  1464  0092                     	;# 
  1465  0093                     	;# 
  1466  0094                     	;# 
  1467  0097                     	;# 
  1468  009B                     	;# 
  1469  009B                     	;# 
  1470  009C                     	;# 
  1471  009D                     	;# 
  1472  009E                     	;# 
  1473  009F                     	;# 
  1474  010C                     	;# 
  1475  010E                     	;# 
  1476  0111                     	;# 
  1477  0112                     	;# 
  1478  0113                     	;# 
  1479  0114                     	;# 
  1480  0115                     	;# 
  1481  0116                     	;# 
  1482  0117                     	;# 
  1483  0118                     	;# 
  1484  0119                     	;# 
  1485  018C                     	;# 
  1486  018E                     	;# 
  1487  0197                     	;# 
  1488  0199                     	;# 
  1489  0199                     	;# 
  1490  0199                     	;# 
  1491  019A                     	;# 
  1492  019A                     	;# 
  1493  019A                     	;# 
  1494  019B                     	;# 
  1495  019B                     	;# 
  1496  019B                     	;# 
  1497  019B                     	;# 
  1498  019B                     	;# 
  1499  019C                     	;# 
  1500  019C                     	;# 
  1501  019C                     	;# 
  1502  019D                     	;# 
  1503  019D                     	;# 
  1504  019D                     	;# 
  1505  019E                     	;# 
  1506  019E                     	;# 
  1507  019E                     	;# 
  1508  019F                     	;# 
  1509  019F                     	;# 
  1510  019F                     	;# 
  1511  019F                     	;# 
  1512  019F                     	;# 
  1513  020C                     	;# 
  1514  020E                     	;# 
  1515  0211                     	;# 
  1516  0211                     	;# 
  1517  0212                     	;# 
  1518  0212                     	;# 
  1519  0213                     	;# 
  1520  0213                     	;# 
  1521  0214                     	;# 
  1522  0214                     	;# 
  1523  0215                     	;# 
  1524  0215                     	;# 
  1525  0215                     	;# 
  1526  0215                     	;# 
  1527  0216                     	;# 
  1528  0216                     	;# 
  1529  0217                     	;# 
  1530  0217                     	;# 
  1531  0219                     	;# 
  1532  021A                     	;# 
  1533  021B                     	;# 
  1534  021C                     	;# 
  1535  021D                     	;# 
  1536  021D                     	;# 
  1537  021E                     	;# 
  1538  021F                     	;# 
  1539  028C                     	;# 
  1540  028E                     	;# 
  1541  0291                     	;# 
  1542  0291                     	;# 
  1543  0292                     	;# 
  1544  0293                     	;# 
  1545  0294                     	;# 
  1546  0295                     	;# 
  1547  0295                     	;# 
  1548  0296                     	;# 
  1549  0297                     	;# 
  1550  0298                     	;# 
  1551  029F                     	;# 
  1552  030C                     	;# 
  1553  030E                     	;# 
  1554  0311                     	;# 
  1555  0311                     	;# 
  1556  0312                     	;# 
  1557  0313                     	;# 
  1558  0314                     	;# 
  1559  0315                     	;# 
  1560  0315                     	;# 
  1561  0316                     	;# 
  1562  0317                     	;# 
  1563  0318                     	;# 
  1564  038C                     	;# 
  1565  038E                     	;# 
  1566  0391                     	;# 
  1567  0392                     	;# 
  1568  0393                     	;# 
  1569  0397                     	;# 
  1570  0398                     	;# 
  1571  0399                     	;# 
  1572  039A                     	;# 
  1573  039C                     	;# 
  1574  039D                     	;# 
  1575  039E                     	;# 
  1576  039F                     	;# 
  1577  0411                     	;# 
  1578  0411                     	;# 
  1579  0412                     	;# 
  1580  0413                     	;# 
  1581  0414                     	;# 
  1582  0415                     	;# 
  1583  0416                     	;# 
  1584  0417                     	;# 
  1585  0418                     	;# 
  1586  0418                     	;# 
  1587  0419                     	;# 
  1588  041A                     	;# 
  1589  041B                     	;# 
  1590  041C                     	;# 
  1591  041D                     	;# 
  1592  041E                     	;# 
  1593  041F                     	;# 
  1594  0498                     	;# 
  1595  0498                     	;# 
  1596  0499                     	;# 
  1597  049A                     	;# 
  1598  049B                     	;# 
  1599  049B                     	;# 
  1600  049C                     	;# 
  1601  049D                     	;# 
  1602  049E                     	;# 
  1603  049F                     	;# 
  1604  0617                     	;# 
  1605  0618                     	;# 
  1606  0619                     	;# 
  1607  0619                     	;# 
  1608  061A                     	;# 
  1609  061B                     	;# 
  1610  061C                     	;# 
  1611  061C                     	;# 
  1612  061F                     	;# 
  1613  0691                     	;# 
  1614  0692                     	;# 
  1615  0693                     	;# 
  1616  0694                     	;# 
  1617  0695                     	;# 
  1618  0696                     	;# 
  1619  0697                     	;# 
  1620  0698                     	;# 
  1621  0699                     	;# 
  1622  0711                     	;# 
  1623  0712                     	;# 
  1624  0713                     	;# 
  1625  0714                     	;# 
  1626  0715                     	;# 
  1627  0716                     	;# 
  1628  0717                     	;# 
  1629  0718                     	;# 
  1630  0719                     	;# 
  1631  0891                     	;# 
  1632  0891                     	;# 
  1633  0891                     	;# 
  1634  0891                     	;# 
  1635  0891                     	;# 
  1636  0891                     	;# 
  1637  0892                     	;# 
  1638  0892                     	;# 
  1639  0892                     	;# 
  1640  0893                     	;# 
  1641  0893                     	;# 
  1642  0893                     	;# 
  1643  0893                     	;# 
  1644  0893                     	;# 
  1645  0893                     	;# 
  1646  0894                     	;# 
  1647  0894                     	;# 
  1648  0894                     	;# 
  1649  0895                     	;# 
  1650  0895                     	;# 
  1651  0895                     	;# 
  1652  0896                     	;# 
  1653  0896                     	;# 
  1654  0896                     	;# 
  1655  089B                     	;# 
  1656  0911                     	;# 
  1657  0912                     	;# 
  1658  0913                     	;# 
  1659  0914                     	;# 
  1660  0915                     	;# 
  1661  0916                     	;# 
  1662  0918                     	;# 
  1663  0919                     	;# 
  1664  091A                     	;# 
  1665  091B                     	;# 
  1666  091C                     	;# 
  1667  091D                     	;# 
  1668  091E                     	;# 
  1669  091F                     	;# 
  1670  0E0F                     	;# 
  1671  0E10                     	;# 
  1672  0E11                     	;# 
  1673  0E12                     	;# 
  1674  0E13                     	;# 
  1675  0E14                     	;# 
  1676  0E15                     	;# 
  1677  0E16                     	;# 
  1678  0E17                     	;# 
  1679  0E18                     	;# 
  1680  0E19                     	;# 
  1681  0E1A                     	;# 
  1682  0E1B                     	;# 
  1683  0E1C                     	;# 
  1684  0E1D                     	;# 
  1685  0E1E                     	;# 
  1686  0E1F                     	;# 
  1687  0E20                     	;# 
  1688  0E21                     	;# 
  1689  0E22                     	;# 
  1690  0E24                     	;# 
  1691  0E25                     	;# 
  1692  0E28                     	;# 
  1693  0E29                     	;# 
  1694  0E2A                     	;# 
  1695  0E2B                     	;# 
  1696  0E2C                     	;# 
  1697  0E2D                     	;# 
  1698  0E2E                     	;# 
  1699  0E2F                     	;# 
  1700  0E90                     	;# 
  1701  0E91                     	;# 
  1702  0E92                     	;# 
  1703  0E94                     	;# 
  1704  0E95                     	;# 
  1705  0EA0                     	;# 
  1706  0EA1                     	;# 
  1707  0EA2                     	;# 
  1708  0EA3                     	;# 
  1709  0EA4                     	;# 
  1710  0EA5                     	;# 
  1711  0F0F                     	;# 
  1712  0F10                     	;# 
  1713  0F11                     	;# 
  1714  0F12                     	;# 
  1715  0F13                     	;# 
  1716  0F14                     	;# 
  1717  0F15                     	;# 
  1718  0F16                     	;# 
  1719  0F17                     	;# 
  1720  0F18                     	;# 
  1721  0F19                     	;# 
  1722  0F1A                     	;# 
  1723  0F1B                     	;# 
  1724  0F1C                     	;# 
  1725  0F1D                     	;# 
  1726  0F1E                     	;# 
  1727  0F1F                     	;# 
  1728  0F20                     	;# 
  1729  0F21                     	;# 
  1730  0F22                     	;# 
  1731  0F23                     	;# 
  1732  0F24                     	;# 
  1733  0F25                     	;# 
  1734  0F26                     	;# 
  1735  0F27                     	;# 
  1736  0F28                     	;# 
  1737  0F29                     	;# 
  1738  0F2A                     	;# 
  1739  0F2B                     	;# 
  1740  0F2C                     	;# 
  1741  0F2D                     	;# 
  1742  0F2E                     	;# 
  1743  0F2F                     	;# 
  1744  0F30                     	;# 
  1745  0F31                     	;# 
  1746  0F32                     	;# 
  1747  0F33                     	;# 
  1748  0F34                     	;# 
  1749  0F35                     	;# 
  1750  0F36                     	;# 
  1751  0F37                     	;# 
  1752  0FE4                     	;# 
  1753  0FE5                     	;# 
  1754  0FE6                     	;# 
  1755  0FE7                     	;# 
  1756  0FE8                     	;# 
  1757  0FE9                     	;# 
  1758  0FEA                     	;# 
  1759  0FEB                     	;# 
  1760  0FED                     	;# 
  1761  0FEE                     	;# 
  1762  0FEF                     	;# 
  1763  0000                     	;# 
  1764  0001                     	;# 
  1765  0002                     	;# 
  1766  0003                     	;# 
  1767  0004                     	;# 
  1768  0005                     	;# 
  1769  0006                     	;# 
  1770  0007                     	;# 
  1771  0008                     	;# 
  1772  0009                     	;# 
  1773  000A                     	;# 
  1774  000B                     	;# 
  1775  000C                     	;# 
  1776  000E                     	;# 
  1777  0010                     	;# 
  1778  0011                     	;# 
  1779  0012                     	;# 
  1780  0013                     	;# 
  1781  0014                     	;# 
  1782  0015                     	;# 
  1783  0015                     	;# 
  1784  0016                     	;# 
  1785  0016                     	;# 
  1786  0017                     	;# 
  1787  0018                     	;# 
  1788  0019                     	;# 
  1789  0019                     	;# 
  1790  001A                     	;# 
  1791  001B                     	;# 
  1792  001C                     	;# 
  1793  001D                     	;# 
  1794  001E                     	;# 
  1795  001F                     	;# 
  1796  008C                     	;# 
  1797  008E                     	;# 
  1798  0090                     	;# 
  1799  0091                     	;# 
  1800  0092                     	;# 
  1801  0093                     	;# 
  1802  0094                     	;# 
  1803  0097                     	;# 
  1804  009B                     	;# 
  1805  009B                     	;# 
  1806  009C                     	;# 
  1807  009D                     	;# 
  1808  009E                     	;# 
  1809  009F                     	;# 
  1810  010C                     	;# 
  1811  010E                     	;# 
  1812  0111                     	;# 
  1813  0112                     	;# 
  1814  0113                     	;# 
  1815  0114                     	;# 
  1816  0115                     	;# 
  1817  0116                     	;# 
  1818  0117                     	;# 
  1819  0118                     	;# 
  1820  0119                     	;# 
  1821  018C                     	;# 
  1822  018E                     	;# 
  1823  0197                     	;# 
  1824  0199                     	;# 
  1825  0199                     	;# 
  1826  0199                     	;# 
  1827  019A                     	;# 
  1828  019A                     	;# 
  1829  019A                     	;# 
  1830  019B                     	;# 
  1831  019B                     	;# 
  1832  019B                     	;# 
  1833  019B                     	;# 
  1834  019B                     	;# 
  1835  019C                     	;# 
  1836  019C                     	;# 
  1837  019C                     	;# 
  1838  019D                     	;# 
  1839  019D                     	;# 
  1840  019D                     	;# 
  1841  019E                     	;# 
  1842  019E                     	;# 
  1843  019E                     	;# 
  1844  019F                     	;# 
  1845  019F                     	;# 
  1846  019F                     	;# 
  1847  019F                     	;# 
  1848  019F                     	;# 
  1849  020C                     	;# 
  1850  020E                     	;# 
  1851  0211                     	;# 
  1852  0211                     	;# 
  1853  0212                     	;# 
  1854  0212                     	;# 
  1855  0213                     	;# 
  1856  0213                     	;# 
  1857  0214                     	;# 
  1858  0214                     	;# 
  1859  0215                     	;# 
  1860  0215                     	;# 
  1861  0215                     	;# 
  1862  0215                     	;# 
  1863  0216                     	;# 
  1864  0216                     	;# 
  1865  0217                     	;# 
  1866  0217                     	;# 
  1867  0219                     	;# 
  1868  021A                     	;# 
  1869  021B                     	;# 
  1870  021C                     	;# 
  1871  021D                     	;# 
  1872  021D                     	;# 
  1873  021E                     	;# 
  1874  021F                     	;# 
  1875  028C                     	;# 
  1876  028E                     	;# 
  1877  0291                     	;# 
  1878  0291                     	;# 
  1879  0292                     	;# 
  1880  0293                     	;# 
  1881  0294                     	;# 
  1882  0295                     	;# 
  1883  0295                     	;# 
  1884  0296                     	;# 
  1885  0297                     	;# 
  1886  0298                     	;# 
  1887  029F                     	;# 
  1888  030C                     	;# 
  1889  030E                     	;# 
  1890  0311                     	;# 
  1891  0311                     	;# 
  1892  0312                     	;# 
  1893  0313                     	;# 
  1894  0314                     	;# 
  1895  0315                     	;# 
  1896  0315                     	;# 
  1897  0316                     	;# 
  1898  0317                     	;# 
  1899  0318                     	;# 
  1900  038C                     	;# 
  1901  038E                     	;# 
  1902  0391                     	;# 
  1903  0392                     	;# 
  1904  0393                     	;# 
  1905  0397                     	;# 
  1906  0398                     	;# 
  1907  0399                     	;# 
  1908  039A                     	;# 
  1909  039C                     	;# 
  1910  039D                     	;# 
  1911  039E                     	;# 
  1912  039F                     	;# 
  1913  0411                     	;# 
  1914  0411                     	;# 
  1915  0412                     	;# 
  1916  0413                     	;# 
  1917  0414                     	;# 
  1918  0415                     	;# 
  1919  0416                     	;# 
  1920  0417                     	;# 
  1921  0418                     	;# 
  1922  0418                     	;# 
  1923  0419                     	;# 
  1924  041A                     	;# 
  1925  041B                     	;# 
  1926  041C                     	;# 
  1927  041D                     	;# 
  1928  041E                     	;# 
  1929  041F                     	;# 
  1930  0498                     	;# 
  1931  0498                     	;# 
  1932  0499                     	;# 
  1933  049A                     	;# 
  1934  049B                     	;# 
  1935  049B                     	;# 
  1936  049C                     	;# 
  1937  049D                     	;# 
  1938  049E                     	;# 
  1939  049F                     	;# 
  1940  0617                     	;# 
  1941  0618                     	;# 
  1942  0619                     	;# 
  1943  0619                     	;# 
  1944  061A                     	;# 
  1945  061B                     	;# 
  1946  061C                     	;# 
  1947  061C                     	;# 
  1948  061F                     	;# 
  1949  0691                     	;# 
  1950  0692                     	;# 
  1951  0693                     	;# 
  1952  0694                     	;# 
  1953  0695                     	;# 
  1954  0696                     	;# 
  1955  0697                     	;# 
  1956  0698                     	;# 
  1957  0699                     	;# 
  1958  0711                     	;# 
  1959  0712                     	;# 
  1960  0713                     	;# 
  1961  0714                     	;# 
  1962  0715                     	;# 
  1963  0716                     	;# 
  1964  0717                     	;# 
  1965  0718                     	;# 
  1966  0719                     	;# 
  1967  0891                     	;# 
  1968  0891                     	;# 
  1969  0891                     	;# 
  1970  0891                     	;# 
  1971  0891                     	;# 
  1972  0891                     	;# 
  1973  0892                     	;# 
  1974  0892                     	;# 
  1975  0892                     	;# 
  1976  0893                     	;# 
  1977  0893                     	;# 
  1978  0893                     	;# 
  1979  0893                     	;# 
  1980  0893                     	;# 
  1981  0893                     	;# 
  1982  0894                     	;# 
  1983  0894                     	;# 
  1984  0894                     	;# 
  1985  0895                     	;# 
  1986  0895                     	;# 
  1987  0895                     	;# 
  1988  0896                     	;# 
  1989  0896                     	;# 
  1990  0896                     	;# 
  1991  089B                     	;# 
  1992  0911                     	;# 
  1993  0912                     	;# 
  1994  0913                     	;# 
  1995  0914                     	;# 
  1996  0915                     	;# 
  1997  0916                     	;# 
  1998  0918                     	;# 
  1999  0919                     	;# 
  2000  091A                     	;# 
  2001  091B                     	;# 
  2002  091C                     	;# 
  2003  091D                     	;# 
  2004  091E                     	;# 
  2005  091F                     	;# 
  2006  0E0F                     	;# 
  2007  0E10                     	;# 
  2008  0E11                     	;# 
  2009  0E12                     	;# 
  2010  0E13                     	;# 
  2011  0E14                     	;# 
  2012  0E15                     	;# 
  2013  0E16                     	;# 
  2014  0E17                     	;# 
  2015  0E18                     	;# 
  2016  0E19                     	;# 
  2017  0E1A                     	;# 
  2018  0E1B                     	;# 
  2019  0E1C                     	;# 
  2020  0E1D                     	;# 
  2021  0E1E                     	;# 
  2022  0E1F                     	;# 
  2023  0E20                     	;# 
  2024  0E21                     	;# 
  2025  0E22                     	;# 
  2026  0E24                     	;# 
  2027  0E25                     	;# 
  2028  0E28                     	;# 
  2029  0E29                     	;# 
  2030  0E2A                     	;# 
  2031  0E2B                     	;# 
  2032  0E2C                     	;# 
  2033  0E2D                     	;# 
  2034  0E2E                     	;# 
  2035  0E2F                     	;# 
  2036  0E90                     	;# 
  2037  0E91                     	;# 
  2038  0E92                     	;# 
  2039  0E94                     	;# 
  2040  0E95                     	;# 
  2041  0EA0                     	;# 
  2042  0EA1                     	;# 
  2043  0EA2                     	;# 
  2044  0EA3                     	;# 
  2045  0EA4                     	;# 
  2046  0EA5                     	;# 
  2047  0F0F                     	;# 
  2048  0F10                     	;# 
  2049  0F11                     	;# 
  2050  0F12                     	;# 
  2051  0F13                     	;# 
  2052  0F14                     	;# 
  2053  0F15                     	;# 
  2054  0F16                     	;# 
  2055  0F17                     	;# 
  2056  0F18                     	;# 
  2057  0F19                     	;# 
  2058  0F1A                     	;# 
  2059  0F1B                     	;# 
  2060  0F1C                     	;# 
  2061  0F1D                     	;# 
  2062  0F1E                     	;# 
  2063  0F1F                     	;# 
  2064  0F20                     	;# 
  2065  0F21                     	;# 
  2066  0F22                     	;# 
  2067  0F23                     	;# 
  2068  0F24                     	;# 
  2069  0F25                     	;# 
  2070  0F26                     	;# 
  2071  0F27                     	;# 
  2072  0F28                     	;# 
  2073  0F29                     	;# 
  2074  0F2A                     	;# 
  2075  0F2B                     	;# 
  2076  0F2C                     	;# 
  2077  0F2D                     	;# 
  2078  0F2E                     	;# 
  2079  0F2F                     	;# 
  2080  0F30                     	;# 
  2081  0F31                     	;# 
  2082  0F32                     	;# 
  2083  0F33                     	;# 
  2084  0F34                     	;# 
  2085  0F35                     	;# 
  2086  0F36                     	;# 
  2087  0F37                     	;# 
  2088  0FE4                     	;# 
  2089  0FE5                     	;# 
  2090  0FE6                     	;# 
  2091  0FE7                     	;# 
  2092  0FE8                     	;# 
  2093  0FE9                     	;# 
  2094  0FEA                     	;# 
  2095  0FEB                     	;# 
  2096  0FED                     	;# 
  2097  0FEE                     	;# 
  2098  0FEF                     	;# 
  2099  0000                     	;# 
  2100  0001                     	;# 
  2101  0002                     	;# 
  2102  0003                     	;# 
  2103  0004                     	;# 
  2104  0005                     	;# 
  2105  0006                     	;# 
  2106  0007                     	;# 
  2107  0008                     	;# 
  2108  0009                     	;# 
  2109  000A                     	;# 
  2110  000B                     	;# 
  2111  000C                     	;# 
  2112  000E                     	;# 
  2113  0010                     	;# 
  2114  0011                     	;# 
  2115  0012                     	;# 
  2116  0013                     	;# 
  2117  0014                     	;# 
  2118  0015                     	;# 
  2119  0015                     	;# 
  2120  0016                     	;# 
  2121  0016                     	;# 
  2122  0017                     	;# 
  2123  0018                     	;# 
  2124  0019                     	;# 
  2125  0019                     	;# 
  2126  001A                     	;# 
  2127  001B                     	;# 
  2128  001C                     	;# 
  2129  001D                     	;# 
  2130  001E                     	;# 
  2131  001F                     	;# 
  2132  008C                     	;# 
  2133  008E                     	;# 
  2134  0090                     	;# 
  2135  0091                     	;# 
  2136  0092                     	;# 
  2137  0093                     	;# 
  2138  0094                     	;# 
  2139  0097                     	;# 
  2140  009B                     	;# 
  2141  009B                     	;# 
  2142  009C                     	;# 
  2143  009D                     	;# 
  2144  009E                     	;# 
  2145  009F                     	;# 
  2146  010C                     	;# 
  2147  010E                     	;# 
  2148  0111                     	;# 
  2149  0112                     	;# 
  2150  0113                     	;# 
  2151  0114                     	;# 
  2152  0115                     	;# 
  2153  0116                     	;# 
  2154  0117                     	;# 
  2155  0118                     	;# 
  2156  0119                     	;# 
  2157  018C                     	;# 
  2158  018E                     	;# 
  2159  0197                     	;# 
  2160  0199                     	;# 
  2161  0199                     	;# 
  2162  0199                     	;# 
  2163  019A                     	;# 
  2164  019A                     	;# 
  2165  019A                     	;# 
  2166  019B                     	;# 
  2167  019B                     	;# 
  2168  019B                     	;# 
  2169  019B                     	;# 
  2170  019B                     	;# 
  2171  019C                     	;# 
  2172  019C                     	;# 
  2173  019C                     	;# 
  2174  019D                     	;# 
  2175  019D                     	;# 
  2176  019D                     	;# 
  2177  019E                     	;# 
  2178  019E                     	;# 
  2179  019E                     	;# 
  2180  019F                     	;# 
  2181  019F                     	;# 
  2182  019F                     	;# 
  2183  019F                     	;# 
  2184  019F                     	;# 
  2185  020C                     	;# 
  2186  020E                     	;# 
  2187  0211                     	;# 
  2188  0211                     	;# 
  2189  0212                     	;# 
  2190  0212                     	;# 
  2191  0213                     	;# 
  2192  0213                     	;# 
  2193  0214                     	;# 
  2194  0214                     	;# 
  2195  0215                     	;# 
  2196  0215                     	;# 
  2197  0215                     	;# 
  2198  0215                     	;# 
  2199  0216                     	;# 
  2200  0216                     	;# 
  2201  0217                     	;# 
  2202  0217                     	;# 
  2203  0219                     	;# 
  2204  021A                     	;# 
  2205  021B                     	;# 
  2206  021C                     	;# 
  2207  021D                     	;# 
  2208  021D                     	;# 
  2209  021E                     	;# 
  2210  021F                     	;# 
  2211  028C                     	;# 
  2212  028E                     	;# 
  2213  0291                     	;# 
  2214  0291                     	;# 
  2215  0292                     	;# 
  2216  0293                     	;# 
  2217  0294                     	;# 
  2218  0295                     	;# 
  2219  0295                     	;# 
  2220  0296                     	;# 
  2221  0297                     	;# 
  2222  0298                     	;# 
  2223  029F                     	;# 
  2224  030C                     	;# 
  2225  030E                     	;# 
  2226  0311                     	;# 
  2227  0311                     	;# 
  2228  0312                     	;# 
  2229  0313                     	;# 
  2230  0314                     	;# 
  2231  0315                     	;# 
  2232  0315                     	;# 
  2233  0316                     	;# 
  2234  0317                     	;# 
  2235  0318                     	;# 
  2236  038C                     	;# 
  2237  038E                     	;# 
  2238  0391                     	;# 
  2239  0392                     	;# 
  2240  0393                     	;# 
  2241  0397                     	;# 
  2242  0398                     	;# 
  2243  0399                     	;# 
  2244  039A                     	;# 
  2245  039C                     	;# 
  2246  039D                     	;# 
  2247  039E                     	;# 
  2248  039F                     	;# 
  2249  0411                     	;# 
  2250  0411                     	;# 
  2251  0412                     	;# 
  2252  0413                     	;# 
  2253  0414                     	;# 
  2254  0415                     	;# 
  2255  0416                     	;# 
  2256  0417                     	;# 
  2257  0418                     	;# 
  2258  0418                     	;# 
  2259  0419                     	;# 
  2260  041A                     	;# 
  2261  041B                     	;# 
  2262  041C                     	;# 
  2263  041D                     	;# 
  2264  041E                     	;# 
  2265  041F                     	;# 
  2266  0498                     	;# 
  2267  0498                     	;# 
  2268  0499                     	;# 
  2269  049A                     	;# 
  2270  049B                     	;# 
  2271  049B                     	;# 
  2272  049C                     	;# 
  2273  049D                     	;# 
  2274  049E                     	;# 
  2275  049F                     	;# 
  2276  0617                     	;# 
  2277  0618                     	;# 
  2278  0619                     	;# 
  2279  0619                     	;# 
  2280  061A                     	;# 
  2281  061B                     	;# 
  2282  061C                     	;# 
  2283  061C                     	;# 
  2284  061F                     	;# 
  2285  0691                     	;# 
  2286  0692                     	;# 
  2287  0693                     	;# 
  2288  0694                     	;# 
  2289  0695                     	;# 
  2290  0696                     	;# 
  2291  0697                     	;# 
  2292  0698                     	;# 
  2293  0699                     	;# 
  2294  0711                     	;# 
  2295  0712                     	;# 
  2296  0713                     	;# 
  2297  0714                     	;# 
  2298  0715                     	;# 
  2299  0716                     	;# 
  2300  0717                     	;# 
  2301  0718                     	;# 
  2302  0719                     	;# 
  2303  0891                     	;# 
  2304  0891                     	;# 
  2305  0891                     	;# 
  2306  0891                     	;# 
  2307  0891                     	;# 
  2308  0891                     	;# 
  2309  0892                     	;# 
  2310  0892                     	;# 
  2311  0892                     	;# 
  2312  0893                     	;# 
  2313  0893                     	;# 
  2314  0893                     	;# 
  2315  0893                     	;# 
  2316  0893                     	;# 
  2317  0893                     	;# 
  2318  0894                     	;# 
  2319  0894                     	;# 
  2320  0894                     	;# 
  2321  0895                     	;# 
  2322  0895                     	;# 
  2323  0895                     	;# 
  2324  0896                     	;# 
  2325  0896                     	;# 
  2326  0896                     	;# 
  2327  089B                     	;# 
  2328  0911                     	;# 
  2329  0912                     	;# 
  2330  0913                     	;# 
  2331  0914                     	;# 
  2332  0915                     	;# 
  2333  0916                     	;# 
  2334  0918                     	;# 
  2335  0919                     	;# 
  2336  091A                     	;# 
  2337  091B                     	;# 
  2338  091C                     	;# 
  2339  091D                     	;# 
  2340  091E                     	;# 
  2341  091F                     	;# 
  2342  0E0F                     	;# 
  2343  0E10                     	;# 
  2344  0E11                     	;# 
  2345  0E12                     	;# 
  2346  0E13                     	;# 
  2347  0E14                     	;# 
  2348  0E15                     	;# 
  2349  0E16                     	;# 
  2350  0E17                     	;# 
  2351  0E18                     	;# 
  2352  0E19                     	;# 
  2353  0E1A                     	;# 
  2354  0E1B                     	;# 
  2355  0E1C                     	;# 
  2356  0E1D                     	;# 
  2357  0E1E                     	;# 
  2358  0E1F                     	;# 
  2359  0E20                     	;# 
  2360  0E21                     	;# 
  2361  0E22                     	;# 
  2362  0E24                     	;# 
  2363  0E25                     	;# 
  2364  0E28                     	;# 
  2365  0E29                     	;# 
  2366  0E2A                     	;# 
  2367  0E2B                     	;# 
  2368  0E2C                     	;# 
  2369  0E2D                     	;# 
  2370  0E2E                     	;# 
  2371  0E2F                     	;# 
  2372  0E90                     	;# 
  2373  0E91                     	;# 
  2374  0E92                     	;# 
  2375  0E94                     	;# 
  2376  0E95                     	;# 
  2377  0EA0                     	;# 
  2378  0EA1                     	;# 
  2379  0EA2                     	;# 
  2380  0EA3                     	;# 
  2381  0EA4                     	;# 
  2382  0EA5                     	;# 
  2383  0F0F                     	;# 
  2384  0F10                     	;# 
  2385  0F11                     	;# 
  2386  0F12                     	;# 
  2387  0F13                     	;# 
  2388  0F14                     	;# 
  2389  0F15                     	;# 
  2390  0F16                     	;# 
  2391  0F17                     	;# 
  2392  0F18                     	;# 
  2393  0F19                     	;# 
  2394  0F1A                     	;# 
  2395  0F1B                     	;# 
  2396  0F1C                     	;# 
  2397  0F1D                     	;# 
  2398  0F1E                     	;# 
  2399  0F1F                     	;# 
  2400  0F20                     	;# 
  2401  0F21                     	;# 
  2402  0F22                     	;# 
  2403  0F23                     	;# 
  2404  0F24                     	;# 
  2405  0F25                     	;# 
  2406  0F26                     	;# 
  2407  0F27                     	;# 
  2408  0F28                     	;# 
  2409  0F29                     	;# 
  2410  0F2A                     	;# 
  2411  0F2B                     	;# 
  2412  0F2C                     	;# 
  2413  0F2D                     	;# 
  2414  0F2E                     	;# 
  2415  0F2F                     	;# 
  2416  0F30                     	;# 
  2417  0F31                     	;# 
  2418  0F32                     	;# 
  2419  0F33                     	;# 
  2420  0F34                     	;# 
  2421  0F35                     	;# 
  2422  0F36                     	;# 
  2423  0F37                     	;# 
  2424  0FE4                     	;# 
  2425  0FE5                     	;# 
  2426  0FE6                     	;# 
  2427  0FE7                     	;# 
  2428  0FE8                     	;# 
  2429  0FE9                     	;# 
  2430  0FEA                     	;# 
  2431  0FEB                     	;# 
  2432  0FED                     	;# 
  2433  0FEE                     	;# 
  2434  0FEF                     	;# 
  2435  0000                     	;# 
  2436  0001                     	;# 
  2437  0002                     	;# 
  2438  0003                     	;# 
  2439  0004                     	;# 
  2440  0005                     	;# 
  2441  0006                     	;# 
  2442  0007                     	;# 
  2443  0008                     	;# 
  2444  0009                     	;# 
  2445  000A                     	;# 
  2446  000B                     	;# 
  2447  000C                     	;# 
  2448  000E                     	;# 
  2449  0010                     	;# 
  2450  0011                     	;# 
  2451  0012                     	;# 
  2452  0013                     	;# 
  2453  0014                     	;# 
  2454  0015                     	;# 
  2455  0015                     	;# 
  2456  0016                     	;# 
  2457  0016                     	;# 
  2458  0017                     	;# 
  2459  0018                     	;# 
  2460  0019                     	;# 
  2461  0019                     	;# 
  2462  001A                     	;# 
  2463  001B                     	;# 
  2464  001C                     	;# 
  2465  001D                     	;# 
  2466  001E                     	;# 
  2467  001F                     	;# 
  2468  008C                     	;# 
  2469  008E                     	;# 
  2470  0090                     	;# 
  2471  0091                     	;# 
  2472  0092                     	;# 
  2473  0093                     	;# 
  2474  0094                     	;# 
  2475  0097                     	;# 
  2476  009B                     	;# 
  2477  009B                     	;# 
  2478  009C                     	;# 
  2479  009D                     	;# 
  2480  009E                     	;# 
  2481  009F                     	;# 
  2482  010C                     	;# 
  2483  010E                     	;# 
  2484  0111                     	;# 
  2485  0112                     	;# 
  2486  0113                     	;# 
  2487  0114                     	;# 
  2488  0115                     	;# 
  2489  0116                     	;# 
  2490  0117                     	;# 
  2491  0118                     	;# 
  2492  0119                     	;# 
  2493  018C                     	;# 
  2494  018E                     	;# 
  2495  0197                     	;# 
  2496  0199                     	;# 
  2497  0199                     	;# 
  2498  0199                     	;# 
  2499  019A                     	;# 
  2500  019A                     	;# 
  2501  019A                     	;# 
  2502  019B                     	;# 
  2503  019B                     	;# 
  2504  019B                     	;# 
  2505  019B                     	;# 
  2506  019B                     	;# 
  2507  019C                     	;# 
  2508  019C                     	;# 
  2509  019C                     	;# 
  2510  019D                     	;# 
  2511  019D                     	;# 
  2512  019D                     	;# 
  2513  019E                     	;# 
  2514  019E                     	;# 
  2515  019E                     	;# 
  2516  019F                     	;# 
  2517  019F                     	;# 
  2518  019F                     	;# 
  2519  019F                     	;# 
  2520  019F                     	;# 
  2521  020C                     	;# 
  2522  020E                     	;# 
  2523  0211                     	;# 
  2524  0211                     	;# 
  2525  0212                     	;# 
  2526  0212                     	;# 
  2527  0213                     	;# 
  2528  0213                     	;# 
  2529  0214                     	;# 
  2530  0214                     	;# 
  2531  0215                     	;# 
  2532  0215                     	;# 
  2533  0215                     	;# 
  2534  0215                     	;# 
  2535  0216                     	;# 
  2536  0216                     	;# 
  2537  0217                     	;# 
  2538  0217                     	;# 
  2539  0219                     	;# 
  2540  021A                     	;# 
  2541  021B                     	;# 
  2542  021C                     	;# 
  2543  021D                     	;# 
  2544  021D                     	;# 
  2545  021E                     	;# 
  2546  021F                     	;# 
  2547  028C                     	;# 
  2548  028E                     	;# 
  2549  0291                     	;# 
  2550  0291                     	;# 
  2551  0292                     	;# 
  2552  0293                     	;# 
  2553  0294                     	;# 
  2554  0295                     	;# 
  2555  0295                     	;# 
  2556  0296                     	;# 
  2557  0297                     	;# 
  2558  0298                     	;# 
  2559  029F                     	;# 
  2560  030C                     	;# 
  2561  030E                     	;# 
  2562  0311                     	;# 
  2563  0311                     	;# 
  2564  0312                     	;# 
  2565  0313                     	;# 
  2566  0314                     	;# 
  2567  0315                     	;# 
  2568  0315                     	;# 
  2569  0316                     	;# 
  2570  0317                     	;# 
  2571  0318                     	;# 
  2572  038C                     	;# 
  2573  038E                     	;# 
  2574  0391                     	;# 
  2575  0392                     	;# 
  2576  0393                     	;# 
  2577  0397                     	;# 
  2578  0398                     	;# 
  2579  0399                     	;# 
  2580  039A                     	;# 
  2581  039C                     	;# 
  2582  039D                     	;# 
  2583  039E                     	;# 
  2584  039F                     	;# 
  2585  0411                     	;# 
  2586  0411                     	;# 
  2587  0412                     	;# 
  2588  0413                     	;# 
  2589  0414                     	;# 
  2590  0415                     	;# 
  2591  0416                     	;# 
  2592  0417                     	;# 
  2593  0418                     	;# 
  2594  0418                     	;# 
  2595  0419                     	;# 
  2596  041A                     	;# 
  2597  041B                     	;# 
  2598  041C                     	;# 
  2599  041D                     	;# 
  2600  041E                     	;# 
  2601  041F                     	;# 
  2602  0498                     	;# 
  2603  0498                     	;# 
  2604  0499                     	;# 
  2605  049A                     	;# 
  2606  049B                     	;# 
  2607  049B                     	;# 
  2608  049C                     	;# 
  2609  049D                     	;# 
  2610  049E                     	;# 
  2611  049F                     	;# 
  2612  0617                     	;# 
  2613  0618                     	;# 
  2614  0619                     	;# 
  2615  0619                     	;# 
  2616  061A                     	;# 
  2617  061B                     	;# 
  2618  061C                     	;# 
  2619  061C                     	;# 
  2620  061F                     	;# 
  2621  0691                     	;# 
  2622  0692                     	;# 
  2623  0693                     	;# 
  2624  0694                     	;# 
  2625  0695                     	;# 
  2626  0696                     	;# 
  2627  0697                     	;# 
  2628  0698                     	;# 
  2629  0699                     	;# 
  2630  0711                     	;# 
  2631  0712                     	;# 
  2632  0713                     	;# 
  2633  0714                     	;# 
  2634  0715                     	;# 
  2635  0716                     	;# 
  2636  0717                     	;# 
  2637  0718                     	;# 
  2638  0719                     	;# 
  2639  0891                     	;# 
  2640  0891                     	;# 
  2641  0891                     	;# 
  2642  0891                     	;# 
  2643  0891                     	;# 
  2644  0891                     	;# 
  2645  0892                     	;# 
  2646  0892                     	;# 
  2647  0892                     	;# 
  2648  0893                     	;# 
  2649  0893                     	;# 
  2650  0893                     	;# 
  2651  0893                     	;# 
  2652  0893                     	;# 
  2653  0893                     	;# 
  2654  0894                     	;# 
  2655  0894                     	;# 
  2656  0894                     	;# 
  2657  0895                     	;# 
  2658  0895                     	;# 
  2659  0895                     	;# 
  2660  0896                     	;# 
  2661  0896                     	;# 
  2662  0896                     	;# 
  2663  089B                     	;# 
  2664  0911                     	;# 
  2665  0912                     	;# 
  2666  0913                     	;# 
  2667  0914                     	;# 
  2668  0915                     	;# 
  2669  0916                     	;# 
  2670  0918                     	;# 
  2671  0919                     	;# 
  2672  091A                     	;# 
  2673  091B                     	;# 
  2674  091C                     	;# 
  2675  091D                     	;# 
  2676  091E                     	;# 
  2677  091F                     	;# 
  2678  0E0F                     	;# 
  2679  0E10                     	;# 
  2680  0E11                     	;# 
  2681  0E12                     	;# 
  2682  0E13                     	;# 
  2683  0E14                     	;# 
  2684  0E15                     	;# 
  2685  0E16                     	;# 
  2686  0E17                     	;# 
  2687  0E18                     	;# 
  2688  0E19                     	;# 
  2689  0E1A                     	;# 
  2690  0E1B                     	;# 
  2691  0E1C                     	;# 
  2692  0E1D                     	;# 
  2693  0E1E                     	;# 
  2694  0E1F                     	;# 
  2695  0E20                     	;# 
  2696  0E21                     	;# 
  2697  0E22                     	;# 
  2698  0E24                     	;# 
  2699  0E25                     	;# 
  2700  0E28                     	;# 
  2701  0E29                     	;# 
  2702  0E2A                     	;# 
  2703  0E2B                     	;# 
  2704  0E2C                     	;# 
  2705  0E2D                     	;# 
  2706  0E2E                     	;# 
  2707  0E2F                     	;# 
  2708  0E90                     	;# 
  2709  0E91                     	;# 
  2710  0E92                     	;# 
  2711  0E94                     	;# 
  2712  0E95                     	;# 
  2713  0EA0                     	;# 
  2714  0EA1                     	;# 
  2715  0EA2                     	;# 
  2716  0EA3                     	;# 
  2717  0EA4                     	;# 
  2718  0EA5                     	;# 
  2719  0F0F                     	;# 
  2720  0F10                     	;# 
  2721  0F11                     	;# 
  2722  0F12                     	;# 
  2723  0F13                     	;# 
  2724  0F14                     	;# 
  2725  0F15                     	;# 
  2726  0F16                     	;# 
  2727  0F17                     	;# 
  2728  0F18                     	;# 
  2729  0F19                     	;# 
  2730  0F1A                     	;# 
  2731  0F1B                     	;# 
  2732  0F1C                     	;# 
  2733  0F1D                     	;# 
  2734  0F1E                     	;# 
  2735  0F1F                     	;# 
  2736  0F20                     	;# 
  2737  0F21                     	;# 
  2738  0F22                     	;# 
  2739  0F23                     	;# 
  2740  0F24                     	;# 
  2741  0F25                     	;# 
  2742  0F26                     	;# 
  2743  0F27                     	;# 
  2744  0F28                     	;# 
  2745  0F29                     	;# 
  2746  0F2A                     	;# 
  2747  0F2B                     	;# 
  2748  0F2C                     	;# 
  2749  0F2D                     	;# 
  2750  0F2E                     	;# 
  2751  0F2F                     	;# 
  2752  0F30                     	;# 
  2753  0F31                     	;# 
  2754  0F32                     	;# 
  2755  0F33                     	;# 
  2756  0F34                     	;# 
  2757  0F35                     	;# 
  2758  0F36                     	;# 
  2759  0F37                     	;# 
  2760  0FE4                     	;# 
  2761  0FE5                     	;# 
  2762  0FE6                     	;# 
  2763  0FE7                     	;# 
  2764  0FE8                     	;# 
  2765  0FE9                     	;# 
  2766  0FEA                     	;# 
  2767  0FEB                     	;# 
  2768  0FED                     	;# 
  2769  0FEE                     	;# 
  2770  0FEF                     	;# 
  2771  0000                     	;# 
  2772  0001                     	;# 
  2773  0002                     	;# 
  2774  0003                     	;# 
  2775  0004                     	;# 
  2776  0005                     	;# 
  2777  0006                     	;# 
  2778  0007                     	;# 
  2779  0008                     	;# 
  2780  0009                     	;# 
  2781  000A                     	;# 
  2782  000B                     	;# 
  2783  000C                     	;# 
  2784  000E                     	;# 
  2785  0010                     	;# 
  2786  0011                     	;# 
  2787  0012                     	;# 
  2788  0013                     	;# 
  2789  0014                     	;# 
  2790  0015                     	;# 
  2791  0015                     	;# 
  2792  0016                     	;# 
  2793  0016                     	;# 
  2794  0017                     	;# 
  2795  0018                     	;# 
  2796  0019                     	;# 
  2797  0019                     	;# 
  2798  001A                     	;# 
  2799  001B                     	;# 
  2800  001C                     	;# 
  2801  001D                     	;# 
  2802  001E                     	;# 
  2803  001F                     	;# 
  2804  008C                     	;# 
  2805  008E                     	;# 
  2806  0090                     	;# 
  2807  0091                     	;# 
  2808  0092                     	;# 
  2809  0093                     	;# 
  2810  0094                     	;# 
  2811  0097                     	;# 
  2812  009B                     	;# 
  2813  009B                     	;# 
  2814  009C                     	;# 
  2815  009D                     	;# 
  2816  009E                     	;# 
  2817  009F                     	;# 
  2818  010C                     	;# 
  2819  010E                     	;# 
  2820  0111                     	;# 
  2821  0112                     	;# 
  2822  0113                     	;# 
  2823  0114                     	;# 
  2824  0115                     	;# 
  2825  0116                     	;# 
  2826  0117                     	;# 
  2827  0118                     	;# 
  2828  0119                     	;# 
  2829  018C                     	;# 
  2830  018E                     	;# 
  2831  0197                     	;# 
  2832  0199                     	;# 
  2833  0199                     	;# 
  2834  0199                     	;# 
  2835  019A                     	;# 
  2836  019A                     	;# 
  2837  019A                     	;# 
  2838  019B                     	;# 
  2839  019B                     	;# 
  2840  019B                     	;# 
  2841  019B                     	;# 
  2842  019B                     	;# 
  2843  019C                     	;# 
  2844  019C                     	;# 
  2845  019C                     	;# 
  2846  019D                     	;# 
  2847  019D                     	;# 
  2848  019D                     	;# 
  2849  019E                     	;# 
  2850  019E                     	;# 
  2851  019E                     	;# 
  2852  019F                     	;# 
  2853  019F                     	;# 
  2854  019F                     	;# 
  2855  019F                     	;# 
  2856  019F                     	;# 
  2857  020C                     	;# 
  2858  020E                     	;# 
  2859  0211                     	;# 
  2860  0211                     	;# 
  2861  0212                     	;# 
  2862  0212                     	;# 
  2863  0213                     	;# 
  2864  0213                     	;# 
  2865  0214                     	;# 
  2866  0214                     	;# 
  2867  0215                     	;# 
  2868  0215                     	;# 
  2869  0215                     	;# 
  2870  0215                     	;# 
  2871  0216                     	;# 
  2872  0216                     	;# 
  2873  0217                     	;# 
  2874  0217                     	;# 
  2875  0219                     	;# 
  2876  021A                     	;# 
  2877  021B                     	;# 
  2878  021C                     	;# 
  2879  021D                     	;# 
  2880  021D                     	;# 
  2881  021E                     	;# 
  2882  021F                     	;# 
  2883  028C                     	;# 
  2884  028E                     	;# 
  2885  0291                     	;# 
  2886  0291                     	;# 
  2887  0292                     	;# 
  2888  0293                     	;# 
  2889  0294                     	;# 
  2890  0295                     	;# 
  2891  0295                     	;# 
  2892  0296                     	;# 
  2893  0297                     	;# 
  2894  0298                     	;# 
  2895  029F                     	;# 
  2896  030C                     	;# 
  2897  030E                     	;# 
  2898  0311                     	;# 
  2899  0311                     	;# 
  2900  0312                     	;# 
  2901  0313                     	;# 
  2902  0314                     	;# 
  2903  0315                     	;# 
  2904  0315                     	;# 
  2905  0316                     	;# 
  2906  0317                     	;# 
  2907  0318                     	;# 
  2908  038C                     	;# 
  2909  038E                     	;# 
  2910  0391                     	;# 
  2911  0392                     	;# 
  2912  0393                     	;# 
  2913  0397                     	;# 
  2914  0398                     	;# 
  2915  0399                     	;# 
  2916  039A                     	;# 
  2917  039C                     	;# 
  2918  039D                     	;# 
  2919  039E                     	;# 
  2920  039F                     	;# 
  2921  0411                     	;# 
  2922  0411                     	;# 
  2923  0412                     	;# 
  2924  0413                     	;# 
  2925  0414                     	;# 
  2926  0415                     	;# 
  2927  0416                     	;# 
  2928  0417                     	;# 
  2929  0418                     	;# 
  2930  0418                     	;# 
  2931  0419                     	;# 
  2932  041A                     	;# 
  2933  041B                     	;# 
  2934  041C                     	;# 
  2935  041D                     	;# 
  2936  041E                     	;# 
  2937  041F                     	;# 
  2938  0498                     	;# 
  2939  0498                     	;# 
  2940  0499                     	;# 
  2941  049A                     	;# 
  2942  049B                     	;# 
  2943  049B                     	;# 
  2944  049C                     	;# 
  2945  049D                     	;# 
  2946  049E                     	;# 
  2947  049F                     	;# 
  2948  0617                     	;# 
  2949  0618                     	;# 
  2950  0619                     	;# 
  2951  0619                     	;# 
  2952  061A                     	;# 
  2953  061B                     	;# 
  2954  061C                     	;# 
  2955  061C                     	;# 
  2956  061F                     	;# 
  2957  0691                     	;# 
  2958  0692                     	;# 
  2959  0693                     	;# 
  2960  0694                     	;# 
  2961  0695                     	;# 
  2962  0696                     	;# 
  2963  0697                     	;# 
  2964  0698                     	;# 
  2965  0699                     	;# 
  2966  0711                     	;# 
  2967  0712                     	;# 
  2968  0713                     	;# 
  2969  0714                     	;# 
  2970  0715                     	;# 
  2971  0716                     	;# 
  2972  0717                     	;# 
  2973  0718                     	;# 
  2974  0719                     	;# 
  2975  0891                     	;# 
  2976  0891                     	;# 
  2977  0891                     	;# 
  2978  0891                     	;# 
  2979  0891                     	;# 
  2980  0891                     	;# 
  2981  0892                     	;# 
  2982  0892                     	;# 
  2983  0892                     	;# 
  2984  0893                     	;# 
  2985  0893                     	;# 
  2986  0893                     	;# 
  2987  0893                     	;# 
  2988  0893                     	;# 
  2989  0893                     	;# 
  2990  0894                     	;# 
  2991  0894                     	;# 
  2992  0894                     	;# 
  2993  0895                     	;# 
  2994  0895                     	;# 
  2995  0895                     	;# 
  2996  0896                     	;# 
  2997  0896                     	;# 
  2998  0896                     	;# 
  2999  089B                     	;# 
  3000  0911                     	;# 
  3001  0912                     	;# 
  3002  0913                     	;# 
  3003  0914                     	;# 
  3004  0915                     	;# 
  3005  0916                     	;# 
  3006  0918                     	;# 
  3007  0919                     	;# 
  3008  091A                     	;# 
  3009  091B                     	;# 
  3010  091C                     	;# 
  3011  091D                     	;# 
  3012  091E                     	;# 
  3013  091F                     	;# 
  3014  0E0F                     	;# 
  3015  0E10                     	;# 
  3016  0E11                     	;# 
  3017  0E12                     	;# 
  3018  0E13                     	;# 
  3019  0E14                     	;# 
  3020  0E15                     	;# 
  3021  0E16                     	;# 
  3022  0E17                     	;# 
  3023  0E18                     	;# 
  3024  0E19                     	;# 
  3025  0E1A                     	;# 
  3026  0E1B                     	;# 
  3027  0E1C                     	;# 
  3028  0E1D                     	;# 
  3029  0E1E                     	;# 
  3030  0E1F                     	;# 
  3031  0E20                     	;# 
  3032  0E21                     	;# 
  3033  0E22                     	;# 
  3034  0E24                     	;# 
  3035  0E25                     	;# 
  3036  0E28                     	;# 
  3037  0E29                     	;# 
  3038  0E2A                     	;# 
  3039  0E2B                     	;# 
  3040  0E2C                     	;# 
  3041  0E2D                     	;# 
  3042  0E2E                     	;# 
  3043  0E2F                     	;# 
  3044  0E90                     	;# 
  3045  0E91                     	;# 
  3046  0E92                     	;# 
  3047  0E94                     	;# 
  3048  0E95                     	;# 
  3049  0EA0                     	;# 
  3050  0EA1                     	;# 
  3051  0EA2                     	;# 
  3052  0EA3                     	;# 
  3053  0EA4                     	;# 
  3054  0EA5                     	;# 
  3055  0F0F                     	;# 
  3056  0F10                     	;# 
  3057  0F11                     	;# 
  3058  0F12                     	;# 
  3059  0F13                     	;# 
  3060  0F14                     	;# 
  3061  0F15                     	;# 
  3062  0F16                     	;# 
  3063  0F17                     	;# 
  3064  0F18                     	;# 
  3065  0F19                     	;# 
  3066  0F1A                     	;# 
  3067  0F1B                     	;# 
  3068  0F1C                     	;# 
  3069  0F1D                     	;# 
  3070  0F1E                     	;# 
  3071  0F1F                     	;# 
  3072  0F20                     	;# 
  3073  0F21                     	;# 
  3074  0F22                     	;# 
  3075  0F23                     	;# 
  3076  0F24                     	;# 
  3077  0F25                     	;# 
  3078  0F26                     	;# 
  3079  0F27                     	;# 
  3080  0F28                     	;# 
  3081  0F29                     	;# 
  3082  0F2A                     	;# 
  3083  0F2B                     	;# 
  3084  0F2C                     	;# 
  3085  0F2D                     	;# 
  3086  0F2E                     	;# 
  3087  0F2F                     	;# 
  3088  0F30                     	;# 
  3089  0F31                     	;# 
  3090  0F32                     	;# 
  3091  0F33                     	;# 
  3092  0F34                     	;# 
  3093  0F35                     	;# 
  3094  0F36                     	;# 
  3095  0F37                     	;# 
  3096  0FE4                     	;# 
  3097  0FE5                     	;# 
  3098  0FE6                     	;# 
  3099  0FE7                     	;# 
  3100  0FE8                     	;# 
  3101  0FE9                     	;# 
  3102  0FEA                     	;# 
  3103  0FEB                     	;# 
  3104  0FED                     	;# 
  3105  0FEE                     	;# 
  3106  0FEF                     	;_stage_stash
  3107                           
  3108 ;; Function _TMR1_DefaultInterruptHandler is unused but had its address taken
  3109  0000                     
  3110                           	psect	idataBANK0
  3111  03F4                     __pidataBANK0:	
  3112                           
  3113                           ;initializer for InitWigwagPattern@F439
  3114  03F4  3400               	retlw	0
  3115  03F5  3401               	retlw	1
  3116  03F6  3400               	retlw	0
  3117  03F7  3401               	retlw	1
  3118                           
  3119                           ;initializer for InitWigwagPattern@F436
  3120  03F8  3401               	retlw	1
  3121  03F9  3400               	retlw	0
  3122  03FA  3401               	retlw	1
  3123  03FB  3400               	retlw	0
  3124                           
  3125                           	psect	nvBANK0
  3126  006A                     __pnvBANK0:	
  3127  006A                     _TMR1_InterruptHandler:	
  3128  006A                     	ds	2
  3129  006C                     _timer1ReloadVal:	
  3130  006C                     	ds	2
  3131  006E                     _IOCCF0_InterruptHandler:	
  3132  006E                     	ds	2
  3133  000E                     _PORTCbits	set	14
  3134  001C                     _T1GCONbits	set	28
  3135  001B                     _T1CONbits	set	27
  3136  001B                     _T1CON	set	27
  3137  0019                     _TMR1L	set	25
  3138  001A                     _TMR1H	set	26
  3139  001C                     _T1GCON	set	28
  3140  0011                     _PIR1bits	set	17
  3141  000B                     _INTCONbits	set	11
  3142  0010                     _PIR0bits	set	16
  3143  0091                     _PIE1bits	set	145
  3144  0090                     _PIE0bits	set	144
  3145  008E                     _TRISC	set	142
  3146  008C                     _TRISA	set	140
  3147  0097                     _WDTCON	set	151
  3148  010E                     _LATCbits	set	270
  3149  010E                     _LATC	set	270
  3150  010C                     _LATA	set	268
  3151  018C                     _ANSELA	set	396
  3152  018E                     _ANSELC	set	398
  3153  020E                     _WPUC	set	526
  3154  020C                     _WPUA	set	524
  3155  028E                     _ODCONC	set	654
  3156  028C                     _ODCONA	set	652
  3157  030E                     _SLRCONC	set	782
  3158  030C                     _SLRCONA	set	780
  3159  0397                     _IOCCPbits	set	919
  3160  0398                     _IOCCNbits	set	920
  3161  0399                     _IOCCFbits	set	921
  3162  038E                     _INLVLC	set	910
  3163  038C                     _INLVLA	set	908
  3164  0916                     _PMD5	set	2326
  3165  0915                     _PMD4	set	2325
  3166  0914                     _PMD3	set	2324
  3167  0913                     _PMD2	set	2323
  3168  0912                     _PMD1	set	2322
  3169  0911                     _PMD0	set	2321
  3170  091E                     _OSCTUNE	set	2334
  3171  091F                     _OSCFRQ	set	2335
  3172  091D                     _OSCEN	set	2333
  3173  091B                     _OSCCON3	set	2331
  3174  0919                     _OSCCON1	set	2329
  3175                           
  3176                           ; #config settings
  3177  0000                     
  3178                           	psect	cinit
  3179  002A                     start_initialization:	
  3180  002A                     __initialization:		;BIGRAM
  3181                           
  3182                           ; Initialize objects allocated to BANK0
  3183  002A  30F4               	movlw	low __pidataBANK0
  3184  002B  0084               	movwf	4
  3185  002C  3083               	movlw	(high __pidataBANK0)| (0+128)
  3186  002D  0085               	movwf	5
  3187  002E  0012               	moviw fsr0++
  3188  002F  00E2               	movwf	__pdataBANK0& (0+127)
  3189  0030  0012               	moviw fsr0++
  3190  0031  00E3               	movwf	(__pdataBANK0+1)& (0+127)
  3191  0032  0012               	moviw fsr0++
  3192  0033  00E4               	movwf	(__pdataBANK0+2)& (0+127)
  3193  0034  0012               	moviw fsr0++
  3194  0035  00E5               	movwf	(__pdataBANK0+3)& (0+127)
  3195  0036  0012               	moviw fsr0++
  3196  0037  00E6               	movwf	(__pdataBANK0+4)& (0+127)
  3197  0038  0012               	moviw fsr0++
  3198  0039  00E7               	movwf	(__pdataBANK0+5)& (0+127)
  3199  003A  0012               	moviw fsr0++
  3200  003B  00E8               	movwf	(__pdataBANK0+6)& (0+127)
  3201  003C  0012               	moviw fsr0++
  3202  003D  00E9               	movwf	(__pdataBANK0+7)& (0+127)
  3203                           
  3204                           ; Clear objects allocated to BIGRAM
  3205  003E  30B0               	movlw	low (0+8880)
  3206  003F  0084               	movwf	4
  3207  0040  3022               	movlw	high (0+8880)
  3208  0041  0085               	movwf	5
  3209  0042  3040               	movlw	64
  3210  0043  00FE               	movwf	btemp
  3211  0044  3001               	movlw	1
  3212  0045  00FF               	movwf	btemp+1
  3213  0046  3183  23D6  3180   	fcall	clear_ram0
  3214                           
  3215                           ; Clear objects allocated to COMMON
  3216  0049  01FA               	clrf	__pbssCOMMON& (0+127)
  3217  004A  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  3218                           
  3219                           ; Clear objects allocated to BANK0
  3220  004B  3054               	movlw	low __pbssBANK0
  3221  004C  0084               	movwf	4
  3222  004D  3000               	movlw	high __pbssBANK0
  3223  004E  0085               	movwf	5
  3224  004F  300E               	movlw	14
  3225  0050  00FE               	movwf	btemp
  3226  0051  3000               	movlw	0
  3227  0052  00FF               	movwf	btemp+1
  3228  0053  3183  23D6  3180   	fcall	clear_ram0
  3229                           
  3230                           ; Clear objects allocated to BANK1
  3231  0056  0021               	movlb	1	; select bank1
  3232  0057  01A0               	clrf	__pbssBANK1& (0+127)
  3233  0058  01A1               	clrf	(__pbssBANK1+1)& (0+127)
  3234  0059  01A2               	clrf	(__pbssBANK1+2)& (0+127)
  3235  005A  01A3               	clrf	(__pbssBANK1+3)& (0+127)
  3236  005B                     end_of_initialization:	
  3237                           ;End of C runtime variable initialization code
  3238                           
  3239  005B                     __end_of__initialization:	
  3240  005B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3241  005C  0020               	movlb	0
  3242  005D  3182  2AFB         	ljmp	_main	;jump to C main() function
  3243                           
  3244                           	psect	bssCOMMON
  3245  007A                     __pbssCOMMON:	
  3246  007A                     _last_pc_input_state:	
  3247  007A                     	ds	1
  3248  007B                     _cur_pc_input_state:	
  3249  007B                     	ds	1
  3250                           
  3251                           	psect	bssBANK0
  3252  0054                     __pbssBANK0:	
  3253  0054                     _stage_list_iter:	
  3254  0054                     	ds	2
  3255  0056                     _cur_sec:	
  3256  0056                     	ds	2
  3257  0058                     _cur_hsec:	
  3258  0058                     	ds	2
  3259  005A                     _cur_ms:	
  3260  005A                     	ds	2
  3261  005C                     _temp_ms:	
  3262  005C                     	ds	2
  3263  005E                     _ts_trigger:	
  3264  005E                     	ds	1
  3265  005F                     _Wigwag:	
  3266  005F                     	ds	3
  3267                           
  3268                           	psect	dataBANK0
  3269  0062                     __pdataBANK0:	
  3270  0062                     InitWigwagPattern@F439:	
  3271  0062                     	ds	4
  3272  0066                     InitWigwagPattern@F436:	
  3273  0066                     	ds	4
  3274                           
  3275                           	psect	bssBANK1
  3276  00A0                     __pbssBANK1:	
  3277  00A0                     NewStage@F411:	
  3278  00A0                     	ds	4
  3279                           
  3280                           	psect	clrtext
  3281  03D6                     clear_ram0:	
  3282                           ;	Called with FSR0 containing the base address, and
  3283                           ;	btemp/btemp+1 has the size to clear
  3284                           
  3285  03D6  0064               	clrwdt	;clear the watchdog before getting into this loop
  3286  03D7                     clrloop0:	
  3287  03D7  0180               	clrf	0	;clear RAM location pointed to by FSR
  3288  03D8  3101               	addfsr 0,1
  3289  03D9  3001               	movlw	1
  3290  03DA  02FE               	subwf	btemp,f
  3291  03DB  3000               	movlw	0
  3292  03DC  3BFF               	subwfb	btemp+1,f
  3293  03DD  087F               	movf	btemp+1,w
  3294  03DE  047E               	iorwf	btemp,w
  3295  03DF  1D03               	skipz
  3296  03E0  2BD7               	goto	clrloop0	;have we reached the end yet?
  3297  03E1  3400               	retlw	0	;all done for this memory range, return
  3298                           
  3299                           	psect	cstackBANK1
  3300  00A4                     __pcstackBANK1:	
  3301  00A4                     ??_main:	
  3302                           
  3303                           ; 1 bytes @ 0x0
  3304  00A4                     	ds	1
  3305                           
  3306                           	psect	cstackCOMMON
  3307  0070                     __pcstackCOMMON:	
  3308  0070                     ?_PMD_Initialize:	
  3309  0070                     ?_PIN_MANAGER_Initialize:	
  3310                           ; 1 bytes @ 0x0
  3311                           
  3312  0070                     ?_OSCILLATOR_Initialize:	
  3313                           ; 1 bytes @ 0x0
  3314                           
  3315  0070                     ?_WDT_Initialize:	
  3316                           ; 1 bytes @ 0x0
  3317                           
  3318  0070                     ?_TMR1_Initialize:	
  3319                           ; 1 bytes @ 0x0
  3320                           
  3321  0070                     ?_IOCCF0_DefaultInterruptHandler:	
  3322                           ; 1 bytes @ 0x0
  3323                           
  3324  0070                     ??_IOCCF0_DefaultInterruptHandler:	
  3325                           ; 1 bytes @ 0x0
  3326                           
  3327  0070                     ?_IOCCF0_ISR:	
  3328                           ; 1 bytes @ 0x0
  3329                           
  3330  0070                     ??_IOCCF0_ISR:	
  3331                           ; 1 bytes @ 0x0
  3332                           
  3333  0070                     ?_TMR1_ISR:	
  3334                           ; 1 bytes @ 0x0
  3335                           
  3336  0070                     ?_SetOutputs:	
  3337                           ; 1 bytes @ 0x0
  3338                           
  3339  0070                     ?_PatternCycleInputChanged:	
  3340                           ; 1 bytes @ 0x0
  3341                           
  3342  0070                     ?_SYSTEM_Initialize:	
  3343                           ; 1 bytes @ 0x0
  3344                           
  3345  0070                     ?_PIN_MANAGER_IOC:	
  3346                           ; 1 bytes @ 0x0
  3347                           
  3348  0070                     ??_PIN_MANAGER_IOC:	
  3349                           ; 1 bytes @ 0x0
  3350                           
  3351  0070                     ?_INTERRUPT_InterruptManager:	
  3352                           ; 1 bytes @ 0x0
  3353                           
  3354  0070                     ?_TMR1_StartTimer:	
  3355                           ; 1 bytes @ 0x0
  3356                           
  3357  0070                     ?_TMR1_WriteTimer:	
  3358                           ; 1 bytes @ 0x0
  3359                           
  3360  0070                     ?_setup:	
  3361                           ; 1 bytes @ 0x0
  3362                           
  3363  0070                     ?_main:	
  3364                           ; 1 bytes @ 0x0
  3365                           
  3366  0070                     TMR1_WriteTimer@timerVal:	
  3367                           ; 1 bytes @ 0x0
  3368                           
  3369                           
  3370                           ; 2 bytes @ 0x0
  3371  0070                     	ds	2
  3372  0072                     ??_PMD_Initialize:	
  3373  0072                     ??_OSCILLATOR_Initialize:	
  3374                           ; 1 bytes @ 0x2
  3375                           
  3376  0072                     ??_WDT_Initialize:	
  3377                           ; 1 bytes @ 0x2
  3378                           
  3379  0072                     ?_IOCCF0_SetInterruptHandler:	
  3380                           ; 1 bytes @ 0x2
  3381                           
  3382  0072                     ??_TMR1_ISR:	
  3383                           ; 1 bytes @ 0x2
  3384                           
  3385  0072                     ?_TMR1_SetInterruptHandler:	
  3386                           ; 1 bytes @ 0x2
  3387                           
  3388  0072                     ??_PatternCycleInputChanged:	
  3389                           ; 1 bytes @ 0x2
  3390                           
  3391  0072                     ??_INTERRUPT_InterruptManager:	
  3392                           ; 1 bytes @ 0x2
  3393                           
  3394  0072                     ??_TMR1_StartTimer:	
  3395                           ; 1 bytes @ 0x2
  3396                           
  3397  0072                     ??_TMR1_WriteTimer:	
  3398                           ; 1 bytes @ 0x2
  3399                           
  3400  0072                     ?_SetLight:	
  3401                           ; 1 bytes @ 0x2
  3402                           
  3403  0072                     ?_AssignLightStates:	
  3404                           ; 1 bytes @ 0x2
  3405                           
  3406  0072                     SetLight@state:	
  3407                           ; 1 bytes @ 0x2
  3408                           
  3409  0072                     IOCCF0_SetInterruptHandler@InterruptHandler:	
  3410                           ; 1 bytes @ 0x2
  3411                           
  3412  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  3413                           ; 2 bytes @ 0x2
  3414                           
  3415  0072                     AssignLightStates@stage:	
  3416                           ; 2 bytes @ 0x2
  3417                           
  3418                           
  3419                           ; 2 bytes @ 0x2
  3420  0072                     	ds	1
  3421  0073                     ??_SetLight:	
  3422                           
  3423                           ; 1 bytes @ 0x3
  3424  0073                     	ds	1
  3425  0074                     ??_PIN_MANAGER_Initialize:	
  3426  0074                     ??_TMR1_Initialize:	
  3427                           ; 1 bytes @ 0x4
  3428                           
  3429  0074                     ??_IOCCF0_SetInterruptHandler:	
  3430                           ; 1 bytes @ 0x4
  3431                           
  3432  0074                     ??_TMR1_SetInterruptHandler:	
  3433                           ; 1 bytes @ 0x4
  3434                           
  3435  0074                     ??_SYSTEM_Initialize:	
  3436                           ; 1 bytes @ 0x4
  3437                           
  3438  0074                     AssignLightStates@states:	
  3439                           ; 1 bytes @ 0x4
  3440                           
  3441  0074                     PatternCycleInputChanged@delay_count:	
  3442                           ; 1 bytes @ 0x4
  3443                           
  3444                           
  3445                           ; 2 bytes @ 0x4
  3446  0074                     	ds	1
  3447  0075                     ??_AssignLightStates:	
  3448  0075                     SetLight@light:	
  3449                           ; 1 bytes @ 0x5
  3450                           
  3451                           
  3452                           ; 1 bytes @ 0x5
  3453  0075                     	ds	1
  3454  0076                     ??_SetOutputs:	
  3455                           
  3456                           ; 1 bytes @ 0x6
  3457  0076                     	ds	1
  3458  0077                     ?_NewStage:	
  3459  0077                     SetOutputs@state:	
  3460                           ; 2 bytes @ 0x7
  3461                           
  3462                           
  3463                           ; 1 bytes @ 0x7
  3464  0077                     	ds	2
  3465  0079                     ??_ConstructStage:	
  3466                           
  3467                           ; 1 bytes @ 0x9
  3468  0079                     	ds	1
  3469  007A                     ??_setup:	
  3470                           
  3471                           	psect	cstackBANK0
  3472  0020                     __pcstackBANK0:	
  3473                           ; 1 bytes @ 0xA
  3474                           
  3475  0020                     AssignLightStates@i:	
  3476                           
  3477                           ; 2 bytes @ 0x0
  3478  0020                     	ds	2
  3479  0022                     ??_NewStage:	
  3480                           
  3481                           ; 1 bytes @ 0x2
  3482  0022                     	ds	4
  3483  0026                     NewStage@init_states:	
  3484                           
  3485                           ; 4 bytes @ 0x6
  3486  0026                     	ds	4
  3487  002A                     NewStage@new_stage:	
  3488                           
  3489                           ; 2 bytes @ 0xA
  3490  002A                     	ds	2
  3491  002C                     ?_CopyStageData:	
  3492  002C                     ?_ConstructStage:	
  3493                           ; 2 bytes @ 0xC
  3494                           
  3495  002C                     ConstructStage@time_ms:	
  3496                           ; 2 bytes @ 0xC
  3497                           
  3498  002C                     CopyStageData@dest:	
  3499                           ; 2 bytes @ 0xC
  3500                           
  3501                           
  3502                           ; 2 bytes @ 0xC
  3503  002C                     	ds	2
  3504  002E                     ConstructStage@next:	
  3505  002E                     CopyStageData@source:	
  3506                           ; 1 bytes @ 0xE
  3507                           
  3508                           
  3509                           ; 2 bytes @ 0xE
  3510  002E                     	ds	1
  3511  002F                     ConstructStage@states:	
  3512                           
  3513                           ; 1 bytes @ 0xF
  3514  002F                     	ds	1
  3515  0030                     ??_CopyStageData:	
  3516  0030                     ConstructStage@new_stage:	
  3517                           ; 1 bytes @ 0x10
  3518                           
  3519                           
  3520                           ; 2 bytes @ 0x10
  3521  0030                     	ds	3
  3522  0033                     CopyStageData@i:	
  3523                           
  3524                           ; 2 bytes @ 0x13
  3525  0033                     	ds	2
  3526  0035                     ?_AppendStage:	
  3527  0035                     AppendStage@head:	
  3528                           ; 1 bytes @ 0x15
  3529                           
  3530                           
  3531                           ; 2 bytes @ 0x15
  3532  0035                     	ds	2
  3533  0037                     AppendStage@new_stage:	
  3534                           
  3535                           ; 2 bytes @ 0x17
  3536  0037                     	ds	2
  3537  0039                     ??_AppendStage:	
  3538                           
  3539                           ; 1 bytes @ 0x19
  3540  0039                     	ds	2
  3541  003B                     AppendStage@last_stage:	
  3542                           
  3543                           ; 2 bytes @ 0x1B
  3544  003B                     	ds	2
  3545  003D                     ?_InitWigwagPattern:	
  3546  003D                     InitWigwagPattern@pattern:	
  3547                           ; 1 bytes @ 0x1D
  3548                           
  3549                           
  3550                           ; 2 bytes @ 0x1D
  3551  003D                     	ds	2
  3552  003F                     ??_InitWigwagPattern:	
  3553                           
  3554                           ; 1 bytes @ 0x1F
  3555  003F                     	ds	1
  3556  0040                     InitWigwagPattern@left_side_states:	
  3557                           
  3558                           ; 4 bytes @ 0x20
  3559  0040                     	ds	4
  3560  0044                     InitWigwagPattern@right_side_states:	
  3561                           
  3562                           ; 4 bytes @ 0x24
  3563  0044                     	ds	4
  3564  0048                     InitWigwagPattern@left_side_on:	
  3565                           
  3566                           ; 2 bytes @ 0x28
  3567  0048                     	ds	2
  3568  004A                     InitWigwagPattern@right_side_on:	
  3569                           
  3570                           ; 2 bytes @ 0x2A
  3571  004A                     	ds	2
  3572  004C                     InitWigwagPattern@i:	
  3573                           
  3574                           ; 2 bytes @ 0x2C
  3575  004C                     	ds	2
  3576  004E                     InitWigwagPattern@i_748:	
  3577                           
  3578                           ; 2 bytes @ 0x2E
  3579  004E                     	ds	2
  3580  0050                     InitWigwagPattern@off:	
  3581                           
  3582                           ; 2 bytes @ 0x30
  3583  0050                     	ds	2
  3584  0052                     InitWigwagPattern@head:	
  3585                           
  3586                           ; 2 bytes @ 0x32
  3587  0052                     	ds	2
  3588                           
  3589                           	psect	maintext
  3590  02FB                     __pmaintext:	
  3591 ;;
  3592 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3593 ;;
  3594 ;; *************** function _main *****************
  3595 ;; Defined at:
  3596 ;;		line 45 in file "main.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1    wreg      void 
  3603 ;; Registers used:
  3604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3605 ;; Tracked objects:
  3606 ;;		On entry : B1F/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3612 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3613 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3614 ;;Total ram usage:        1 bytes
  3615 ;; Hardware stack levels required when called:    9
  3616 ;; This function calls:
  3617 ;;		_PatternCycleInputChanged
  3618 ;;		_SetOutputs
  3619 ;;		_setup
  3620 ;; This function is called by:
  3621 ;;		Startup code after reset
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           
  3626                           ;psect for function _main
  3627  02FB                     _main:	
  3628  02FB                     l1727:	
  3629                           ;incstack = 0
  3630                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3631                           
  3632                           
  3633                           ;main.c: 47:     setup();
  3634  02FB  3183  2368  3182   	fcall	_setup
  3635  02FE                     l1729:	
  3636                           
  3637                           ;main.c: 50:     {;main.c: 51:         cur_pc_input_state = PORTCbits.RC5;
  3638  02FE  3000               	movlw	0
  3639  02FF  0020               	movlb	0	; select bank0
  3640  0300  1A8E               	btfsc	14,5	;volatile
  3641  0301  3001               	movlw	1
  3642  0302  00FB               	movwf	_cur_pc_input_state
  3643  0303                     l1731:	
  3644                           
  3645                           ;main.c: 56:         if ( PatternCycleInputChanged() )
  3646  0303  3182  22A4  3182   	fcall	_PatternCycleInputChanged
  3647  0306  3A00               	xorlw	0
  3648  0307  1903               	skipnz
  3649  0308  2B0A               	goto	u431
  3650  0309  2B0B               	goto	u430
  3651  030A                     u431:	
  3652  030A  2B19               	goto	l1739
  3653  030B                     u430:	
  3654  030B                     l1733:	
  3655                           
  3656                           ;main.c: 57:         {;main.c: 59:             if ( cur_pc_input_state == 0 )
  3657  030B  087B               	movf	_cur_pc_input_state,w
  3658  030C  1D03               	btfss	3,2
  3659  030D  2B0F               	goto	u441
  3660  030E  2B10               	goto	u440
  3661  030F                     u441:	
  3662  030F  2B15               	goto	l1737
  3663  0310                     u440:	
  3664  0310                     l1735:	
  3665                           
  3666                           ;main.c: 60:             {;main.c: 61:                 SetOutputs( 1 );
  3667  0310  3001               	movlw	1
  3668  0311  3183  2346  3182   	fcall	_SetOutputs
  3669                           
  3670                           ;main.c: 62:             }
  3671  0314  2B19               	goto	l1739
  3672  0315                     l1737:	
  3673                           
  3674                           ;main.c: 65:             {;main.c: 66:                 SetOutputs( 0 );
  3675  0315  3000               	movlw	0
  3676  0316  3183  2346  3182   	fcall	_SetOutputs
  3677  0319                     l1739:	
  3678                           
  3679                           ;main.c: 70:         last_pc_input_state = cur_pc_input_state;
  3680  0319  087B               	movf	_cur_pc_input_state,w
  3681  031A  0021               	movlb	1	; select bank1
  3682  031B  00A4               	movwf	??_main^(0+128)
  3683  031C  0824               	movf	??_main^(0+128),w
  3684  031D  00FA               	movwf	_last_pc_input_state
  3685  031E  2AFE               	goto	l1729
  3686  031F  3180  2828         	ljmp	start
  3687  0321                     __end_of_main:	
  3688                           
  3689                           	psect	text1
  3690  0368                     __ptext1:	
  3691 ;; *************** function _setup *****************
  3692 ;; Defined at:
  3693 ;;		line 24 in file "main.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;		None
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;		None
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      void 
  3700 ;; Registers used:
  3701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3711 ;;Total ram usage:        0 bytes
  3712 ;; Hardware stack levels used:    1
  3713 ;; Hardware stack levels required when called:    8
  3714 ;; This function calls:
  3715 ;;		_InitWigwagPattern
  3716 ;;		_SYSTEM_Initialize
  3717 ;;		_SetOutputs
  3718 ;;		_TMR1_Initialize
  3719 ;;		_TMR1_StartTimer
  3720 ;; This function is called by:
  3721 ;;		_main
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           
  3726                           ;psect for function _setup
  3727  0368                     _setup:	
  3728  0368                     l1715:	
  3729                           ;incstack = 0
  3730                           ; Regs used in _setup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3731                           
  3732                           
  3733                           ;main.c: 28:     SYSTEM_Initialize();
  3734  0368  3183  23A8  3183   	fcall	_SYSTEM_Initialize
  3735  036B                     l1717:	
  3736                           
  3737                           ;main.c: 30:     (INTCONbits.GIE = 1);
  3738  036B  178B               	bsf	11,7	;volatile
  3739  036C                     l1719:	
  3740                           
  3741                           ;main.c: 33:     (INTCONbits.PEIE = 1);
  3742  036C  170B               	bsf	11,6	;volatile
  3743                           
  3744                           ;main.c: 36:     TMR1_Initialize();
  3745  036D  3183  2380  3183   	fcall	_TMR1_Initialize
  3746  0370                     l1721:	
  3747                           
  3748                           ;main.c: 37:     TMR1_StartTimer();
  3749  0370  3184  2414  3183   	fcall	_TMR1_StartTimer
  3750  0373                     l1723:	
  3751                           
  3752                           ;main.c: 40:     SetOutputs( 0 );
  3753  0373  3000               	movlw	0
  3754  0374  3183  2346  3183   	fcall	_SetOutputs
  3755  0377                     l1725:	
  3756                           
  3757                           ;main.c: 42:     InitWigwagPattern( &Wigwag );
  3758  0377  305F               	movlw	low _Wigwag
  3759  0378  0020               	movlb	0	; select bank0
  3760  0379  00BD               	movwf	InitWigwagPattern@pattern
  3761  037A  3000               	movlw	high _Wigwag
  3762  037B  00BE               	movwf	InitWigwagPattern@pattern+1
  3763  037C  3180  205F  3183   	fcall	_InitWigwagPattern
  3764  037F                     l260:	
  3765  037F  0008               	return
  3766  0380                     __end_of_setup:	
  3767                           
  3768                           	psect	text2
  3769  0414                     __ptext2:	
  3770 ;; *************** function _TMR1_StartTimer *****************
  3771 ;; Defined at:
  3772 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;		None
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;		None
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  1    wreg      void 
  3779 ;; Registers used:
  3780 ;;		None
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3790 ;;Total ram usage:        0 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; Hardware stack levels required when called:    4
  3793 ;; This function calls:
  3794 ;;		Nothing
  3795 ;; This function is called by:
  3796 ;;		_setup
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           
  3801                           ;psect for function _TMR1_StartTimer
  3802  0414                     _TMR1_StartTimer:	
  3803  0414                     l1493:	
  3804                           ;incstack = 0
  3805                           ; Regs used in _TMR1_StartTimer: []
  3806                           
  3807                           
  3808                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  3809  0414  0020               	movlb	0	; select bank0
  3810  0415  141B               	bsf	27,0	;volatile
  3811  0416                     l192:	
  3812  0416  0008               	return
  3813  0417                     __end_of_TMR1_StartTimer:	
  3814                           
  3815                           	psect	text3
  3816  0346                     __ptext3:	
  3817 ;; *************** function _SetOutputs *****************
  3818 ;; Defined at:
  3819 ;;		line 30 in file "Lights.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  state           1    wreg     const _Bool 
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;  state           1    7[COMMON] const _Bool 
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      void 
  3826 ;; Registers used:
  3827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3834 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3835 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3837 ;;Total ram usage:        2 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:    5
  3840 ;; This function calls:
  3841 ;;		_SetLight
  3842 ;; This function is called by:
  3843 ;;		_setup
  3844 ;;		_main
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           
  3849                           ;psect for function _SetOutputs
  3850  0346                     _SetOutputs:	
  3851                           
  3852                           ;incstack = 0
  3853                           ; Regs used in _SetOutputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3854                           ;SetOutputs@state stored from wreg
  3855  0346  00F7               	movwf	SetOutputs@state
  3856  0347                     l1509:	
  3857                           
  3858                           ;Lights.c: 30: void SetOutputs( const _Bool state );Lights.c: 31: {;Lights.c: 32:     Se
      +                          tLight( L1, state );
  3859  0347  0877               	movf	SetOutputs@state,w
  3860  0348  00F6               	movwf	??_SetOutputs
  3861  0349  0876               	movf	??_SetOutputs,w
  3862  034A  00F2               	movwf	SetLight@state
  3863  034B  3000               	movlw	0
  3864  034C  3182  2245  3183   	fcall	_SetLight
  3865                           
  3866                           ;Lights.c: 33:     SetLight( L2, state );
  3867  034F  0877               	movf	SetOutputs@state,w
  3868  0350  00F6               	movwf	??_SetOutputs
  3869  0351  0876               	movf	??_SetOutputs,w
  3870  0352  00F2               	movwf	SetLight@state
  3871  0353  3001               	movlw	1
  3872  0354  3182  2245  3183   	fcall	_SetLight
  3873                           
  3874                           ;Lights.c: 34:     SetLight( L3, state );
  3875  0357  0877               	movf	SetOutputs@state,w
  3876  0358  00F6               	movwf	??_SetOutputs
  3877  0359  0876               	movf	??_SetOutputs,w
  3878  035A  00F2               	movwf	SetLight@state
  3879  035B  3002               	movlw	2
  3880  035C  3182  2245  3183   	fcall	_SetLight
  3881                           
  3882                           ;Lights.c: 35:     SetLight( L4, state );
  3883  035F  0877               	movf	SetOutputs@state,w
  3884  0360  00F6               	movwf	??_SetOutputs
  3885  0361  0876               	movf	??_SetOutputs,w
  3886  0362  00F2               	movwf	SetLight@state
  3887  0363  3003               	movlw	3
  3888  0364  3182  2245  3183   	fcall	_SetLight
  3889  0367                     l323:	
  3890  0367  0008               	return
  3891  0368                     __end_of_SetOutputs:	
  3892                           
  3893                           	psect	text4
  3894  0245                     __ptext4:	
  3895 ;; *************** function _SetLight *****************
  3896 ;; Defined at:
  3897 ;;		line 12 in file "Lights.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  light           1    wreg     const enum E39
  3900 ;;  state           1    2[COMMON] const _Bool 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  light           1    5[COMMON] const enum E39
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3912 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3914 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3915 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3916 ;;Total ram usage:        4 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    4
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_SetOutputs
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           
  3927                           ;psect for function _SetLight
  3928  0245                     _SetLight:	
  3929                           
  3930                           ;incstack = 0
  3931                           ; Regs used in _SetLight: [wreg-fsr0h+status,2+status,0]
  3932                           ;SetLight@light stored from wreg
  3933  0245  00F5               	movwf	SetLight@light
  3934  0246                     l1425:	
  3935                           
  3936                           ;Lights.c: 12: void SetLight( const enum Light light, const _Bool state );Lights.c: 13: 
      +                          {;Lights.c: 15:     switch ( light )
  3937  0246  2A60               	goto	l1431
  3938  0247                     l1427:	
  3939  0247  0C72               	rrf	SetLight@state,w
  3940  0248  0022               	movlb	2	; select bank2
  3941  0249  1C03               	skipc
  3942  024A  108E               	bcf	14,1	;volatile
  3943  024B  1803               	skipnc
  3944  024C  148E               	bsf	14,1	;volatile
  3945  024D                     l310:	
  3946                           ;Lights.c: 20:             do { LATCbits.LATC2 = state; } while(0);
  3947                           
  3948  024D  0C72               	rrf	SetLight@state,w
  3949  024E  0022               	movlb	2	; select bank2
  3950  024F  1C03               	skipc
  3951  0250  110E               	bcf	14,2	;volatile
  3952  0251  1803               	skipnc
  3953  0252  150E               	bsf	14,2	;volatile
  3954  0253                     l313:	
  3955                           ;Lights.c: 22:             do { LATCbits.LATC3 = state; } while(0);
  3956                           
  3957  0253  0C72               	rrf	SetLight@state,w
  3958  0254  0022               	movlb	2	; select bank2
  3959  0255  1C03               	skipc
  3960  0256  118E               	bcf	14,3	;volatile
  3961  0257  1803               	skipnc
  3962  0258  158E               	bsf	14,3	;volatile
  3963  0259                     l317:	
  3964                           ;Lights.c: 25:             do { LATCbits.LATC4 = state; } while(0);
  3965                           
  3966  0259  0C72               	rrf	SetLight@state,w
  3967  025A  0022               	movlb	2	; select bank2
  3968  025B  1C03               	skipc
  3969  025C  120E               	bcf	14,4	;volatile
  3970  025D  1803               	skipnc
  3971  025E  160E               	bsf	14,4	;volatile
  3972  025F  2A76               	goto	l320
  3973  0260                     l1431:	
  3974  0260  0875               	movf	SetLight@light,w
  3975  0261  00F3               	movwf	??_SetLight
  3976  0262  01F4               	clrf	??_SetLight+1
  3977                           
  3978                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3979                           ; Switch size 1, requested type "simple"
  3980                           ; Number of cases is 1, Range of values is 0 to 0
  3981                           ; switch strategies available:
  3982                           ; Name         Instructions Cycles
  3983                           ; simple_byte            4     3 (average)
  3984                           ; direct_byte            8     6 (fixed)
  3985                           ; jumptable            260     6 (fixed)
  3986                           ;	Chosen strategy is simple_byte
  3987  0263  0874               	movf	??_SetLight+1,w
  3988  0264  3A00               	xorlw	0	; case 0
  3989  0265  1903               	skipnz
  3990  0266  2A68               	goto	l1761
  3991  0267  2A59               	goto	l317
  3992  0268                     l1761:	
  3993                           
  3994                           ; Switch size 1, requested type "simple"
  3995                           ; Number of cases is 4, Range of values is 0 to 3
  3996                           ; switch strategies available:
  3997                           ; Name         Instructions Cycles
  3998                           ; simple_byte           13     7 (average)
  3999                           ; direct_byte           14     6 (fixed)
  4000                           ; jumptable            260     6 (fixed)
  4001                           ;	Chosen strategy is simple_byte
  4002  0268  0873               	movf	??_SetLight,w
  4003  0269  3A00               	xorlw	0	; case 0
  4004  026A  1903               	skipnz
  4005  026B  2A47               	goto	l1427
  4006  026C  3A01               	xorlw	1	; case 1
  4007  026D  1903               	skipnz
  4008  026E  2A4D               	goto	l310
  4009  026F  3A03               	xorlw	3	; case 2
  4010  0270  1903               	skipnz
  4011  0271  2A53               	goto	l313
  4012  0272  3A01               	xorlw	1	; case 3
  4013  0273  1903               	skipnz
  4014  0274  2A59               	goto	l317
  4015  0275  2A59               	goto	l317
  4016  0276                     l320:	
  4017  0276  0008               	return
  4018  0277                     __end_of_SetLight:	
  4019                           
  4020                           	psect	text5
  4021  03A8                     __ptext5:	
  4022 ;; *************** function _SYSTEM_Initialize *****************
  4023 ;; Defined at:
  4024 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;		None
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  1    wreg      void 
  4031 ;; Registers used:
  4032 ;;		wreg, status,2, status,0, pclath, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4042 ;;Total ram usage:        0 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    6
  4045 ;; This function calls:
  4046 ;;		_OSCILLATOR_Initialize
  4047 ;;		_PIN_MANAGER_Initialize
  4048 ;;		_PMD_Initialize
  4049 ;;		_TMR1_Initialize
  4050 ;;		_WDT_Initialize
  4051 ;; This function is called by:
  4052 ;;		_setup
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           
  4057                           ;psect for function _SYSTEM_Initialize
  4058  03A8                     _SYSTEM_Initialize:	
  4059  03A8                     l1477:	
  4060                           ;incstack = 0
  4061                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4062                           
  4063                           
  4064                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  4065  03A8  3183  23FC  3183   	fcall	_PMD_Initialize
  4066  03AB                     l1479:	
  4067                           
  4068                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4069  03AB  3182  22D1  3183   	fcall	_PIN_MANAGER_Initialize
  4070  03AE                     l1481:	
  4071                           
  4072                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4073  03AE  3183  23E2  3183   	fcall	_OSCILLATOR_Initialize
  4074  03B1                     l1483:	
  4075                           
  4076                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4077  03B1  3184  2410  3183   	fcall	_WDT_Initialize
  4078  03B4                     l1485:	
  4079                           
  4080                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  4081  03B4  3183  2380  3183   	fcall	_TMR1_Initialize
  4082  03B7                     l47:	
  4083  03B7  0008               	return
  4084  03B8                     __end_of_SYSTEM_Initialize:	
  4085                           
  4086                           	psect	text6
  4087  0410                     __ptext6:	
  4088 ;; *************** function _WDT_Initialize *****************
  4089 ;; Defined at:
  4090 ;;		line 74 in file "mcc_generated_files/mcc.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;		None
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;		None
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  1    wreg      void 
  4097 ;; Registers used:
  4098 ;;		wreg
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4108 ;;Total ram usage:        0 bytes
  4109 ;; Hardware stack levels used:    1
  4110 ;; Hardware stack levels required when called:    4
  4111 ;; This function calls:
  4112 ;;		Nothing
  4113 ;; This function is called by:
  4114 ;;		_SYSTEM_Initialize
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           
  4119                           ;psect for function _WDT_Initialize
  4120  0410                     _WDT_Initialize:	
  4121  0410                     l1409:	
  4122                           ;incstack = 0
  4123                           ; Regs used in _WDT_Initialize: [wreg]
  4124                           
  4125                           
  4126                           ;mcc_generated_files/mcc.c: 77:     WDTCON = 0x16;
  4127  0410  3016               	movlw	22
  4128  0411  0021               	movlb	1	; select bank1
  4129  0412  0097               	movwf	23	;volatile
  4130  0413                     l53:	
  4131  0413  0008               	return
  4132  0414                     __end_of_WDT_Initialize:	
  4133                           
  4134                           	psect	text7
  4135  0380                     __ptext7:	
  4136 ;; *************** function _TMR1_Initialize *****************
  4137 ;; Defined at:
  4138 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;		None
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;		None
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      void 
  4145 ;; Registers used:
  4146 ;;		wreg, status,2, status,0, pclath, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4156 ;;Total ram usage:        0 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    5
  4159 ;; This function calls:
  4160 ;;		_TMR1_SetInterruptHandler
  4161 ;; This function is called by:
  4162 ;;		_SYSTEM_Initialize
  4163 ;;		_setup
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           
  4168                           ;psect for function _TMR1_Initialize
  4169  0380                     _TMR1_Initialize:	
  4170  0380                     l1411:	
  4171                           ;incstack = 0
  4172                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4173                           
  4174                           
  4175                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4176  0380  0020               	movlb	0	; select bank0
  4177  0381  019C               	clrf	28	;volatile
  4178  0382                     l1413:	
  4179                           
  4180                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xFF;
  4181  0382  30FF               	movlw	255
  4182  0383  009A               	movwf	26	;volatile
  4183  0384                     l1415:	
  4184                           
  4185                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x00;
  4186  0384  0199               	clrf	25	;volatile
  4187  0385                     l1417:	
  4188                           
  4189                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  4190  0385  1011               	bcf	17,0	;volatile
  4191                           
  4192                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4193  0386  081A               	movf	26,w	;volatile
  4194  0387  00ED               	movwf	_timer1ReloadVal+1	;volatile
  4195  0388  0819               	movf	25,w	;volatile
  4196  0389  00EC               	movwf	_timer1ReloadVal	;volatile
  4197  038A                     l1419:	
  4198                           
  4199                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  4200  038A  0021               	movlb	1	; select bank1
  4201  038B  1411               	bsf	17,0	;volatile
  4202  038C                     l1421:	
  4203                           
  4204                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4205  038C  3000               	movlw	0
  4206  038D  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  4207  038E  3000               	movlw	0
  4208  038F  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  4209  0390  3184  2404  3183   	fcall	_TMR1_SetInterruptHandler
  4210  0393                     l1423:	
  4211                           
  4212                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
  4213  0393  3001               	movlw	1
  4214  0394  0020               	movlb	0	; select bank0
  4215  0395  009B               	movwf	27	;volatile
  4216  0396                     l189:	
  4217  0396  0008               	return
  4218  0397                     __end_of_TMR1_Initialize:	
  4219                           
  4220                           	psect	text8
  4221  0404                     __ptext8:	
  4222 ;; *************** function _TMR1_SetInterruptHandler *****************
  4223 ;; Defined at:
  4224 ;;		line 173 in file "mcc_generated_files/tmr1.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4227 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;		None
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		wreg
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4242 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4243 ;;Total ram usage:        2 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; Hardware stack levels required when called:    4
  4246 ;; This function calls:
  4247 ;;		Nothing
  4248 ;; This function is called by:
  4249 ;;		_TMR1_Initialize
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253                           
  4254                           ;psect for function _TMR1_SetInterruptHandler
  4255  0404                     _TMR1_SetInterruptHandler:	
  4256  0404                     l1347:	
  4257                           ;incstack = 0
  4258                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  4259                           
  4260                           
  4261                           ;mcc_generated_files/tmr1.c: 174:     TMR1_InterruptHandler = InterruptHandler;
  4262  0404  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  4263  0405  0020               	movlb	0	; select bank0
  4264  0406  00EB               	movwf	_TMR1_InterruptHandler+1
  4265  0407  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  4266  0408  00EA               	movwf	_TMR1_InterruptHandler
  4267  0409                     l218:	
  4268  0409  0008               	return
  4269  040A                     __end_of_TMR1_SetInterruptHandler:	
  4270                           
  4271                           	psect	text9
  4272  03FC                     __ptext9:	
  4273 ;; *************** function _PMD_Initialize *****************
  4274 ;; Defined at:
  4275 ;;		line 80 in file "mcc_generated_files/mcc.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;		None
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;		None
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		status,2
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4293 ;;Total ram usage:        0 bytes
  4294 ;; Hardware stack levels used:    1
  4295 ;; Hardware stack levels required when called:    4
  4296 ;; This function calls:
  4297 ;;		Nothing
  4298 ;; This function is called by:
  4299 ;;		_SYSTEM_Initialize
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           
  4304                           ;psect for function _PMD_Initialize
  4305  03FC                     _PMD_Initialize:	
  4306  03FC                     l1371:	
  4307                           ;incstack = 0
  4308                           ; Regs used in _PMD_Initialize: [status,2]
  4309                           
  4310                           
  4311                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
  4312  03FC  0032               	movlb	18	; select bank18
  4313  03FD  0191               	clrf	17	;volatile
  4314                           
  4315                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
  4316  03FE  0192               	clrf	18	;volatile
  4317                           
  4318                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
  4319  03FF  0193               	clrf	19	;volatile
  4320                           
  4321                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
  4322  0400  0194               	clrf	20	;volatile
  4323                           
  4324                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
  4325  0401  0195               	clrf	21	;volatile
  4326                           
  4327                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
  4328  0402  0196               	clrf	22	;volatile
  4329  0403                     l56:	
  4330  0403  0008               	return
  4331  0404                     __end_of_PMD_Initialize:	
  4332                           
  4333                           	psect	text10
  4334  02D1                     __ptext10:	
  4335 ;; *************** function _PIN_MANAGER_Initialize *****************
  4336 ;; Defined at:
  4337 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;		None
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;		None
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  1    wreg      void 
  4344 ;; Registers used:
  4345 ;;		wreg, status,2, status,0, pclath, cstack
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4355 ;;Total ram usage:        0 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; Hardware stack levels required when called:    5
  4358 ;; This function calls:
  4359 ;;		_IOCCF0_SetInterruptHandler
  4360 ;; This function is called by:
  4361 ;;		_SYSTEM_Initialize
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           
  4366                           ;psect for function _PIN_MANAGER_Initialize
  4367  02D1                     _PIN_MANAGER_Initialize:	
  4368  02D1                     l1373:	
  4369                           ;incstack = 0
  4370                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4371                           
  4372                           
  4373                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4374  02D1  0022               	movlb	2	; select bank2
  4375  02D2  018C               	clrf	12	;volatile
  4376  02D3                     l1375:	
  4377                           
  4378                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x20;
  4379  02D3  3020               	movlw	32
  4380  02D4  008E               	movwf	14	;volatile
  4381  02D5                     l1377:	
  4382                           
  4383                           ;mcc_generated_files/pin_manager.c: 68:     TRISA = 0x37;
  4384  02D5  3037               	movlw	55
  4385  02D6  0021               	movlb	1	; select bank1
  4386  02D7  008C               	movwf	12	;volatile
  4387  02D8                     l1379:	
  4388                           
  4389                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x21;
  4390  02D8  3021               	movlw	33
  4391  02D9  008E               	movwf	14	;volatile
  4392  02DA                     l1381:	
  4393                           
  4394                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  4395  02DA  0023               	movlb	3	; select bank3
  4396  02DB  018E               	clrf	14	;volatile
  4397                           
  4398                           ;mcc_generated_files/pin_manager.c: 75:     ANSELA = 0x33;
  4399  02DC  3033               	movlw	51
  4400  02DD  008C               	movwf	12	;volatile
  4401  02DE                     l1383:	
  4402                           
  4403                           ;mcc_generated_files/pin_manager.c: 80:     WPUA = 0x00;
  4404  02DE  0024               	movlb	4	; select bank4
  4405  02DF  018C               	clrf	12	;volatile
  4406  02E0                     l1385:	
  4407                           
  4408                           ;mcc_generated_files/pin_manager.c: 81:     WPUC = 0x00;
  4409  02E0  018E               	clrf	14	;volatile
  4410  02E1                     l1387:	
  4411                           
  4412                           ;mcc_generated_files/pin_manager.c: 86:     ODCONA = 0x00;
  4413  02E1  0025               	movlb	5	; select bank5
  4414  02E2  018C               	clrf	12	;volatile
  4415  02E3                     l1389:	
  4416                           
  4417                           ;mcc_generated_files/pin_manager.c: 87:     ODCONC = 0x00;
  4418  02E3  018E               	clrf	14	;volatile
  4419                           
  4420                           ;mcc_generated_files/pin_manager.c: 92:     SLRCONA = 0x37;
  4421  02E4  3037               	movlw	55
  4422  02E5  0026               	movlb	6	; select bank6
  4423  02E6  008C               	movwf	12	;volatile
  4424                           
  4425                           ;mcc_generated_files/pin_manager.c: 93:     SLRCONC = 0x3F;
  4426  02E7  303F               	movlw	63
  4427  02E8  008E               	movwf	14	;volatile
  4428                           
  4429                           ;mcc_generated_files/pin_manager.c: 98:     INLVLA = 0x3F;
  4430  02E9  303F               	movlw	63
  4431  02EA  0027               	movlb	7	; select bank7
  4432  02EB  008C               	movwf	12	;volatile
  4433                           
  4434                           ;mcc_generated_files/pin_manager.c: 99:     INLVLC = 0x3F;
  4435  02EC  303F               	movlw	63
  4436  02ED  008E               	movwf	14	;volatile
  4437  02EE                     l1391:	
  4438                           
  4439                           ;mcc_generated_files/pin_manager.c: 106:     IOCCFbits.IOCCF0 = 0;
  4440  02EE  1019               	bcf	25,0	;volatile
  4441  02EF                     l1393:	
  4442                           
  4443                           ;mcc_generated_files/pin_manager.c: 108:     IOCCNbits.IOCCN0 = 0;
  4444  02EF  1018               	bcf	24,0	;volatile
  4445  02F0                     l1395:	
  4446                           
  4447                           ;mcc_generated_files/pin_manager.c: 110:     IOCCPbits.IOCCP0 = 1;
  4448  02F0  1417               	bsf	23,0	;volatile
  4449  02F1                     l1397:	
  4450                           
  4451                           ;mcc_generated_files/pin_manager.c: 115:     IOCCF0_SetInterruptHandler(IOCCF0_DefaultIn
      +                          terruptHandler);
  4452  02F1  3017               	movlw	low _IOCCF0_DefaultInterruptHandler
  4453  02F2  00F2               	movwf	IOCCF0_SetInterruptHandler@InterruptHandler
  4454  02F3  3004               	movlw	high _IOCCF0_DefaultInterruptHandler
  4455  02F4  00F3               	movwf	IOCCF0_SetInterruptHandler@InterruptHandler+1
  4456  02F5  3184  240A  3182   	fcall	_IOCCF0_SetInterruptHandler
  4457  02F8                     l1399:	
  4458                           
  4459                           ;mcc_generated_files/pin_manager.c: 118:     PIE0bits.IOCIE = 1;
  4460  02F8  0021               	movlb	1	; select bank1
  4461  02F9  1610               	bsf	16,4	;volatile
  4462  02FA                     l105:	
  4463  02FA  0008               	return
  4464  02FB                     __end_of_PIN_MANAGER_Initialize:	
  4465                           
  4466                           	psect	text11
  4467  040A                     __ptext11:	
  4468 ;; *************** function _IOCCF0_SetInterruptHandler *****************
  4469 ;; Defined at:
  4470 ;;		line 149 in file "mcc_generated_files/pin_manager.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4473 ;;		 -> IOCCF0_DefaultInterruptHandler(1), 
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  1    wreg      void 
  4478 ;; Registers used:
  4479 ;;		wreg
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4489 ;;Total ram usage:        2 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    4
  4492 ;; This function calls:
  4493 ;;		Nothing
  4494 ;; This function is called by:
  4495 ;;		_PIN_MANAGER_Initialize
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           
  4500                           ;psect for function _IOCCF0_SetInterruptHandler
  4501  040A                     _IOCCF0_SetInterruptHandler:	
  4502  040A                     l1345:	
  4503                           ;incstack = 0
  4504                           ; Regs used in _IOCCF0_SetInterruptHandler: [wreg]
  4505                           
  4506                           
  4507                           ;mcc_generated_files/pin_manager.c: 150:     IOCCF0_InterruptHandler = InterruptHandler;
  4508  040A  0873               	movf	IOCCF0_SetInterruptHandler@InterruptHandler+1,w
  4509  040B  0020               	movlb	0	; select bank0
  4510  040C  00EF               	movwf	_IOCCF0_InterruptHandler+1
  4511  040D  0872               	movf	IOCCF0_SetInterruptHandler@InterruptHandler,w
  4512  040E  00EE               	movwf	_IOCCF0_InterruptHandler
  4513  040F                     l116:	
  4514  040F  0008               	return
  4515  0410                     __end_of_IOCCF0_SetInterruptHandler:	
  4516                           
  4517                           	psect	text12
  4518  03E2                     __ptext12:	
  4519 ;; *************** function _OSCILLATOR_Initialize *****************
  4520 ;; Defined at:
  4521 ;;		line 60 in file "mcc_generated_files/mcc.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;		None
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;		None
  4526 ;; Return value:  Size  Location     Type
  4527 ;;                  1    wreg      void 
  4528 ;; Registers used:
  4529 ;;		wreg, status,2
  4530 ;; Tracked objects:
  4531 ;;		On entry : 0/0
  4532 ;;		On exit  : 0/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4539 ;;Total ram usage:        0 bytes
  4540 ;; Hardware stack levels used:    1
  4541 ;; Hardware stack levels required when called:    4
  4542 ;; This function calls:
  4543 ;;		Nothing
  4544 ;; This function is called by:
  4545 ;;		_SYSTEM_Initialize
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           
  4550                           ;psect for function _OSCILLATOR_Initialize
  4551  03E2                     _OSCILLATOR_Initialize:	
  4552  03E2                     l1401:	
  4553                           ;incstack = 0
  4554                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4555                           
  4556                           
  4557                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
  4558  03E2  3062               	movlw	98
  4559  03E3  0032               	movlb	18	; select bank18
  4560  03E4  0099               	movwf	25	;volatile
  4561  03E5                     l1403:	
  4562                           
  4563                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  4564  03E5  019B               	clrf	27	;volatile
  4565  03E6                     l1405:	
  4566                           
  4567                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  4568  03E6  019D               	clrf	29	;volatile
  4569                           
  4570                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x03;
  4571  03E7  3003               	movlw	3
  4572  03E8  009F               	movwf	31	;volatile
  4573  03E9                     l1407:	
  4574                           
  4575                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  4576  03E9  019E               	clrf	30	;volatile
  4577  03EA                     l50:	
  4578  03EA  0008               	return
  4579  03EB                     __end_of_OSCILLATOR_Initialize:	
  4580                           
  4581                           	psect	text13
  4582  005F                     __ptext13:	
  4583 ;; *************** function _InitWigwagPattern *****************
  4584 ;; Defined at:
  4585 ;;		line 87 in file "Pattern.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;  pattern         2   29[BANK0 ] PTR struct Pattern
  4588 ;;		 -> Wigwag(3), 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  i               2   46[BANK0 ] int 
  4591 ;;  i               2   44[BANK0 ] int 
  4592 ;;  right_side_s    4   36[BANK0 ] _Bool [4]
  4593 ;;  left_side_st    4   32[BANK0 ] _Bool [4]
  4594 ;;  head            2   50[BANK0 ] PTR struct Stage
  4595 ;;		 -> stage_stash(320), NULL(0), 
  4596 ;;  off             2   48[BANK0 ] PTR struct Stage
  4597 ;;		 -> stage_stash(320), NULL(0), 
  4598 ;;  right_side_o    2   42[BANK0 ] PTR struct Stage
  4599 ;;		 -> stage_stash(320), NULL(0), 
  4600 ;;  left_side_on    2   40[BANK0 ] PTR struct Stage
  4601 ;;		 -> stage_stash(320), NULL(0), 
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  1    wreg      void 
  4604 ;; Registers used:
  4605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4611 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4612 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4613 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4614 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4615 ;;Total ram usage:       23 bytes
  4616 ;; Hardware stack levels used:    1
  4617 ;; Hardware stack levels required when called:    7
  4618 ;; This function calls:
  4619 ;;		_AppendStage
  4620 ;;		_ConstructStage
  4621 ;;		_CopyStageData
  4622 ;;		_NewStage
  4623 ;; This function is called by:
  4624 ;;		_setup
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           
  4629                           ;psect for function _InitWigwagPattern
  4630  005F                     _InitWigwagPattern:	
  4631  005F                     l1673:	
  4632                           ;incstack = 0
  4633                           ; Regs used in _InitWigwagPattern: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4634                           
  4635                           
  4636                           ;Pattern.c: 87: void InitWigwagPattern( struct Pattern* pattern );Pattern.c: 88: {;Patte
      +                          rn.c: 89:     pattern->name = WIGWAG;
  4637  005F  0020               	movlb	0	; select bank0
  4638  0060  083D               	movf	InitWigwagPattern@pattern,w
  4639  0061  0086               	movwf	6
  4640  0062  083E               	movf	InitWigwagPattern@pattern+1,w
  4641  0063  0087               	movwf	7
  4642  0064  0181               	clrf	1
  4643  0065                     l1675:	
  4644                           
  4645                           ;Pattern.c: 92:     _Bool left_side_states[NUM_LIGHTS] = { 1, 0, 1, 0 };
  4646  0065  0869               	movf	InitWigwagPattern@F436+3,w
  4647  0066  00C3               	movwf	InitWigwagPattern@left_side_states+3
  4648  0067  0868               	movf	InitWigwagPattern@F436+2,w
  4649  0068  00C2               	movwf	InitWigwagPattern@left_side_states+2
  4650  0069  0867               	movf	InitWigwagPattern@F436+1,w
  4651  006A  00C1               	movwf	InitWigwagPattern@left_side_states+1
  4652  006B  0866               	movf	InitWigwagPattern@F436,w
  4653  006C  00C0               	movwf	InitWigwagPattern@left_side_states
  4654  006D                     l1677:	
  4655                           
  4656                           ;Pattern.c: 93:     struct Stage* left_side_on = ConstructStage( left_side_states, 80, (
      +                          (void*)0) );
  4657  006D  3050               	movlw	80
  4658  006E  00AC               	movwf	ConstructStage@time_ms
  4659  006F  3000               	movlw	0
  4660  0070  00AD               	movwf	ConstructStage@time_ms+1
  4661  0071  01AE               	clrf	ConstructStage@next
  4662  0072  3040               	movlw	(low (InitWigwagPattern@left_side_states| 0))& (0+255)
  4663  0073  3182  2277  3180   	fcall	_ConstructStage
  4664  0076  0020               	movlb	0	; select bank0
  4665  0077  082D               	movf	?_ConstructStage+1,w
  4666  0078  00C9               	movwf	InitWigwagPattern@left_side_on+1
  4667  0079  082C               	movf	?_ConstructStage,w
  4668  007A  00C8               	movwf	InitWigwagPattern@left_side_on
  4669  007B                     l1679:	
  4670                           
  4671                           ;Pattern.c: 95:     _Bool right_side_states[NUM_LIGHTS] = { 0, 1, 0, 1 };
  4672  007B  0865               	movf	InitWigwagPattern@F439+3,w
  4673  007C  00C7               	movwf	InitWigwagPattern@right_side_states+3
  4674  007D  0864               	movf	InitWigwagPattern@F439+2,w
  4675  007E  00C6               	movwf	InitWigwagPattern@right_side_states+2
  4676  007F  0863               	movf	InitWigwagPattern@F439+1,w
  4677  0080  00C5               	movwf	InitWigwagPattern@right_side_states+1
  4678  0081  0862               	movf	InitWigwagPattern@F439,w
  4679  0082  00C4               	movwf	InitWigwagPattern@right_side_states
  4680  0083                     l1681:	
  4681                           
  4682                           ;Pattern.c: 96:     struct Stage* right_side_on = ConstructStage( right_side_states, 80,
      +                           ((void*)0) );
  4683  0083  3050               	movlw	80
  4684  0084  00AC               	movwf	ConstructStage@time_ms
  4685  0085  3000               	movlw	0
  4686  0086  00AD               	movwf	ConstructStage@time_ms+1
  4687  0087  01AE               	clrf	ConstructStage@next
  4688  0088  3044               	movlw	(low (InitWigwagPattern@right_side_states| 0))& (0+255)
  4689  0089  3182  2277  3180   	fcall	_ConstructStage
  4690  008C  0020               	movlb	0	; select bank0
  4691  008D  082D               	movf	?_ConstructStage+1,w
  4692  008E  00CB               	movwf	InitWigwagPattern@right_side_on+1
  4693  008F  082C               	movf	?_ConstructStage,w
  4694  0090  00CA               	movwf	InitWigwagPattern@right_side_on
  4695  0091                     l1683:	
  4696                           
  4697                           ;Pattern.c: 98:     struct Stage* off = NewStage();
  4698  0091  3181  21BD  3180   	fcall	_NewStage
  4699  0094  0878               	movf	?_NewStage+1,w
  4700  0095  0020               	movlb	0	; select bank0
  4701  0096  00D1               	movwf	InitWigwagPattern@off+1
  4702  0097  0877               	movf	?_NewStage,w
  4703  0098  00D0               	movwf	InitWigwagPattern@off
  4704  0099                     l1685:	
  4705                           
  4706                           ;Pattern.c: 100:     pattern->first_stage = NewStage();
  4707  0099  3181  21BD  3180   	fcall	_NewStage
  4708  009C  0020               	movlb	0	; select bank0
  4709  009D  083D               	movf	InitWigwagPattern@pattern,w
  4710  009E  0086               	movwf	6
  4711  009F  083E               	movf	InitWigwagPattern@pattern+1,w
  4712  00A0  0087               	movwf	7
  4713  00A1  3141               	addfsr 1,1
  4714  00A2  0877               	movf	?_NewStage,w
  4715  00A3  3FC0               	movwi [0]fsr1
  4716  00A4  0878               	movf	?_NewStage+1,w
  4717  00A5  3FC1               	movwi [1]fsr1
  4718  00A6                     l1687:	
  4719                           
  4720                           ;Pattern.c: 101:     struct Stage* head = pattern->first_stage;
  4721  00A6  083D               	movf	InitWigwagPattern@pattern,w
  4722  00A7  0086               	movwf	6
  4723  00A8  083E               	movf	InitWigwagPattern@pattern+1,w
  4724  00A9  0087               	movwf	7
  4725  00AA  3141               	addfsr 1,1
  4726  00AB  3F40               	moviw [0]fsr1
  4727  00AC  00D2               	movwf	InitWigwagPattern@head
  4728  00AD  3F41               	moviw [1]fsr1
  4729  00AE  00D3               	movwf	InitWigwagPattern@head+1
  4730  00AF                     l1689:	
  4731                           
  4732                           ;Pattern.c: 104:     for( int i = 0; i < 3; i++ )
  4733  00AF  01CC               	clrf	InitWigwagPattern@i
  4734  00B0  01CD               	clrf	InitWigwagPattern@i+1
  4735  00B1                     l1695:	
  4736                           
  4737                           ;Pattern.c: 105:     {;Pattern.c: 106:         AppendStage( head, CopyStageData( NewStag
      +                          e(), left_side_on ) );
  4738  00B1  0020               	movlb	0	; select bank0
  4739  00B2  0853               	movf	InitWigwagPattern@head+1,w
  4740  00B3  00B6               	movwf	AppendStage@head+1
  4741  00B4  0852               	movf	InitWigwagPattern@head,w
  4742  00B5  00B5               	movwf	AppendStage@head
  4743  00B6  3181  21BD  3180   	fcall	_NewStage
  4744  00B9  0878               	movf	?_NewStage+1,w
  4745  00BA  0020               	movlb	0	; select bank0
  4746  00BB  00AD               	movwf	CopyStageData@dest+1
  4747  00BC  0877               	movf	?_NewStage,w
  4748  00BD  00AC               	movwf	CopyStageData@dest
  4749  00BE  0849               	movf	InitWigwagPattern@left_side_on+1,w
  4750  00BF  00AF               	movwf	CopyStageData@source+1
  4751  00C0  0848               	movf	InitWigwagPattern@left_side_on,w
  4752  00C1  00AE               	movwf	CopyStageData@source
  4753  00C2  3182  220C  3180   	fcall	_CopyStageData
  4754  00C5  0020               	movlb	0	; select bank0
  4755  00C6  082D               	movf	?_CopyStageData+1,w
  4756  00C7  00B8               	movwf	AppendStage@new_stage+1
  4757  00C8  082C               	movf	?_CopyStageData,w
  4758  00C9  00B7               	movwf	AppendStage@new_stage
  4759  00CA  3181  2165  3180   	fcall	_AppendStage
  4760                           
  4761                           ;Pattern.c: 107:         AppendStage( head, CopyStageData( NewStage(), off ) );
  4762  00CD  0020               	movlb	0	; select bank0
  4763  00CE  0853               	movf	InitWigwagPattern@head+1,w
  4764  00CF  00B6               	movwf	AppendStage@head+1
  4765  00D0  0852               	movf	InitWigwagPattern@head,w
  4766  00D1  00B5               	movwf	AppendStage@head
  4767  00D2  3181  21BD  3180   	fcall	_NewStage
  4768  00D5  0878               	movf	?_NewStage+1,w
  4769  00D6  0020               	movlb	0	; select bank0
  4770  00D7  00AD               	movwf	CopyStageData@dest+1
  4771  00D8  0877               	movf	?_NewStage,w
  4772  00D9  00AC               	movwf	CopyStageData@dest
  4773  00DA  0851               	movf	InitWigwagPattern@off+1,w
  4774  00DB  00AF               	movwf	CopyStageData@source+1
  4775  00DC  0850               	movf	InitWigwagPattern@off,w
  4776  00DD  00AE               	movwf	CopyStageData@source
  4777  00DE  3182  220C  3180   	fcall	_CopyStageData
  4778  00E1  0020               	movlb	0	; select bank0
  4779  00E2  082D               	movf	?_CopyStageData+1,w
  4780  00E3  00B8               	movwf	AppendStage@new_stage+1
  4781  00E4  082C               	movf	?_CopyStageData,w
  4782  00E5  00B7               	movwf	AppendStage@new_stage
  4783  00E6  3181  2165  3180   	fcall	_AppendStage
  4784  00E9                     l1697:	
  4785                           
  4786                           ;Pattern.c: 108:     }
  4787  00E9  3001               	movlw	1
  4788  00EA  0020               	movlb	0	; select bank0
  4789  00EB  07CC               	addwf	InitWigwagPattern@i,f
  4790  00EC  3000               	movlw	0
  4791  00ED  3DCD               	addwfc	InitWigwagPattern@i+1,f
  4792  00EE                     l1699:	
  4793  00EE  084D               	movf	InitWigwagPattern@i+1,w
  4794  00EF  3A80               	xorlw	128
  4795  00F0  00BF               	movwf	??_InitWigwagPattern
  4796  00F1  3080               	movlw	128
  4797  00F2  023F               	subwf	??_InitWigwagPattern,w
  4798  00F3  1D03               	skipz
  4799  00F4  28F7               	goto	u415
  4800  00F5  3003               	movlw	3
  4801  00F6  024C               	subwf	InitWigwagPattern@i,w
  4802  00F7                     u415:	
  4803  00F7  1C03               	skipc
  4804  00F8  28FA               	goto	u411
  4805  00F9  28FB               	goto	u410
  4806  00FA                     u411:	
  4807  00FA  28B1               	goto	l1695
  4808  00FB                     u410:	
  4809  00FB                     l1701:	
  4810                           
  4811                           ;Pattern.c: 110:     AppendStage( head, CopyStageData( NewStage(), off ) );
  4812  00FB  0020               	movlb	0	; select bank0
  4813  00FC  0853               	movf	InitWigwagPattern@head+1,w
  4814  00FD  00B6               	movwf	AppendStage@head+1
  4815  00FE  0852               	movf	InitWigwagPattern@head,w
  4816  00FF  00B5               	movwf	AppendStage@head
  4817  0100  3181  21BD  3180   	fcall	_NewStage
  4818  0103  0878               	movf	?_NewStage+1,w
  4819  0104  0020               	movlb	0	; select bank0
  4820  0105  00AD               	movwf	CopyStageData@dest+1
  4821  0106  0877               	movf	?_NewStage,w
  4822  0107  00AC               	movwf	CopyStageData@dest
  4823  0108  0851               	movf	InitWigwagPattern@off+1,w
  4824  0109  00AF               	movwf	CopyStageData@source+1
  4825  010A  0850               	movf	InitWigwagPattern@off,w
  4826  010B  00AE               	movwf	CopyStageData@source
  4827  010C  3182  220C  3180   	fcall	_CopyStageData
  4828  010F  0020               	movlb	0	; select bank0
  4829  0110  082D               	movf	?_CopyStageData+1,w
  4830  0111  00B8               	movwf	AppendStage@new_stage+1
  4831  0112  082C               	movf	?_CopyStageData,w
  4832  0113  00B7               	movwf	AppendStage@new_stage
  4833  0114  3181  2165  3180   	fcall	_AppendStage
  4834  0117                     l1703:	
  4835                           
  4836                           ;Pattern.c: 112:     for( int i = 0; i < 3; i++ )
  4837  0117  0020               	movlb	0	; select bank0
  4838  0118  01CE               	clrf	InitWigwagPattern@i_748
  4839  0119  01CF               	clrf	InitWigwagPattern@i_748+1
  4840  011A                     l1709:	
  4841                           
  4842                           ;Pattern.c: 113:     {;Pattern.c: 114:         AppendStage( head, CopyStageData( NewStag
      +                          e(), right_side_on ) );
  4843  011A  0020               	movlb	0	; select bank0
  4844  011B  0853               	movf	InitWigwagPattern@head+1,w
  4845  011C  00B6               	movwf	AppendStage@head+1
  4846  011D  0852               	movf	InitWigwagPattern@head,w
  4847  011E  00B5               	movwf	AppendStage@head
  4848  011F  3181  21BD  3180   	fcall	_NewStage
  4849  0122  0878               	movf	?_NewStage+1,w
  4850  0123  0020               	movlb	0	; select bank0
  4851  0124  00AD               	movwf	CopyStageData@dest+1
  4852  0125  0877               	movf	?_NewStage,w
  4853  0126  00AC               	movwf	CopyStageData@dest
  4854  0127  084B               	movf	InitWigwagPattern@right_side_on+1,w
  4855  0128  00AF               	movwf	CopyStageData@source+1
  4856  0129  084A               	movf	InitWigwagPattern@right_side_on,w
  4857  012A  00AE               	movwf	CopyStageData@source
  4858  012B  3182  220C  3180   	fcall	_CopyStageData
  4859  012E  0020               	movlb	0	; select bank0
  4860  012F  082D               	movf	?_CopyStageData+1,w
  4861  0130  00B8               	movwf	AppendStage@new_stage+1
  4862  0131  082C               	movf	?_CopyStageData,w
  4863  0132  00B7               	movwf	AppendStage@new_stage
  4864  0133  3181  2165  3180   	fcall	_AppendStage
  4865                           
  4866                           ;Pattern.c: 115:         AppendStage( head, CopyStageData( NewStage(), off ) );
  4867  0136  0020               	movlb	0	; select bank0
  4868  0137  0853               	movf	InitWigwagPattern@head+1,w
  4869  0138  00B6               	movwf	AppendStage@head+1
  4870  0139  0852               	movf	InitWigwagPattern@head,w
  4871  013A  00B5               	movwf	AppendStage@head
  4872  013B  3181  21BD  3180   	fcall	_NewStage
  4873  013E  0878               	movf	?_NewStage+1,w
  4874  013F  0020               	movlb	0	; select bank0
  4875  0140  00AD               	movwf	CopyStageData@dest+1
  4876  0141  0877               	movf	?_NewStage,w
  4877  0142  00AC               	movwf	CopyStageData@dest
  4878  0143  0851               	movf	InitWigwagPattern@off+1,w
  4879  0144  00AF               	movwf	CopyStageData@source+1
  4880  0145  0850               	movf	InitWigwagPattern@off,w
  4881  0146  00AE               	movwf	CopyStageData@source
  4882  0147  3182  220C  3180   	fcall	_CopyStageData
  4883  014A  0020               	movlb	0	; select bank0
  4884  014B  082D               	movf	?_CopyStageData+1,w
  4885  014C  00B8               	movwf	AppendStage@new_stage+1
  4886  014D  082C               	movf	?_CopyStageData,w
  4887  014E  00B7               	movwf	AppendStage@new_stage
  4888  014F  3181  2165  3180   	fcall	_AppendStage
  4889  0152                     l1711:	
  4890                           
  4891                           ;Pattern.c: 116:     }
  4892  0152  3001               	movlw	1
  4893  0153  0020               	movlb	0	; select bank0
  4894  0154  07CE               	addwf	InitWigwagPattern@i_748,f
  4895  0155  3000               	movlw	0
  4896  0156  3DCF               	addwfc	InitWigwagPattern@i_748+1,f
  4897  0157                     l1713:	
  4898  0157  084F               	movf	InitWigwagPattern@i_748+1,w
  4899  0158  3A80               	xorlw	128
  4900  0159  00BF               	movwf	??_InitWigwagPattern
  4901  015A  3080               	movlw	128
  4902  015B  023F               	subwf	??_InitWigwagPattern,w
  4903  015C  1D03               	skipz
  4904  015D  2960               	goto	u425
  4905  015E  3003               	movlw	3
  4906  015F  024E               	subwf	InitWigwagPattern@i_748,w
  4907  0160                     u425:	
  4908  0160  1C03               	skipc
  4909  0161  2963               	goto	u421
  4910  0162  2964               	goto	u420
  4911  0163                     u421:	
  4912  0163  291A               	goto	l1709
  4913  0164                     u420:	
  4914  0164                     l385:	
  4915  0164  0008               	return
  4916  0165                     __end_of_InitWigwagPattern:	
  4917                           
  4918                           	psect	text14
  4919  020C                     __ptext14:	
  4920 ;; *************** function _CopyStageData *****************
  4921 ;; Defined at:
  4922 ;;		line 51 in file "Pattern.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;  dest            2   12[BANK0 ] PTR struct Stage
  4925 ;;		 -> stage_stash(320), NULL(0), 
  4926 ;;  source          2   14[BANK0 ] PTR struct Stage
  4927 ;;		 -> stage_stash(320), NULL(0), 
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;  i               2   19[BANK0 ] int 
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  2   12[BANK0 ] PTR struct Stage
  4932 ;; Registers used:
  4933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4939 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4940 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4941 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4942 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4943 ;;Total ram usage:        9 bytes
  4944 ;; Hardware stack levels used:    1
  4945 ;; Hardware stack levels required when called:    4
  4946 ;; This function calls:
  4947 ;;		Nothing
  4948 ;; This function is called by:
  4949 ;;		_InitWigwagPattern
  4950 ;;		_CopyStage
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           
  4955                           ;psect for function _CopyStageData
  4956  020C                     _CopyStageData:	
  4957  020C                     l1447:	
  4958                           ;incstack = 0
  4959                           ; Regs used in _CopyStageData: [wreg-fsr1h+status,2+status,0]
  4960                           
  4961                           
  4962                           ;Pattern.c: 51: struct Stage* CopyStageData( struct Stage* dest, struct Stage* source );
      +                          Pattern.c: 52: {;Pattern.c: 53:     for( int i = 0; i < NUM_LIGHTS; i++ )
  4963  020C  0020               	movlb	0	; select bank0
  4964  020D  01B3               	clrf	CopyStageData@i
  4965  020E  01B4               	clrf	CopyStageData@i+1
  4966  020F                     l1453:	
  4967                           
  4968                           ;Pattern.c: 54:         dest->light_states[i] = source->light_states[i];
  4969  020F  0020               	movlb	0	; select bank0
  4970  0210  0833               	movf	CopyStageData@i,w
  4971  0211  072E               	addwf	CopyStageData@source,w
  4972  0212  0086               	movwf	6
  4973  0213  0834               	movf	CopyStageData@i+1,w
  4974  0214  3D2F               	addwfc	CopyStageData@source+1,w
  4975  0215  0087               	movwf	7
  4976  0216  0801               	movf	1,w
  4977  0217  00B0               	movwf	??_CopyStageData
  4978  0218  0833               	movf	CopyStageData@i,w
  4979  0219  072C               	addwf	CopyStageData@dest,w
  4980  021A  00B1               	movwf	??_CopyStageData+1
  4981  021B  0834               	movf	CopyStageData@i+1,w
  4982  021C  3D2D               	addwfc	CopyStageData@dest+1,w
  4983  021D  00B2               	movwf	??_CopyStageData+2
  4984  021E  0831               	movf	??_CopyStageData+1,w
  4985  021F  0086               	movwf	6
  4986  0220  0832               	movf	??_CopyStageData+2,w
  4987  0221  0087               	movwf	7
  4988  0222  0830               	movf	??_CopyStageData,w
  4989  0223  0081               	movwf	1
  4990  0224                     l1455:	
  4991  0224  3001               	movlw	1
  4992  0225  07B3               	addwf	CopyStageData@i,f
  4993  0226  3000               	movlw	0
  4994  0227  3DB4               	addwfc	CopyStageData@i+1,f
  4995  0228                     l1457:	
  4996  0228  0834               	movf	CopyStageData@i+1,w
  4997  0229  3A80               	xorlw	128
  4998  022A  00B0               	movwf	??_CopyStageData
  4999  022B  3080               	movlw	128
  5000  022C  0230               	subwf	??_CopyStageData,w
  5001  022D  1D03               	skipz
  5002  022E  2A31               	goto	u245
  5003  022F  3004               	movlw	4
  5004  0230  0233               	subwf	CopyStageData@i,w
  5005  0231                     u245:	
  5006  0231  1C03               	skipc
  5007  0232  2A34               	goto	u241
  5008  0233  2A35               	goto	u240
  5009  0234                     u241:	
  5010  0234  2A0F               	goto	l1453
  5011  0235                     u240:	
  5012  0235                     l1459:	
  5013                           
  5014                           ;Pattern.c: 55:     dest->time_ms = source->time_ms;
  5015  0235  0020               	movlb	0	; select bank0
  5016  0236  082E               	movf	CopyStageData@source,w
  5017  0237  0086               	movwf	6
  5018  0238  082F               	movf	CopyStageData@source+1,w
  5019  0239  0087               	movwf	7
  5020  023A  3144               	addfsr 1,4
  5021  023B  082C               	movf	CopyStageData@dest,w
  5022  023C  0084               	movwf	4
  5023  023D  082D               	movf	CopyStageData@dest+1,w
  5024  023E  0085               	movwf	5
  5025  023F  3104               	addfsr 0,4
  5026  0240  3F40               	moviw [0]fsr1
  5027  0241  3F80               	movwi [0]fsr0
  5028  0242  3F41               	moviw [1]fsr1
  5029  0243  3F81               	movwi [1]fsr0
  5030  0244                     l1461:	
  5031  0244                     l360:	
  5032                           ;Pattern.c: 56:     return dest;
  5033                           
  5034  0244  0008               	return
  5035  0245                     __end_of_CopyStageData:	
  5036                           
  5037                           	psect	text15
  5038  0277                     __ptext15:	
  5039 ;; *************** function _ConstructStage *****************
  5040 ;; Defined at:
  5041 ;;		line 35 in file "Pattern.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;  states          1    wreg     PTR const _Bool 
  5044 ;;		 -> InitWigwagPattern@right_side_states(4), InitWigwagPattern@left_side_states(4), 
  5045 ;;  time_ms         2   12[BANK0 ] const unsigned short 
  5046 ;;  next            1   14[BANK0 ] PTR struct Stage
  5047 ;;		 -> NULL(0), 
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  states          1   15[BANK0 ] PTR const _Bool 
  5050 ;;		 -> InitWigwagPattern@right_side_states(4), InitWigwagPattern@left_side_states(4), 
  5051 ;;  new_stage       2   16[BANK0 ] PTR struct Stage
  5052 ;;		 -> stage_stash(320), NULL(0), 
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  2   12[BANK0 ] PTR struct Stage
  5055 ;; Registers used:
  5056 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5062 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5063 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5064 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5065 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5066 ;;Total ram usage:        7 bytes
  5067 ;; Hardware stack levels used:    1
  5068 ;; Hardware stack levels required when called:    6
  5069 ;; This function calls:
  5070 ;;		_AssignLightStates
  5071 ;;		_NewStage
  5072 ;; This function is called by:
  5073 ;;		_InitWigwagPattern
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           
  5078                           ;psect for function _ConstructStage
  5079  0277                     _ConstructStage:	
  5080                           
  5081                           ;incstack = 0
  5082                           ; Regs used in _ConstructStage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5083                           ;ConstructStage@states stored from wreg
  5084  0277  0020               	movlb	0	; select bank0
  5085  0278  00AF               	movwf	ConstructStage@states
  5086  0279                     l1663:	
  5087                           
  5088                           ;Pattern.c: 35: struct Stage* ConstructStage( const _Bool states[NUM_LIGHTS], const uint
      +                           time_ms, struct Stage* next );Pattern.c: 36: {;Pattern.c: 37:     struct Stage* new_sta
      +                          ge = NewStage();
  5089  0279  3181  21BD  3182   	fcall	_NewStage
  5090  027C  0878               	movf	?_NewStage+1,w
  5091  027D  0020               	movlb	0	; select bank0
  5092  027E  00B1               	movwf	ConstructStage@new_stage+1
  5093  027F  0877               	movf	?_NewStage,w
  5094  0280  00B0               	movwf	ConstructStage@new_stage
  5095                           
  5096                           ;Pattern.c: 38:     AssignLightStates( new_stage, states );
  5097  0281  0831               	movf	ConstructStage@new_stage+1,w
  5098  0282  00F3               	movwf	AssignLightStates@stage+1
  5099  0283  0830               	movf	ConstructStage@new_stage,w
  5100  0284  00F2               	movwf	AssignLightStates@stage
  5101  0285  082F               	movf	ConstructStage@states,w
  5102  0286  00F9               	movwf	??_ConstructStage
  5103  0287  0879               	movf	??_ConstructStage,w
  5104  0288  00F4               	movwf	AssignLightStates@states
  5105  0289  3183  2321  3182   	fcall	_AssignLightStates
  5106  028C                     l1665:	
  5107                           
  5108                           ;Pattern.c: 39:     new_stage->time_ms = time_ms;
  5109  028C  0020               	movlb	0	; select bank0
  5110  028D  0830               	movf	ConstructStage@new_stage,w
  5111  028E  0086               	movwf	6
  5112  028F  0831               	movf	ConstructStage@new_stage+1,w
  5113  0290  0087               	movwf	7
  5114  0291  3144               	addfsr 1,4
  5115  0292  082C               	movf	ConstructStage@time_ms,w
  5116  0293  3FC0               	movwi [0]fsr1
  5117  0294  082D               	movf	ConstructStage@time_ms+1,w
  5118  0295  3FC1               	movwi [1]fsr1
  5119  0296                     l1667:	
  5120                           
  5121                           ;Pattern.c: 40:     new_stage->next = next;
  5122  0296  0830               	movf	ConstructStage@new_stage,w
  5123  0297  0086               	movwf	6
  5124  0298  0831               	movf	ConstructStage@new_stage+1,w
  5125  0299  0087               	movwf	7
  5126  029A  3146               	addfsr 1,6
  5127  029B  082E               	movf	ConstructStage@next,w
  5128  029C  3FC0               	movwi [0]fsr1
  5129  029D  3000               	movlw	0
  5130  029E  3FC1               	movwi [1]fsr1
  5131  029F                     l1669:	
  5132                           
  5133                           ;Pattern.c: 41:     return new_stage;
  5134  029F  0831               	movf	ConstructStage@new_stage+1,w
  5135  02A0  00AD               	movwf	?_ConstructStage+1
  5136  02A1  0830               	movf	ConstructStage@new_stage,w
  5137  02A2  00AC               	movwf	?_ConstructStage
  5138  02A3                     l352:	
  5139  02A3  0008               	return
  5140  02A4                     __end_of_ConstructStage:	
  5141                           
  5142                           	psect	text16
  5143  01BD                     __ptext16:	
  5144 ;; *************** function _NewStage *****************
  5145 ;; Defined at:
  5146 ;;		line 21 in file "Pattern.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;		None
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;  init_states     4    6[BANK0 ] _Bool [4]
  5151 ;;  new_stage       2   10[BANK0 ] PTR struct Stage
  5152 ;;		 -> stage_stash(320), 
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  2    7[COMMON] PTR struct Stage
  5155 ;; Registers used:
  5156 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5163 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5164 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5165 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5166 ;;Total ram usage:       10 bytes
  5167 ;; Hardware stack levels used:    1
  5168 ;; Hardware stack levels required when called:    5
  5169 ;; This function calls:
  5170 ;;		_AssignLightStates
  5171 ;; This function is called by:
  5172 ;;		_ConstructStage
  5173 ;;		_InitWigwagPattern
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           
  5178                           ;psect for function _NewStage
  5179  01BD                     _NewStage:	
  5180  01BD                     l1641:	
  5181                           ;incstack = 0
  5182                           ; Regs used in _NewStage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5183                           
  5184                           
  5185                           ;Pattern.c: 23:     if ( stage_list_iter >= MAX_STAGES )
  5186  01BD  3000               	movlw	0
  5187  01BE  0020               	movlb	0	; select bank0
  5188  01BF  0255               	subwf	_stage_list_iter+1,w
  5189  01C0  3028               	movlw	40
  5190  01C1  1903               	skipnz
  5191  01C2  0254               	subwf	_stage_list_iter,w
  5192  01C3  1C03               	skipc
  5193  01C4  29C6               	goto	u401
  5194  01C5  29C7               	goto	u400
  5195  01C6                     u401:	
  5196  01C6  29CA               	goto	l1647
  5197  01C7                     u400:	
  5198  01C7                     l1643:	
  5199                           
  5200                           ;Pattern.c: 24:         return ((void*)0);
  5201  01C7  01F7               	clrf	?_NewStage
  5202  01C8  01F8               	clrf	?_NewStage+1
  5203  01C9  2A0B               	goto	l347
  5204  01CA                     l1647:	
  5205                           
  5206                           ;Pattern.c: 26:     struct Stage* new_stage = &stage_stash[ stage_list_iter++ ];
  5207  01CA  0855               	movf	_stage_list_iter+1,w
  5208  01CB  00A3               	movwf	??_NewStage+1
  5209  01CC  0854               	movf	_stage_list_iter,w
  5210  01CD  00A2               	movwf	??_NewStage
  5211  01CE  35A2               	lslf	??_NewStage,f
  5212  01CF  0DA3               	rlf	??_NewStage+1,f
  5213  01D0  35A2               	lslf	??_NewStage,f
  5214  01D1  0DA3               	rlf	??_NewStage+1,f
  5215  01D2  35A2               	lslf	??_NewStage,f
  5216  01D3  0DA3               	rlf	??_NewStage+1,f
  5217  01D4  30B0               	movlw	176
  5218  01D5  00A4               	movwf	??_NewStage+2
  5219  01D6  3022               	movlw	34
  5220  01D7  00A5               	movwf	??_NewStage+3
  5221  01D8  0822               	movf	??_NewStage,w
  5222  01D9  0724               	addwf	??_NewStage+2,w
  5223  01DA  00AA               	movwf	NewStage@new_stage
  5224  01DB  0823               	movf	??_NewStage+1,w
  5225  01DC  3D25               	addwfc	??_NewStage+3,w
  5226  01DD  00AB               	movwf	NewStage@new_stage+1
  5227  01DE                     l1649:	
  5228  01DE  3001               	movlw	1
  5229  01DF  07D4               	addwf	_stage_list_iter,f
  5230  01E0  3000               	movlw	0
  5231  01E1  3DD5               	addwfc	_stage_list_iter+1,f
  5232  01E2                     l1651:	
  5233                           
  5234                           ;Pattern.c: 27:     _Bool init_states[NUM_LIGHTS] = { 0, 0, 0, 0 };
  5235  01E2  3000               	movlw	0
  5236  01E3  00A9               	movwf	NewStage@init_states+3
  5237  01E4  3000               	movlw	0
  5238  01E5  00A8               	movwf	NewStage@init_states+2
  5239  01E6  3000               	movlw	0
  5240  01E7  00A7               	movwf	NewStage@init_states+1
  5241  01E8  3000               	movlw	0
  5242  01E9  00A6               	movwf	NewStage@init_states
  5243  01EA                     l1653:	
  5244                           
  5245                           ;Pattern.c: 28:     AssignLightStates( new_stage, init_states );
  5246  01EA  082B               	movf	NewStage@new_stage+1,w
  5247  01EB  00F3               	movwf	AssignLightStates@stage+1
  5248  01EC  082A               	movf	NewStage@new_stage,w
  5249  01ED  00F2               	movwf	AssignLightStates@stage
  5250  01EE  3026               	movlw	(low (NewStage@init_states| 0))& (0+255)
  5251  01EF  00A2               	movwf	??_NewStage
  5252  01F0  0822               	movf	??_NewStage,w
  5253  01F1  00F4               	movwf	AssignLightStates@states
  5254  01F2  3183  2321  3181   	fcall	_AssignLightStates
  5255  01F5                     l1655:	
  5256                           
  5257                           ;Pattern.c: 29:     new_stage->time_ms = 80;
  5258  01F5  0020               	movlb	0	; select bank0
  5259  01F6  082A               	movf	NewStage@new_stage,w
  5260  01F7  0086               	movwf	6
  5261  01F8  082B               	movf	NewStage@new_stage+1,w
  5262  01F9  0087               	movwf	7
  5263  01FA  3144               	addfsr 1,4
  5264  01FB  3050               	movlw	80
  5265  01FC  3FC0               	movwi [0]fsr1
  5266  01FD  3000               	movlw	0
  5267  01FE  3FC1               	movwi [1]fsr1
  5268  01FF                     l1657:	
  5269                           
  5270                           ;Pattern.c: 30:     new_stage->next = ((void*)0);
  5271  01FF  082A               	movf	NewStage@new_stage,w
  5272  0200  0086               	movwf	6
  5273  0201  082B               	movf	NewStage@new_stage+1,w
  5274  0202  0087               	movwf	7
  5275  0203  3146               	addfsr 1,6
  5276  0204  3000               	movlw	0
  5277  0205  3FC0               	movwi [0]fsr1
  5278  0206  3FC1               	movwi [1]fsr1
  5279  0207                     l1659:	
  5280                           
  5281                           ;Pattern.c: 32:     return new_stage;
  5282  0207  082B               	movf	NewStage@new_stage+1,w
  5283  0208  00F8               	movwf	?_NewStage+1
  5284  0209  082A               	movf	NewStage@new_stage,w
  5285  020A  00F7               	movwf	?_NewStage
  5286  020B                     l347:	
  5287  020B  0008               	return
  5288  020C                     __end_of_NewStage:	
  5289                           
  5290                           	psect	text17
  5291  0321                     __ptext17:	
  5292 ;; *************** function _AssignLightStates *****************
  5293 ;; Defined at:
  5294 ;;		line 13 in file "Pattern.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;  stage           2    2[COMMON] PTR struct Stage
  5297 ;;		 -> stage_stash(320), NULL(0), 
  5298 ;;  states          1    4[COMMON] PTR const _Bool 
  5299 ;;		 -> InitWigwagPattern@right_side_states(4), InitWigwagPattern@left_side_states(4), NewStage@init_states(4), 
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;  i               2    0[BANK0 ] unsigned short 
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      void 
  5304 ;; Registers used:
  5305 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5311 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5312 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5313 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5314 ;;      Totals:         7       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5315 ;;Total ram usage:        9 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:    4
  5318 ;; This function calls:
  5319 ;;		Nothing
  5320 ;; This function is called by:
  5321 ;;		_NewStage
  5322 ;;		_ConstructStage
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           
  5327                           ;psect for function _AssignLightStates
  5328  0321                     _AssignLightStates:	
  5329  0321                     l1629:	
  5330                           ;incstack = 0
  5331                           ; Regs used in _AssignLightStates: [wreg+fsr1l+fsr1h+status,2+status,0]
  5332                           
  5333                           
  5334                           ;Pattern.c: 13: void AssignLightStates( struct Stage* stage, const _Bool states[ NUM_LIG
      +                          HTS ] );Pattern.c: 14: {;Pattern.c: 15:     for( uint i = 0; i < NUM_LIGHTS; i++ )
  5335  0321  0020               	movlb	0	; select bank0
  5336  0322  01A0               	clrf	AssignLightStates@i
  5337  0323  01A1               	clrf	AssignLightStates@i+1
  5338  0324                     l1635:	
  5339                           
  5340                           ;Pattern.c: 16:     {;Pattern.c: 17:         stage->light_states[i] = states[i];
  5341  0324  0820               	movf	AssignLightStates@i,w
  5342  0325  0774               	addwf	AssignLightStates@states,w
  5343  0326  00F5               	movwf	??_AssignLightStates
  5344  0327  0875               	movf	??_AssignLightStates,w
  5345  0328  0086               	movwf	6
  5346  0329  0187               	clrf	7
  5347  032A  0801               	movf	1,w
  5348  032B  00F6               	movwf	??_AssignLightStates+1
  5349  032C  0820               	movf	AssignLightStates@i,w
  5350  032D  0772               	addwf	AssignLightStates@stage,w
  5351  032E  00F7               	movwf	??_AssignLightStates+2
  5352  032F  0821               	movf	AssignLightStates@i+1,w
  5353  0330  3D73               	addwfc	AssignLightStates@stage+1,w
  5354  0331  00F8               	movwf	??_AssignLightStates+3
  5355  0332  0877               	movf	??_AssignLightStates+2,w
  5356  0333  0086               	movwf	6
  5357  0334  0878               	movf	??_AssignLightStates+3,w
  5358  0335  0087               	movwf	7
  5359  0336  0876               	movf	??_AssignLightStates+1,w
  5360  0337  0081               	movwf	1
  5361  0338                     l1637:	
  5362                           
  5363                           ;Pattern.c: 18:     }
  5364  0338  3001               	movlw	1
  5365  0339  07A0               	addwf	AssignLightStates@i,f
  5366  033A  3000               	movlw	0
  5367  033B  3DA1               	addwfc	AssignLightStates@i+1,f
  5368  033C                     l1639:	
  5369  033C  3000               	movlw	0
  5370  033D  0221               	subwf	AssignLightStates@i+1,w
  5371  033E  3004               	movlw	4
  5372  033F  1903               	skipnz
  5373  0340  0220               	subwf	AssignLightStates@i,w
  5374  0341  1C03               	skipc
  5375  0342  2B44               	goto	u391
  5376  0343  2B45               	goto	u390
  5377  0344                     u391:	
  5378  0344  2B24               	goto	l1635
  5379  0345                     u390:	
  5380  0345                     l343:	
  5381  0345  0008               	return
  5382  0346                     __end_of_AssignLightStates:	
  5383                           
  5384                           	psect	text18
  5385  0165                     __ptext18:	
  5386 ;; *************** function _AppendStage *****************
  5387 ;; Defined at:
  5388 ;;		line 59 in file "Pattern.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;  head            2   21[BANK0 ] PTR struct Stage
  5391 ;;		 -> stage_stash(320), NULL(0), 
  5392 ;;  new_stage       2   23[BANK0 ] PTR struct Stage
  5393 ;;		 -> stage_stash(320), NULL(0), 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  last_stage      2   27[BANK0 ] PTR struct Stage
  5396 ;;		 -> stage_stash(320), NULL(0), 
  5397 ;; Return value:  Size  Location     Type
  5398 ;;                  1    wreg      void 
  5399 ;; Registers used:
  5400 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5401 ;; Tracked objects:
  5402 ;;		On entry : 0/0
  5403 ;;		On exit  : 0/0
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5406 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5407 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5408 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5409 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5410 ;;Total ram usage:        8 bytes
  5411 ;; Hardware stack levels used:    1
  5412 ;; Hardware stack levels required when called:    4
  5413 ;; This function calls:
  5414 ;;		Nothing
  5415 ;; This function is called by:
  5416 ;;		_InitWigwagPattern
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           
  5421                           ;psect for function _AppendStage
  5422  0165                     _AppendStage:	
  5423  0165                     l1465:	
  5424                           ;incstack = 0
  5425                           ; Regs used in _AppendStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  5426                           
  5427                           
  5428                           ;Pattern.c: 59: void AppendStage( struct Stage* head, struct Stage* new_stage );Pattern.
      +                          c: 60: {;Pattern.c: 61:     if ( head->next == ((void*)0) )
  5429  0165  0020               	movlb	0	; select bank0
  5430  0166  0835               	movf	AppendStage@head,w
  5431  0167  0086               	movwf	6
  5432  0168  0836               	movf	AppendStage@head+1,w
  5433  0169  0087               	movwf	7
  5434  016A  3146               	addfsr 1,6
  5435  016B  0016               	moviw fsr1++
  5436  016C  0401               	iorwf	1,w
  5437  016D  1D03               	btfss	3,2
  5438  016E  2970               	goto	u251
  5439  016F  2971               	goto	u250
  5440  0170                     u251:	
  5441  0170  2984               	goto	l1469
  5442  0171                     u250:	
  5443  0171                     l1467:	
  5444                           
  5445                           ;Pattern.c: 62:     {;Pattern.c: 63:         head->next = new_stage;
  5446  0171  0835               	movf	AppendStage@head,w
  5447  0172  0086               	movwf	6
  5448  0173  0836               	movf	AppendStage@head+1,w
  5449  0174  0087               	movwf	7
  5450  0175  3146               	addfsr 1,6
  5451  0176  0837               	movf	AppendStage@new_stage,w
  5452  0177  3FC0               	movwi [0]fsr1
  5453  0178  0838               	movf	AppendStage@new_stage+1,w
  5454  0179  3FC1               	movwi [1]fsr1
  5455                           
  5456                           ;Pattern.c: 64:         new_stage->next = head;
  5457  017A  0837               	movf	AppendStage@new_stage,w
  5458  017B  0086               	movwf	6
  5459  017C  0838               	movf	AppendStage@new_stage+1,w
  5460  017D  0087               	movwf	7
  5461  017E  3146               	addfsr 1,6
  5462  017F  0835               	movf	AppendStage@head,w
  5463  0180  3FC0               	movwi [0]fsr1
  5464  0181  0836               	movf	AppendStage@head+1,w
  5465  0182  3FC1               	movwi [1]fsr1
  5466                           
  5467                           ;Pattern.c: 65:     }
  5468  0183  29BC               	goto	l368
  5469  0184                     l1469:	
  5470                           
  5471                           ;Pattern.c: 67:     {;Pattern.c: 68:         struct Stage* last_stage = head->next;
  5472  0184  0835               	movf	AppendStage@head,w
  5473  0185  0086               	movwf	6
  5474  0186  0836               	movf	AppendStage@head+1,w
  5475  0187  0087               	movwf	7
  5476  0188  3146               	addfsr 1,6
  5477  0189  3F40               	moviw [0]fsr1
  5478  018A  00BB               	movwf	AppendStage@last_stage
  5479  018B  3F41               	moviw [1]fsr1
  5480  018C  00BC               	movwf	AppendStage@last_stage+1
  5481                           
  5482                           ;Pattern.c: 69:         while( last_stage->next != head )
  5483  018D  2997               	goto	l1473
  5484  018E                     l1471:	
  5485                           
  5486                           ;Pattern.c: 70:             last_stage = last_stage->next;
  5487  018E  083B               	movf	AppendStage@last_stage,w
  5488  018F  0086               	movwf	6
  5489  0190  083C               	movf	AppendStage@last_stage+1,w
  5490  0191  0087               	movwf	7
  5491  0192  3146               	addfsr 1,6
  5492  0193  3F40               	moviw [0]fsr1
  5493  0194  00BB               	movwf	AppendStage@last_stage
  5494  0195  3F41               	moviw [1]fsr1
  5495  0196  00BC               	movwf	AppendStage@last_stage+1
  5496  0197                     l1473:	
  5497                           
  5498                           ;Pattern.c: 69:         while( last_stage->next != head )
  5499  0197  083B               	movf	AppendStage@last_stage,w
  5500  0198  0086               	movwf	6
  5501  0199  083C               	movf	AppendStage@last_stage+1,w
  5502  019A  0087               	movwf	7
  5503  019B  3146               	addfsr 1,6
  5504  019C  3F40               	moviw [0]fsr1
  5505  019D  00B9               	movwf	??_AppendStage
  5506  019E  3F41               	moviw [1]fsr1
  5507  019F  00BA               	movwf	??_AppendStage+1
  5508  01A0  0836               	movf	AppendStage@head+1,w
  5509  01A1  063A               	xorwf	??_AppendStage+1,w
  5510  01A2  1D03               	skipz
  5511  01A3  29A6               	goto	u265
  5512  01A4  0835               	movf	AppendStage@head,w
  5513  01A5  0639               	xorwf	??_AppendStage,w
  5514  01A6                     u265:	
  5515  01A6  1D03               	skipz
  5516  01A7  29A9               	goto	u261
  5517  01A8  29AA               	goto	u260
  5518  01A9                     u261:	
  5519  01A9  298E               	goto	l1471
  5520  01AA                     u260:	
  5521  01AA                     l1475:	
  5522                           
  5523                           ;Pattern.c: 73:         last_stage->next = new_stage;
  5524  01AA  083B               	movf	AppendStage@last_stage,w
  5525  01AB  0086               	movwf	6
  5526  01AC  083C               	movf	AppendStage@last_stage+1,w
  5527  01AD  0087               	movwf	7
  5528  01AE  3146               	addfsr 1,6
  5529  01AF  0837               	movf	AppendStage@new_stage,w
  5530  01B0  3FC0               	movwi [0]fsr1
  5531  01B1  0838               	movf	AppendStage@new_stage+1,w
  5532  01B2  3FC1               	movwi [1]fsr1
  5533                           
  5534                           ;Pattern.c: 74:         new_stage->next = head;
  5535  01B3  0837               	movf	AppendStage@new_stage,w
  5536  01B4  0086               	movwf	6
  5537  01B5  0838               	movf	AppendStage@new_stage+1,w
  5538  01B6  0087               	movwf	7
  5539  01B7  3146               	addfsr 1,6
  5540  01B8  0835               	movf	AppendStage@head,w
  5541  01B9  3FC0               	movwi [0]fsr1
  5542  01BA  0836               	movf	AppendStage@head+1,w
  5543  01BB  3FC1               	movwi [1]fsr1
  5544  01BC                     l368:	
  5545  01BC  0008               	return
  5546  01BD                     __end_of_AppendStage:	
  5547                           
  5548                           	psect	text19
  5549  02A4                     __ptext19:	
  5550 ;; *************** function _PatternCycleInputChanged *****************
  5551 ;; Defined at:
  5552 ;;		line 10 in file "PatternSelector.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;		None
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;  delay_count     2    4[COMMON] unsigned short 
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1    wreg      _Bool 
  5559 ;; Registers used:
  5560 ;;		wreg, status,2, status,0
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5567 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5568 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5569 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5570 ;;Total ram usage:        4 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:    4
  5573 ;; This function calls:
  5574 ;;		Nothing
  5575 ;; This function is called by:
  5576 ;;		_main
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           
  5581                           ;psect for function _PatternCycleInputChanged
  5582  02A4                     _PatternCycleInputChanged:	
  5583  02A4                     l1237:	
  5584                           ;incstack = 0
  5585                           ; Regs used in _PatternCycleInputChanged: [wreg+status,2+status,0]
  5586                           
  5587                           
  5588                           ;PatternSelector.c: 12:     if ( cur_pc_input_state != last_pc_input_state )
  5589  02A4  087B               	movf	_cur_pc_input_state,w
  5590  02A5  067A               	xorwf	_last_pc_input_state,w
  5591  02A6  1903               	skipnz
  5592  02A7  2AA9               	goto	u111
  5593  02A8  2AAA               	goto	u110
  5594  02A9                     u111:	
  5595  02A9  2ABD               	goto	l1245
  5596  02AA                     u110:	
  5597  02AA                     l1239:	
  5598                           
  5599                           ;PatternSelector.c: 13:     {;PatternSelector.c: 14:         uint delay_count = 0;
  5600  02AA  01F4               	clrf	PatternCycleInputChanged@delay_count
  5601  02AB  01F5               	clrf	PatternCycleInputChanged@delay_count+1
  5602                           
  5603                           ;PatternSelector.c: 16:         while ( delay_count++ < 3 )
  5604  02AC  2ABF               	goto	l1249
  5605  02AD                     l1241:	
  5606                           
  5607                           ;PatternSelector.c: 17:         {;PatternSelector.c: 18:             _delay((unsigned lo
      +                          ng)((10)*(1000000/4000.0)));
  5608  02AD  3004               	movlw	4
  5609  02AE  00F2               	movwf	??_PatternCycleInputChanged
  5610  02AF  303E               	movlw	62
  5611  02B0                     u457:	
  5612  02B0  0B89               	decfsz	9,f
  5613  02B1  2AB0               	goto	u457
  5614  02B2  0BF2               	decfsz	??_PatternCycleInputChanged,f
  5615  02B3  2AB0               	goto	u457
  5616  02B4                     l1243:	
  5617                           
  5618                           ;PatternSelector.c: 20:             if( PORTCbits.RC5 != cur_pc_input_state )
  5619  02B4  0020               	movlb	0	; select bank0
  5620  02B5  0E0E               	swapf	14,w	;volatile
  5621  02B6  0C89               	rrf	9,f
  5622  02B7  3901               	andlw	1
  5623  02B8  067B               	xorwf	_cur_pc_input_state,w
  5624  02B9  1903               	skipnz
  5625  02BA  2ABC               	goto	u121
  5626  02BB  2ABD               	goto	u120
  5627  02BC                     u121:	
  5628  02BC  2ABF               	goto	l1249
  5629  02BD                     u120:	
  5630  02BD                     l1245:	
  5631                           
  5632                           ;PatternSelector.c: 21:             {;PatternSelector.c: 22:                 return 0;
  5633  02BD  3000               	movlw	0
  5634  02BE  2AD0               	goto	l296
  5635  02BF                     l1249:	
  5636                           
  5637                           ;PatternSelector.c: 16:         while ( delay_count++ < 3 )
  5638  02BF  0875               	movf	PatternCycleInputChanged@delay_count+1,w
  5639  02C0  00F3               	movwf	??_PatternCycleInputChanged+1
  5640  02C1  0874               	movf	PatternCycleInputChanged@delay_count,w
  5641  02C2  00F2               	movwf	??_PatternCycleInputChanged
  5642  02C3  0AF4               	incf	PatternCycleInputChanged@delay_count,f
  5643  02C4  1903               	skipnz
  5644  02C5  0AF5               	incf	PatternCycleInputChanged@delay_count+1,f
  5645  02C6  3000               	movlw	0
  5646  02C7  0273               	subwf	??_PatternCycleInputChanged+1,w
  5647  02C8  3003               	movlw	3
  5648  02C9  1903               	skipnz
  5649  02CA  0272               	subwf	??_PatternCycleInputChanged,w
  5650  02CB  1C03               	skipc
  5651  02CC  2ACE               	goto	u131
  5652  02CD  2ACF               	goto	u130
  5653  02CE                     u131:	
  5654  02CE  2AAD               	goto	l1241
  5655  02CF                     u130:	
  5656  02CF                     l1255:	
  5657                           
  5658                           ;PatternSelector.c: 29:     return 1;
  5659  02CF  3001               	movlw	1
  5660  02D0                     l296:	
  5661  02D0  0008               	return
  5662  02D1                     __end_of_PatternCycleInputChanged:	
  5663                           
  5664                           	psect	intentry
  5665  0004                     __pintentry:	
  5666 ;; *************** function _INTERRUPT_InterruptManager *****************
  5667 ;; Defined at:
  5668 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;		None
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;		None
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1    wreg      void 
  5675 ;; Registers used:
  5676 ;;		wreg, status,2, status,0, pclath, cstack
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5686 ;;Total ram usage:        0 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; Hardware stack levels required when called:    3
  5689 ;; This function calls:
  5690 ;;		_PIN_MANAGER_IOC
  5691 ;;		_TMR1_ISR
  5692 ;; This function is called by:
  5693 ;;		Interrupt level 1
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697  0004                     _INTERRUPT_InterruptManager:	
  5698                           
  5699                           ;incstack = 0
  5700  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5701                           
  5702                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  5703  0005  3180               	pagesel	$
  5704  0006                     i1l1575:	
  5705                           
  5706                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
  5707  0006  0021               	movlb	1	; select bank1
  5708  0007  1E10               	btfss	16,4	;volatile
  5709  0008  280A               	goto	u32_21
  5710  0009  280B               	goto	u32_20
  5711  000A                     u32_21:	
  5712  000A  2814               	goto	i1l148
  5713  000B                     u32_20:	
  5714  000B                     i1l1577:	
  5715  000B  0020               	movlb	0	; select bank0
  5716  000C  1E10               	btfss	16,4	;volatile
  5717  000D  280F               	goto	u33_21
  5718  000E  2810               	goto	u33_20
  5719  000F                     u33_21:	
  5720  000F  2814               	goto	i1l148
  5721  0010                     u33_20:	
  5722  0010                     i1l1579:	
  5723                           
  5724                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  5725  0010  3183  23EB  3180   	fcall	_PIN_MANAGER_IOC
  5726                           
  5727                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  5728  0013  2826               	goto	i1l154
  5729  0014                     i1l148:	
  5730                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  5731                           
  5732  0014  1F0B               	btfss	11,6	;volatile
  5733  0015  2817               	goto	u34_21
  5734  0016  2818               	goto	u34_20
  5735  0017                     u34_21:	
  5736  0017  2826               	goto	i1l154
  5737  0018                     u34_20:	
  5738  0018                     i1l1581:	
  5739                           
  5740                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  5741  0018  0021               	movlb	1	; select bank1
  5742  0019  1C11               	btfss	17,0	;volatile
  5743  001A  281C               	goto	u35_21
  5744  001B  281D               	goto	u35_20
  5745  001C                     u35_21:	
  5746  001C  2826               	goto	i1l153
  5747  001D                     u35_20:	
  5748  001D                     i1l1583:	
  5749  001D  0020               	movlb	0	; select bank0
  5750  001E  1C11               	btfss	17,0	;volatile
  5751  001F  2821               	goto	u36_21
  5752  0020  2822               	goto	u36_20
  5753  0021                     u36_21:	
  5754  0021  2826               	goto	i1l153
  5755  0022                     u36_20:	
  5756  0022                     i1l1585:	
  5757                           
  5758                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_ISR();
  5759  0022  3183  23B8  3180   	fcall	_TMR1_ISR
  5760                           
  5761                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  5762  0025  2826               	goto	i1l154
  5763  0026                     i1l153:	
  5764                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  5765                           
  5766  0026                     i1l154:	
  5767  0026  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5768  0027  0009               	retfie
  5769  0028                     __end_of_INTERRUPT_InterruptManager:	
  5770                           
  5771                           	psect	text21
  5772  03B8                     __ptext21:	
  5773 ;; *************** function _TMR1_ISR *****************
  5774 ;; Defined at:
  5775 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;		None
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;		None
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  1    wreg      void 
  5782 ;; Registers used:
  5783 ;;		wreg, status,2, status,0, pclath, cstack
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5793 ;;Total ram usage:        0 bytes
  5794 ;; Hardware stack levels used:    1
  5795 ;; Hardware stack levels required when called:    1
  5796 ;; This function calls:
  5797 ;;		_TMR1_WriteTimer
  5798 ;; This function is called by:
  5799 ;;		_INTERRUPT_InterruptManager
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           
  5804                           ;psect for function _TMR1_ISR
  5805  03B8                     _TMR1_ISR:	
  5806  03B8                     i1l1557:	
  5807                           ;incstack = 0
  5808                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  5809                           
  5810                           
  5811                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  5812  03B8  0020               	movlb	0	; select bank0
  5813  03B9  1011               	bcf	17,0	;volatile
  5814  03BA                     i1l1559:	
  5815                           
  5816                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  5817  03BA  086D               	movf	_timer1ReloadVal+1,w	;volatile
  5818  03BB  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  5819  03BC  086C               	movf	_timer1ReloadVal,w	;volatile
  5820  03BD  00F0               	movwf	TMR1_WriteTimer@timerVal
  5821  03BE  3183  2397  3183   	fcall	_TMR1_WriteTimer
  5822  03C1                     i1l1561:	
  5823                           
  5824                           ;mcc_generated_files/tmr1.c: 164:     cur_ms++;
  5825  03C1  3001               	movlw	1
  5826  03C2  0020               	movlb	0	; select bank0
  5827  03C3  07DA               	addwf	_cur_ms,f
  5828  03C4  3000               	movlw	0
  5829  03C5  3DDB               	addwfc	_cur_ms+1,f
  5830  03C6                     i1l215:	
  5831  03C6  0008               	return
  5832  03C7                     __end_of_TMR1_ISR:	
  5833                           
  5834                           	psect	text22
  5835  0397                     __ptext22:	
  5836 ;; *************** function _TMR1_WriteTimer *****************
  5837 ;; Defined at:
  5838 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;  timerVal        2    0[COMMON] unsigned short 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;		None
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  1    wreg      void 
  5845 ;; Registers used:
  5846 ;;		wreg, status,2
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5852 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5856 ;;Total ram usage:        2 bytes
  5857 ;; Hardware stack levels used:    1
  5858 ;; This function calls:
  5859 ;;		Nothing
  5860 ;; This function is called by:
  5861 ;;		_TMR1_ISR
  5862 ;;		_TMR1_Reload
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866                           
  5867                           ;psect for function _TMR1_WriteTimer
  5868  0397                     _TMR1_WriteTimer:	
  5869  0397                     i1l1495:	
  5870                           ;incstack = 0
  5871                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  5872                           
  5873                           
  5874                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.T1SYNC == 1)
  5875  0397  0020               	movlb	0	; select bank0
  5876  0398  1D1B               	btfss	27,2	;volatile
  5877  0399  2B9B               	goto	u28_21
  5878  039A  2B9C               	goto	u28_20
  5879  039B                     u28_21:	
  5880  039B  2BA3               	goto	i1l1505
  5881  039C                     u28_20:	
  5882  039C                     i1l1497:	
  5883                           
  5884                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  5885  039C  101B               	bcf	27,0	;volatile
  5886  039D                     i1l1499:	
  5887                           
  5888                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  5889  039D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5890  039E  009A               	movwf	26	;volatile
  5891  039F                     i1l1501:	
  5892                           
  5893                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  5894  039F  0870               	movf	TMR1_WriteTimer@timerVal,w
  5895  03A0  0099               	movwf	25	;volatile
  5896  03A1                     i1l1503:	
  5897                           
  5898                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  5899  03A1  141B               	bsf	27,0	;volatile
  5900                           
  5901                           ;mcc_generated_files/tmr1.c: 133:     }
  5902  03A2  2BA7               	goto	i1l203
  5903  03A3                     i1l1505:	
  5904                           
  5905                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  5906  03A3  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5907  03A4  009A               	movwf	26	;volatile
  5908  03A5                     i1l1507:	
  5909                           
  5910                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  5911  03A5  0870               	movf	TMR1_WriteTimer@timerVal,w
  5912  03A6  0099               	movwf	25	;volatile
  5913  03A7                     i1l203:	
  5914  03A7  0008               	return
  5915  03A8                     __end_of_TMR1_WriteTimer:	
  5916                           
  5917                           	psect	text23
  5918  03EB                     __ptext23:	
  5919 ;; *************** function _PIN_MANAGER_IOC *****************
  5920 ;; Defined at:
  5921 ;;		line 122 in file "mcc_generated_files/pin_manager.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;		None
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;		None
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  1    wreg      void 
  5928 ;; Registers used:
  5929 ;;		wreg, status,2, status,0, pclath, cstack
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5939 ;;Total ram usage:        0 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    2
  5942 ;; This function calls:
  5943 ;;		_IOCCF0_ISR
  5944 ;; This function is called by:
  5945 ;;		_INTERRUPT_InterruptManager
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           
  5950                           ;psect for function _PIN_MANAGER_IOC
  5951  03EB                     _PIN_MANAGER_IOC:	
  5952  03EB                     i1l1553:	
  5953                           ;incstack = 0
  5954                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  5955                           
  5956                           
  5957                           ;mcc_generated_files/pin_manager.c: 125:     if(IOCCFbits.IOCCF0 == 1)
  5958  03EB  0027               	movlb	7	; select bank7
  5959  03EC  1C19               	btfss	25,0	;volatile
  5960  03ED  2BEF               	goto	u31_21
  5961  03EE  2BF0               	goto	u31_20
  5962  03EF                     u31_21:	
  5963  03EF  2BF3               	goto	i1l109
  5964  03F0                     u31_20:	
  5965  03F0                     i1l1555:	
  5966                           
  5967                           ;mcc_generated_files/pin_manager.c: 126:     {;mcc_generated_files/pin_manager.c: 127:  
      +                                 IOCCF0_ISR();
  5968  03F0  3183  23C7  3183   	fcall	_IOCCF0_ISR
  5969  03F3                     i1l109:	
  5970  03F3  0008               	return
  5971  03F4                     __end_of_PIN_MANAGER_IOC:	
  5972                           
  5973                           	psect	text24
  5974  03C7                     __ptext24:	
  5975 ;; *************** function _IOCCF0_ISR *****************
  5976 ;; Defined at:
  5977 ;;		line 134 in file "mcc_generated_files/pin_manager.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;		None
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;		None
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  1    wreg      void 
  5984 ;; Registers used:
  5985 ;;		wreg, status,2, status,0, pclath, cstack
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5995 ;;Total ram usage:        0 bytes
  5996 ;; Hardware stack levels used:    1
  5997 ;; Hardware stack levels required when called:    1
  5998 ;; This function calls:
  5999 ;;		Absolute function
  6000 ;;		_IOCCF0_DefaultInterruptHandler
  6001 ;; This function is called by:
  6002 ;;		_PIN_MANAGER_IOC
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           
  6007                           ;psect for function _IOCCF0_ISR
  6008  03C7                     _IOCCF0_ISR:	
  6009  03C7                     i1l1487:	
  6010                           ;incstack = 0
  6011                           ; Regs used in _IOCCF0_ISR: [wreg+status,2+status,0+pclath+cstack]
  6012                           
  6013                           
  6014                           ;mcc_generated_files/pin_manager.c: 139:     if(IOCCF0_InterruptHandler)
  6015  03C7  0020               	movlb	0	; select bank0
  6016  03C8  086E               	movf	_IOCCF0_InterruptHandler,w
  6017  03C9  046F               	iorwf	_IOCCF0_InterruptHandler+1,w
  6018  03CA  1903               	btfsc	3,2
  6019  03CB  2BCD               	goto	u27_21
  6020  03CC  2BCE               	goto	u27_20
  6021  03CD                     u27_21:	
  6022  03CD  2BD3               	goto	i1l1491
  6023  03CE                     u27_20:	
  6024  03CE                     i1l1489:	
  6025                           
  6026                           ;mcc_generated_files/pin_manager.c: 140:     {;mcc_generated_files/pin_manager.c: 141:  
      +                                 IOCCF0_InterruptHandler();
  6027  03CE  086F               	movf	_IOCCF0_InterruptHandler+1,w
  6028  03CF  008A               	movwf	10
  6029  03D0  086E               	movf	_IOCCF0_InterruptHandler,w
  6030  03D1  000A               	callw
  6031  03D2  3183               	pagesel	$
  6032  03D3                     i1l1491:	
  6033                           
  6034                           ;mcc_generated_files/pin_manager.c: 143:     IOCCFbits.IOCCF0 = 0;
  6035  03D3  0027               	movlb	7	; select bank7
  6036  03D4  1019               	bcf	25,0	;volatile
  6037  03D5                     i1l113:	
  6038  03D5  0008               	return
  6039  03D6                     __end_of_IOCCF0_ISR:	
  6040                           
  6041                           	psect	text25
  6042  0417                     __ptext25:	
  6043 ;; *************** function _IOCCF0_DefaultInterruptHandler *****************
  6044 ;; Defined at:
  6045 ;;		line 156 in file "mcc_generated_files/pin_manager.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;		None
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;		None
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  1    wreg      void 
  6052 ;; Registers used:
  6053 ;;		None
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6063 ;;Total ram usage:        0 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; This function calls:
  6066 ;;		Nothing
  6067 ;; This function is called by:
  6068 ;;		_PIN_MANAGER_Initialize
  6069 ;;		_IOCCF0_ISR
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           
  6074                           ;psect for function _IOCCF0_DefaultInterruptHandler
  6075  0417                     _IOCCF0_DefaultInterruptHandler:	
  6076  0417                     i1l119:	
  6077                           ;incstack = 0
  6078                           ; Regs used in _IOCCF0_DefaultInterruptHandler: []
  6079                           
  6080  0417  0008               	return
  6081  0418                     __end_of_IOCCF0_DefaultInterruptHandler:	
  6082  007E                     btemp	set	126	;btemp
  6083  007E                     int$flags	set	126
  6084  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         20
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     52      80
    BANK1            80      1       5
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            48      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    GetStage@head.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    Wigwag.first_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    stage_stash.next.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    stage_stash.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ?_GetStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ?_CopyStageData.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ?_CopyStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ?_ConstructStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ?_NewStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@head.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@head	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@pattern.first_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@off.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@off	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@right_side_on.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@right_side_on	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@left_side_on.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@left_side_on	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@pattern.first_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@pattern	PTR struct Pattern size(2) Largest target is 3
		 -> Wigwag(BANK0[3]), 

    sp__GetStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__GetStage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    GetStage@get_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@last_stage.next.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@last_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@last_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@new_stage.next.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@new_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@head.next.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@new_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@head.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@head	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__CopyStageData.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    CopyStageData@source.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    CopyStageData@dest.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    CopyStageData@source	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    CopyStageData@dest	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__CopyStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__CopyStage	PTR struct Stage size(1) Largest target is 0

    CopyStage@dest.next.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    CopyStage@source.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    CopyStage@dest.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__CopyStageData	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__ConstructStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__ConstructStage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ConstructStage@new_stage.next.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ConstructStage@next	PTR struct Stage size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    ConstructStage@states	PTR const _Bool  size(1) Largest target is 4
		 -> InitWigwagPattern@right_side_states(BANK0[4]), InitWigwagPattern@left_side_states(BANK0[4]), 

    ConstructStage@new_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ConstructStage@new_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__NewStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    NewStage@new_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    NewStage@new_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), 

    sp__NewStage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    S443Stage$next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AssignLightStates@stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AssignLightStates@states	PTR const _Bool  size(1) Largest target is 4
		 -> InitWigwagPattern@right_side_states(BANK0[4]), InitWigwagPattern@left_side_states(BANK0[4]), NewStage@init_states(BANK0[4]), 

    AssignLightStates@stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    S452Pattern$first_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    Wigwag.first_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    IOCCF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF0_DefaultInterruptHandler(), 

    IOCCF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCCF0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _SetOutputs->_SetLight
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF0_SetInterruptHandler
    _InitWigwagPattern->_ConstructStage
    _ConstructStage->_AssignLightStates
    _NewStage->_AssignLightStates

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _setup->_InitWigwagPattern
    _InitWigwagPattern->_AppendStage
    _CopyStageData->_NewStage
    _ConstructStage->_NewStage
    _NewStage->_AssignLightStates
    _AppendStage->_CopyStageData

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6805
                                              0 BANK1      1     1      0
           _PatternCycleInputChanged
                         _SetOutputs
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    6288
                  _InitWigwagPattern
                  _SYSTEM_Initialize
                         _SetOutputs
                    _TMR1_Initialize
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SetOutputs                                           2     2      0     502
                                              6 COMMON     2     2      0
                           _SetLight
 ---------------------------------------------------------------------------------
 (3) _SetLight                                             4     3      1     414
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     196
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0      98
         _IOCCF0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _IOCCF0_SetInterruptHandler                           2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitWigwagPattern                                   23    21      2    5492
                                             29 BANK0     23    21      2
                        _AppendStage
                     _ConstructStage
                      _CopyStageData
                           _NewStage
 ---------------------------------------------------------------------------------
 (3) _CopyStageData                                        9     5      4    1112
                                             12 BANK0      9     5      4
                           _NewStage (ARG)
 ---------------------------------------------------------------------------------
 (3) _ConstructStage                                       7     4      3    1920
                                              9 COMMON     1     1      0
                                             12 BANK0      6     3      3
                  _AssignLightStates
                           _NewStage
 ---------------------------------------------------------------------------------
 (3) _NewStage                                            10    10      0     716
                                              2 BANK0     10    10      0
                  _AssignLightStates
 ---------------------------------------------------------------------------------
 (4) _AssignLightStates                                    9     6      3     552
                                              2 COMMON     7     4      3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _AppendStage                                          8     4      4    1048
                                             21 BANK0      8     4      4
                      _CopyStageData (ARG)
                           _NewStage (ARG)
 ---------------------------------------------------------------------------------
 (1) _PatternCycleInputChanged                             4     4      0      15
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     240
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCCF0_ISR
 ---------------------------------------------------------------------------------
 (8) _IOCCF0_ISR                                           0     0      0       0
                   Absolute function *
     _IOCCF0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _IOCCF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PatternCycleInputChanged
   _SetOutputs
     _SetLight
   _setup
     _InitWigwagPattern
       _AppendStage
         _CopyStageData (ARG)
           _NewStage (ARG)
             _AssignLightStates
         _NewStage (ARG)
           _AssignLightStates
       _ConstructStage
         _AssignLightStates
         _NewStage
           _AssignLightStates
       _CopyStageData
         _NewStage (ARG)
           _AssignLightStates
       _NewStage
         _AssignLightStates
     _SYSTEM_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
         _IOCCF0_SetInterruptHandler
       _PMD_Initialize
       _TMR1_Initialize
         _TMR1_SetInterruptHandler
       _WDT_Initialize
     _SetOutputs
       _SetLight
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR1_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF0_ISR
       Absolute function(Fake) *
       _IOCCF0_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     34      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      1       5       7        6.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      61      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               30      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      61      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed May 06 10:50:02 2020

                               __CFG_CP$OFF 0000                                          l50 03EA  
                                        l53 0413                                          l47 03B7  
                                        l56 0403                          ConstructStage@next 002E  
                               __CFG_LVP$ON 0000                                         l105 02FA  
                                       l116 040F                                         l310 024D  
                                       l320 0276                                         l313 0253  
                                       l218 0409                                         l323 0367  
                                       l260 037F                                         l317 0259  
                                       l343 0345                                         l352 02A3  
                                       l360 0244                                         l192 0416  
                                       l347 020B                                         l189 0396  
                                       l296 02D0                                         l368 01BC  
                                       l385 0164                                         u110 02AA  
                                       u111 02A9                                         u120 02BD  
                                       u121 02BC                                         u130 02CF  
                                       u131 02CE                                         u400 01C7  
                                       u240 0235                                         u401 01C6  
                                       u241 0234                                         u250 0171  
                                       u410 00FB                                         u251 0170  
                                       u411 00FA                                         u260 01AA  
                                       u420 0164                                         u261 01A9  
                                       u245 0231                                         u421 0163  
                                       u430 030B                                         u415 00F7  
                                       u431 030A                                         u440 0310  
                                       u265 01A6                                         u425 0160  
                                       u441 030F                                __CFG_CPD$OFF 0000  
                                       u390 0345                                         u391 0344  
                                       u457 02B0                             _timer1ReloadVal 006C  
                   __size_of_PMD_Initialize 0008                                         wreg 0009  
        __end_of_IOCCF0_SetInterruptHandler 0410                  _IOCCF0_SetInterruptHandler 040A  
                                      l1241 02AD                                        l1401 03E2  
                                      l1243 02B4                                        l1403 03E5  
                                      l1411 0380                                        l1245 02BD  
                                      l1237 02A4                                        l1405 03E6  
                                      l1421 038C                                        l1413 0382  
                                      l1255 02CF                                        l1239 02AA  
                                      l1407 03E9                                        l1423 0393  
                                      l1415 0384                                        l1431 0260  
                                      l1249 02BF                                        l1345 040A  
                                      l1417 0385                                        l1409 0410  
                                      l1425 0246                                        l1371 03FC  
                                      l1347 0404                                        l1419 038A  
                                      l1427 0247                                        l1461 0244  
                                      l1453 020F                                        l1701 00FB  
                                      l1381 02DA                                        l1373 02D1  
                                      l1509 0347                                        l1471 018E  
                                      l1455 0224                                        l1447 020C  
                                      l1711 0152                                        l1703 0117  
                                      l1391 02EE                                        l1383 02DE  
                                      l1375 02D3                                        l1473 0197  
                                      l1465 0165                                        l1641 01BD  
                                      l1457 0228                                        l1713 0157  
                                      l1393 02EF                                        l1385 02E0  
                                      l1377 02D5                                        l1481 03AE  
                                      l1721 0370                                        l1475 01AA  
                                      l1467 0171                                        l1635 0324  
                                      l1651 01E2                                        l1643 01C7  
                                      l1459 0235                                        l1395 02F0  
                                      l1387 02E1                                        l1379 02D8  
                                      l1483 03B1                                        l1723 0373  
                                      l1715 0368                                        l1731 0303  
                                      l1469 0184                                        l1637 0338  
                                      l1629 0321                                        l1653 01EA  
                                      l1709 011A                                        l1397 02F1  
                                      l1389 02E3                                        l1485 03B4  
                                      l1477 03A8                                        l1493 0414  
                                      l1725 0377                                        l1717 036B  
                                      l1733 030B                                        l1639 033C  
                                      l1655 01F5                                        l1647 01CA  
                                      l1663 0279                                        l1399 02F8  
                                      l1479 03AB                                        l1719 036C  
                                      l1735 0310                                        l1727 02FB  
                                      l1657 01FF                                        l1649 01DE  
                                      l1665 028C                                        l1681 0083  
                                      l1673 005F                                        l1761 0268  
                                      l1737 0315                                        l1729 02FE  
                                      l1659 0207                                        l1667 0296  
                                      l1683 0091                                        l1675 0065  
                                      l1739 0319                                        l1669 029F  
                                      l1685 0099                                        l1677 006D  
                                      l1695 00B1                                        l1687 00A6  
                                      l1679 007B                                        l1697 00E9  
                                      l1689 00AF                                        l1699 00EE  
                           ?_ConstructStage 002C                                        _LATA 010C  
                                      _LATC 010E                                        _PMD0 0911  
                                      _PMD1 0912                                        _PMD2 0913  
                                      _PMD3 0914                                        _PMD4 0915  
                                      _PMD5 0916                                        _WPUA 020C  
                                      _WPUC 020E                                __CFG_WRT$OFF 0000  
                             SetLight@light 0075                               __CFG_FCMEN$ON 0000  
                      ConstructStage@states 002F                               SetLight@state 0072  
                                      _main 02FB                         __end_of_AppendStage 01BD  
                                      fsr0h 0005                                        fsr1h 0007  
                                      indf0 0000                                        fsr0l 0004  
                                      indf1 0001                                        fsr1l 0006  
                                      btemp 007E                               __CFG_BOREN$ON 0000  
                             __CFG_BORV$LOW 0000                                        start 0028  
                ??_TMR1_SetInterruptHandler 0074                               __CFG_CSWEN$ON 0000  
                             __CFG_MCLRE$ON 0000                              CopyStageData@i 0033  
                           ??_CopyStageData 0030              __size_of_OSCILLATOR_Initialize 0009  
             __end_of_OSCILLATOR_Initialize 03EB                         __size_of_IOCCF0_ISR 000F  
                                     ?_main 0070                               __CFG_WDTE$OFF 0000  
                           _TMR1_StartTimer 0414                                       _T1CON 001B  
                            __CFG_DEBUG$OFF 0000                                       i1l113 03D5  
                                     i1l203 03A7                                       i1l109 03F3  
                                     i1l119 0417                                       i1l215 03C6  
                                     i1l153 0026                                       i1l154 0026  
                                     i1l148 0014                                       _OSCEN 091D  
                                     u31_20 03F0                                       u31_21 03EF  
                                     u32_20 000B                                       u32_21 000A  
                                     u33_20 0010                                       u33_21 000F  
                                     _TMR1H 001A                                       _TMR1L 0019  
                                     u34_20 0018                                       u34_21 0017  
                                     u27_20 03CE                                       u35_20 001D  
                                     u27_21 03CD                                       u35_21 001C  
                                     u28_20 039C                                       u36_20 0022  
                                     u28_21 039B                                       u36_21 0021  
                                     _TRISA 008C                                       _TRISC 008E  
                     ConstructStage@time_ms 002C                            __end_of_TMR1_ISR 03C7  
                   __end_of_PIN_MANAGER_IOC 03F4                              _WDT_Initialize 0410  
                                     _setup 0368                     __end_of_TMR1_Initialize 0397  
                                     pclath 000A                                       status 0003  
                                     wtemp0 007E                    _PatternCycleInputChanged 02A4  
                           _TMR1_WriteTimer 0397                             __initialization 002A  
                       NewStage@init_states 0026                                __end_of_main 0321  
               ?_INTERRUPT_InterruptManager 0070                            __end_of_NewStage 020C  
                                    ??_main 00A4                            __end_of_SetLight 0277  
                    __end_of_WDT_Initialize 0414                          _cur_pc_input_state 007B  
                               _AppendStage 0165                                      ?_setup 0070  
                                    _ANSELA 018C                                      _ANSELC 018E  
                        __CFG_RSTOSC$HFINT1 0000                                      _T1GCON 001C  
                   TMR1_WriteTimer@timerVal 0070                                      i1l1501 039F  
                                    i1l1503 03A1                                      i1l1505 03A3  
                                    _ODCONA 028C                                      i1l1507 03A5  
                                    _ODCONC 028E                                      i1l1553 03EB  
                                    i1l1561 03C1                                      i1l1491 03D3  
                                    i1l1555 03F0                                      i1l1557 03B8  
                                    i1l1581 0018                                      i1l1487 03C7  
                                    i1l1495 0397                                      i1l1559 03BA  
                                    i1l1583 001D                                      i1l1575 0006  
                                    i1l1489 03CE                                      i1l1497 039C  
                                    i1l1585 0022                                      i1l1577 000B  
                                    i1l1499 039D                                      i1l1579 0010  
                                    _INLVLA 038C                                      _INLVLC 038E  
                                    _OSCFRQ 091F                                      _WDTCON 0097  
                                _SetOutputs 0346                              __CFG_PWRTE$OFF 0000  
              _TMR1_DefaultInterruptHandler 0000                             SetOutputs@state 0077  
                                    _Wigwag 005F                     __end_of_TMR1_StartTimer 0417  
                            __CFG_STVREN$ON 0000           InitWigwagPattern@left_side_states 0040  
                                    _cur_ms 005A                         CopyStageData@source 002E  
                            _PMD_Initialize 03FC                             ?_WDT_Initialize 0070  
  TMR1_SetInterruptHandler@InterruptHandler 0072  IOCCF0_SetInterruptHandler@InterruptHandler 0072  
                          ?_PIN_MANAGER_IOC 0070                     __end_of_TMR1_WriteTimer 03A8  
                              ??_IOCCF0_ISR 0070                            ?_TMR1_Initialize 0070  
                    AssignLightStates@stage 0072                           _SYSTEM_Initialize 03A8  
                   __end_of__initialization 005B                          ?_SYSTEM_Initialize 0070  
                            __pcstackCOMMON 0070          InitWigwagPattern@right_side_states 0044  
                              __pidataBANK0 03F4                         ??_SYSTEM_Initialize 0074  
                                 ?_TMR1_ISR 0070                               __end_of_setup 0380  
                    __end_of_PMD_Initialize 0404                          __end_of_IOCCF0_ISR 03D6  
                         NewStage@new_stage 002A                            ??_ConstructStage 0079  
               ?_IOCCF0_SetInterruptHandler 0072                   __end_of_SYSTEM_Initialize 03B8  
                                   ??_setup 007A                                NewStage@F411 00A0  
                                __pbssBANK0 0054                                  __pbssBANK1 00A0  
                                 ?_NewStage 0077                                 ?_SetOutputs 0070  
                                 ?_SetLight 0072                          AssignLightStates@i 0020  
                      AppendStage@new_stage 0037                                  __pmaintext 02FB  
                          ?_TMR1_StartTimer 0070                                  ??_TMR1_ISR 0072  
                           __CFG_PPS1WAY$ON 0000                                  __pintentry 0004  
          ??_IOCCF0_DefaultInterruptHandler 0070             ?_IOCCF0_DefaultInterruptHandler 0070  
                           ?_PMD_Initialize 0070                          InitWigwagPattern@i 004C  
                                   _OSCCON1 0919                                     _OSCCON3 091B  
                                   _OSCTUNE 091E                  ??_PatternCycleInputChanged 0072  
                                   _SLRCONA 030C                                     _SLRCONC 030E  
                          ?_TMR1_WriteTimer 0070                     ConstructStage@new_stage 0030  
                                ??_NewStage 0022                                  ??_SetLight 0073  
       PatternCycleInputChanged@delay_count 0074                       __end_of_CopyStageData 0245  
                      InitWigwagPattern@off 0050                                     __ptext1 0368  
                                   __ptext2 0414                                     __ptext3 0346  
                                   __ptext4 0245                                     __ptext5 03A8  
                                   __ptext6 0410                                     __ptext7 0380  
                                   __ptext8 0404                                     __ptext9 03FC  
                                 _T1CONbits 001B                                     _cur_sec 0056  
                     _OSCILLATOR_Initialize 03E2                         __size_of_SetOutputs 0022  
         __size_of_TMR1_SetInterruptHandler 0006                    ??_PIN_MANAGER_Initialize 0074  
                 ?_TMR1_SetInterruptHandler 0072                                   _IOCCFbits 0399  
                                   _temp_ms 005C                                   _IOCCNbits 0398  
                                 _IOCCPbits 0397                                ?_AppendStage 0035  
                __size_of_SYSTEM_Initialize 0010                                     clrloop0 03D7  
                      end_of_initialization 005B                         _last_pc_input_state 007A  
                          ??_WDT_Initialize 0072                                   _PORTCbits 000E  
                   AssignLightStates@states 0074                            __CFG_FEXTOSC$OFF 0000  
                                _ts_trigger 005E                           __size_of_TMR1_ISR 000F  
                         CopyStageData@dest 002C                      ?_OSCILLATOR_Initialize 0070  
                       start_initialization 002A             __size_of_PIN_MANAGER_Initialize 002A  
                           AppendStage@head 0035                                ??_SetOutputs 0076  
                  __size_of_PIN_MANAGER_IOC 0009                    InitWigwagPattern@pattern 003D  
                         __size_of_NewStage 004F                            __CFG_LPBOREN$OFF 0000  
                  __size_of_TMR1_Initialize 0017                           __size_of_SetLight 0032  
                          ??_PMD_Initialize 0072                                 __pdataBANK0 0062  
                               __pbssBIGRAM 22B0                                 __pbssCOMMON 007A  
                     AppendStage@last_stage 003B                                   ___latbits 0002  
                        __end_of_SetOutputs 0368                               __pcstackBANK0 0020  
                             __pcstackBANK1 00A4                      InitWigwagPattern@i_748 004E  
    __end_of_IOCCF0_DefaultInterruptHandler 0418     __size_of_IOCCF0_DefaultInterruptHandler 0001  
            _IOCCF0_DefaultInterruptHandler 0417                        __size_of_AppendStage 0058  
                                 __pnvBANK0 006A                      _PIN_MANAGER_Initialize 02D1  
          __end_of_TMR1_SetInterruptHandler 040A                           _AssignLightStates 0321  
                         _InitWigwagPattern 005F                          ?_AssignLightStates 0072  
              ??_INTERRUPT_InterruptManager 0072                          ?_InitWigwagPattern 003D  
                  __size_of_TMR1_StartTimer 0003                         ??_AssignLightStates 0075  
                       ??_InitWigwagPattern 003F                              __size_of_setup 0018  
                   __size_of_ConstructStage 002D                                    _LATCbits 010E  
                                 clear_ram0 03D6                                    _PIE0bits 0090  
                                  _PIE1bits 0091                    __size_of_TMR1_WriteTimer 0011  
                 __end_of_AssignLightStates 0346         __size_of_INTERRUPT_InterruptManager 0024  
                                  _PIR0bits 0010                                    _PIR1bits 0011  
         __size_of_PatternCycleInputChanged 002D                   ?_PatternCycleInputChanged 0070  
                 __end_of_InitWigwagPattern 0165                                    _TMR1_ISR 03B8  
                         ??_PIN_MANAGER_IOC 0070                           ??_TMR1_Initialize 0074  
                    __size_of_CopyStageData 0039                                    _NewStage 01BD  
                                  _SetLight 0245                             _stage_list_iter 0054  
                   ??_OSCILLATOR_Initialize 0072                       InitWigwagPattern@F436 0066  
                     InitWigwagPattern@F439 0062                    _TMR1_SetInterruptHandler 0404  
                     InitWigwagPattern@head 0052                       _TMR1_InterruptHandler 006A  
                   _IOCCF0_InterruptHandler 006E                                    __ptext10 02D1  
                                  __ptext11 040A                                    __ptext12 03E2  
                                  __ptext21 03B8                                    __ptext13 005F  
                                _T1GCONbits 001C                                    __ptext22 0397  
                                  __ptext14 020C                                    __ptext23 03EB  
                                  __ptext15 0277                                    __ptext24 03C7  
                                  __ptext16 01BD                                    __ptext25 0417  
                                  __ptext17 0321                                    __ptext18 0165  
                                  __ptext19 02A4                ??_IOCCF0_SetInterruptHandler 0074  
            InitWigwagPattern@right_side_on 004A                           ??_TMR1_StartTimer 0072  
                                _IOCCF0_ISR 03C7                                    _cur_hsec 0058  
                             __size_of_main 0026                  __size_of_AssignLightStates 0025  
             InitWigwagPattern@left_side_on 0048                  __size_of_InitWigwagPattern 0106  
                                  int$flags 007E          __end_of_INTERRUPT_InterruptManager 0028  
                _INTERRUPT_InterruptManager 0004                           ??_TMR1_WriteTimer 0072  
                             _CopyStageData 020C         __size_of_IOCCF0_SetInterruptHandler 0006  
                                _INTCONbits 000B                     __size_of_WDT_Initialize 0004  
                                  intlevel1 0000                              _ConstructStage 0277  
                   ?_PIN_MANAGER_Initialize 0070                           __CFG_CLKOUTEN$OFF 0000  
                            ?_CopyStageData 002C                               ??_AppendStage 0039  
          __end_of_PatternCycleInputChanged 02D1                      __end_of_ConstructStage 02A4  
                               ?_IOCCF0_ISR 0070              __end_of_PIN_MANAGER_Initialize 02FB  
                           _PIN_MANAGER_IOC 03EB                                 _stage_stash 22B0  
                           _TMR1_Initialize 0380  
