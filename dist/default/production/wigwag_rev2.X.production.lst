

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu May 07 11:02:10 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18325
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x620,48
    46                           	dabs	1,0x5A0,80
    47                           	dabs	1,0x520,80
    48                           	dabs	1,0x4A0,80
    49                           	dabs	1,0x450,32
    50                           	dabs	1,0x22B0,0,_stage_stash
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 2.10
    54                           ; Generated 31/07/2019 GMT
    55                           ; 
    56                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F18325 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000E                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  008C                     	;# 
   121  008E                     	;# 
   122  0090                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0097                     	;# 
   128  009B                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  010C                     	;# 
   135  010E                     	;# 
   136  0111                     	;# 
   137  0112                     	;# 
   138  0113                     	;# 
   139  0114                     	;# 
   140  0115                     	;# 
   141  0116                     	;# 
   142  0117                     	;# 
   143  0118                     	;# 
   144  0119                     	;# 
   145  018C                     	;# 
   146  018E                     	;# 
   147  0197                     	;# 
   148  0199                     	;# 
   149  0199                     	;# 
   150  0199                     	;# 
   151  019A                     	;# 
   152  019A                     	;# 
   153  019A                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019C                     	;# 
   160  019C                     	;# 
   161  019C                     	;# 
   162  019D                     	;# 
   163  019D                     	;# 
   164  019D                     	;# 
   165  019E                     	;# 
   166  019E                     	;# 
   167  019E                     	;# 
   168  019F                     	;# 
   169  019F                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  020C                     	;# 
   174  020E                     	;# 
   175  0211                     	;# 
   176  0211                     	;# 
   177  0212                     	;# 
   178  0212                     	;# 
   179  0213                     	;# 
   180  0213                     	;# 
   181  0214                     	;# 
   182  0214                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0216                     	;# 
   188  0216                     	;# 
   189  0217                     	;# 
   190  0217                     	;# 
   191  0219                     	;# 
   192  021A                     	;# 
   193  021B                     	;# 
   194  021C                     	;# 
   195  021D                     	;# 
   196  021D                     	;# 
   197  021E                     	;# 
   198  021F                     	;# 
   199  028C                     	;# 
   200  028E                     	;# 
   201  0291                     	;# 
   202  0291                     	;# 
   203  0292                     	;# 
   204  0293                     	;# 
   205  0294                     	;# 
   206  0295                     	;# 
   207  0295                     	;# 
   208  0296                     	;# 
   209  0297                     	;# 
   210  0298                     	;# 
   211  029F                     	;# 
   212  030C                     	;# 
   213  030E                     	;# 
   214  0311                     	;# 
   215  0311                     	;# 
   216  0312                     	;# 
   217  0313                     	;# 
   218  0314                     	;# 
   219  0315                     	;# 
   220  0315                     	;# 
   221  0316                     	;# 
   222  0317                     	;# 
   223  0318                     	;# 
   224  038C                     	;# 
   225  038E                     	;# 
   226  0391                     	;# 
   227  0392                     	;# 
   228  0393                     	;# 
   229  0397                     	;# 
   230  0398                     	;# 
   231  0399                     	;# 
   232  039A                     	;# 
   233  039C                     	;# 
   234  039D                     	;# 
   235  039E                     	;# 
   236  039F                     	;# 
   237  0411                     	;# 
   238  0411                     	;# 
   239  0412                     	;# 
   240  0413                     	;# 
   241  0414                     	;# 
   242  0415                     	;# 
   243  0416                     	;# 
   244  0417                     	;# 
   245  0418                     	;# 
   246  0418                     	;# 
   247  0419                     	;# 
   248  041A                     	;# 
   249  041B                     	;# 
   250  041C                     	;# 
   251  041D                     	;# 
   252  041E                     	;# 
   253  041F                     	;# 
   254  0498                     	;# 
   255  0498                     	;# 
   256  0499                     	;# 
   257  049A                     	;# 
   258  049B                     	;# 
   259  049B                     	;# 
   260  049C                     	;# 
   261  049D                     	;# 
   262  049E                     	;# 
   263  049F                     	;# 
   264  0617                     	;# 
   265  0618                     	;# 
   266  0619                     	;# 
   267  0619                     	;# 
   268  061A                     	;# 
   269  061B                     	;# 
   270  061C                     	;# 
   271  061C                     	;# 
   272  061F                     	;# 
   273  0691                     	;# 
   274  0692                     	;# 
   275  0693                     	;# 
   276  0694                     	;# 
   277  0695                     	;# 
   278  0696                     	;# 
   279  0697                     	;# 
   280  0698                     	;# 
   281  0699                     	;# 
   282  0711                     	;# 
   283  0712                     	;# 
   284  0713                     	;# 
   285  0714                     	;# 
   286  0715                     	;# 
   287  0716                     	;# 
   288  0717                     	;# 
   289  0718                     	;# 
   290  0719                     	;# 
   291  0891                     	;# 
   292  0891                     	;# 
   293  0891                     	;# 
   294  0891                     	;# 
   295  0891                     	;# 
   296  0891                     	;# 
   297  0892                     	;# 
   298  0892                     	;# 
   299  0892                     	;# 
   300  0893                     	;# 
   301  0893                     	;# 
   302  0893                     	;# 
   303  0893                     	;# 
   304  0893                     	;# 
   305  0893                     	;# 
   306  0894                     	;# 
   307  0894                     	;# 
   308  0894                     	;# 
   309  0895                     	;# 
   310  0895                     	;# 
   311  0895                     	;# 
   312  0896                     	;# 
   313  0896                     	;# 
   314  0896                     	;# 
   315  089B                     	;# 
   316  0911                     	;# 
   317  0912                     	;# 
   318  0913                     	;# 
   319  0914                     	;# 
   320  0915                     	;# 
   321  0916                     	;# 
   322  0918                     	;# 
   323  0919                     	;# 
   324  091A                     	;# 
   325  091B                     	;# 
   326  091C                     	;# 
   327  091D                     	;# 
   328  091E                     	;# 
   329  091F                     	;# 
   330  0E0F                     	;# 
   331  0E10                     	;# 
   332  0E11                     	;# 
   333  0E12                     	;# 
   334  0E13                     	;# 
   335  0E14                     	;# 
   336  0E15                     	;# 
   337  0E16                     	;# 
   338  0E17                     	;# 
   339  0E18                     	;# 
   340  0E19                     	;# 
   341  0E1A                     	;# 
   342  0E1B                     	;# 
   343  0E1C                     	;# 
   344  0E1D                     	;# 
   345  0E1E                     	;# 
   346  0E1F                     	;# 
   347  0E20                     	;# 
   348  0E21                     	;# 
   349  0E22                     	;# 
   350  0E24                     	;# 
   351  0E25                     	;# 
   352  0E28                     	;# 
   353  0E29                     	;# 
   354  0E2A                     	;# 
   355  0E2B                     	;# 
   356  0E2C                     	;# 
   357  0E2D                     	;# 
   358  0E2E                     	;# 
   359  0E2F                     	;# 
   360  0E90                     	;# 
   361  0E91                     	;# 
   362  0E92                     	;# 
   363  0E94                     	;# 
   364  0E95                     	;# 
   365  0EA0                     	;# 
   366  0EA1                     	;# 
   367  0EA2                     	;# 
   368  0EA3                     	;# 
   369  0EA4                     	;# 
   370  0EA5                     	;# 
   371  0F0F                     	;# 
   372  0F10                     	;# 
   373  0F11                     	;# 
   374  0F12                     	;# 
   375  0F13                     	;# 
   376  0F14                     	;# 
   377  0F15                     	;# 
   378  0F16                     	;# 
   379  0F17                     	;# 
   380  0F18                     	;# 
   381  0F19                     	;# 
   382  0F1A                     	;# 
   383  0F1B                     	;# 
   384  0F1C                     	;# 
   385  0F1D                     	;# 
   386  0F1E                     	;# 
   387  0F1F                     	;# 
   388  0F20                     	;# 
   389  0F21                     	;# 
   390  0F22                     	;# 
   391  0F23                     	;# 
   392  0F24                     	;# 
   393  0F25                     	;# 
   394  0F26                     	;# 
   395  0F27                     	;# 
   396  0F28                     	;# 
   397  0F29                     	;# 
   398  0F2A                     	;# 
   399  0F2B                     	;# 
   400  0F2C                     	;# 
   401  0F2D                     	;# 
   402  0F2E                     	;# 
   403  0F2F                     	;# 
   404  0F30                     	;# 
   405  0F31                     	;# 
   406  0F32                     	;# 
   407  0F33                     	;# 
   408  0F34                     	;# 
   409  0F35                     	;# 
   410  0F36                     	;# 
   411  0F37                     	;# 
   412  0FE4                     	;# 
   413  0FE5                     	;# 
   414  0FE6                     	;# 
   415  0FE7                     	;# 
   416  0FE8                     	;# 
   417  0FE9                     	;# 
   418  0FEA                     	;# 
   419  0FEB                     	;# 
   420  0FED                     	;# 
   421  0FEE                     	;# 
   422  0FEF                     	;# 
   423  0000                     	;# 
   424  0001                     	;# 
   425  0002                     	;# 
   426  0003                     	;# 
   427  0004                     	;# 
   428  0005                     	;# 
   429  0006                     	;# 
   430  0007                     	;# 
   431  0008                     	;# 
   432  0009                     	;# 
   433  000A                     	;# 
   434  000B                     	;# 
   435  000C                     	;# 
   436  000E                     	;# 
   437  0010                     	;# 
   438  0011                     	;# 
   439  0012                     	;# 
   440  0013                     	;# 
   441  0014                     	;# 
   442  0015                     	;# 
   443  0015                     	;# 
   444  0016                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  0019                     	;# 
   450  001A                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001D                     	;# 
   454  001E                     	;# 
   455  001F                     	;# 
   456  008C                     	;# 
   457  008E                     	;# 
   458  0090                     	;# 
   459  0091                     	;# 
   460  0092                     	;# 
   461  0093                     	;# 
   462  0094                     	;# 
   463  0097                     	;# 
   464  009B                     	;# 
   465  009B                     	;# 
   466  009C                     	;# 
   467  009D                     	;# 
   468  009E                     	;# 
   469  009F                     	;# 
   470  010C                     	;# 
   471  010E                     	;# 
   472  0111                     	;# 
   473  0112                     	;# 
   474  0113                     	;# 
   475  0114                     	;# 
   476  0115                     	;# 
   477  0116                     	;# 
   478  0117                     	;# 
   479  0118                     	;# 
   480  0119                     	;# 
   481  018C                     	;# 
   482  018E                     	;# 
   483  0197                     	;# 
   484  0199                     	;# 
   485  0199                     	;# 
   486  0199                     	;# 
   487  019A                     	;# 
   488  019A                     	;# 
   489  019A                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019B                     	;# 
   493  019B                     	;# 
   494  019B                     	;# 
   495  019C                     	;# 
   496  019C                     	;# 
   497  019C                     	;# 
   498  019D                     	;# 
   499  019D                     	;# 
   500  019D                     	;# 
   501  019E                     	;# 
   502  019E                     	;# 
   503  019E                     	;# 
   504  019F                     	;# 
   505  019F                     	;# 
   506  019F                     	;# 
   507  019F                     	;# 
   508  019F                     	;# 
   509  020C                     	;# 
   510  020E                     	;# 
   511  0211                     	;# 
   512  0211                     	;# 
   513  0212                     	;# 
   514  0212                     	;# 
   515  0213                     	;# 
   516  0213                     	;# 
   517  0214                     	;# 
   518  0214                     	;# 
   519  0215                     	;# 
   520  0215                     	;# 
   521  0215                     	;# 
   522  0215                     	;# 
   523  0216                     	;# 
   524  0216                     	;# 
   525  0217                     	;# 
   526  0217                     	;# 
   527  0219                     	;# 
   528  021A                     	;# 
   529  021B                     	;# 
   530  021C                     	;# 
   531  021D                     	;# 
   532  021D                     	;# 
   533  021E                     	;# 
   534  021F                     	;# 
   535  028C                     	;# 
   536  028E                     	;# 
   537  0291                     	;# 
   538  0291                     	;# 
   539  0292                     	;# 
   540  0293                     	;# 
   541  0294                     	;# 
   542  0295                     	;# 
   543  0295                     	;# 
   544  0296                     	;# 
   545  0297                     	;# 
   546  0298                     	;# 
   547  029F                     	;# 
   548  030C                     	;# 
   549  030E                     	;# 
   550  0311                     	;# 
   551  0311                     	;# 
   552  0312                     	;# 
   553  0313                     	;# 
   554  0314                     	;# 
   555  0315                     	;# 
   556  0315                     	;# 
   557  0316                     	;# 
   558  0317                     	;# 
   559  0318                     	;# 
   560  038C                     	;# 
   561  038E                     	;# 
   562  0391                     	;# 
   563  0392                     	;# 
   564  0393                     	;# 
   565  0397                     	;# 
   566  0398                     	;# 
   567  0399                     	;# 
   568  039A                     	;# 
   569  039C                     	;# 
   570  039D                     	;# 
   571  039E                     	;# 
   572  039F                     	;# 
   573  0411                     	;# 
   574  0411                     	;# 
   575  0412                     	;# 
   576  0413                     	;# 
   577  0414                     	;# 
   578  0415                     	;# 
   579  0416                     	;# 
   580  0417                     	;# 
   581  0418                     	;# 
   582  0418                     	;# 
   583  0419                     	;# 
   584  041A                     	;# 
   585  041B                     	;# 
   586  041C                     	;# 
   587  041D                     	;# 
   588  041E                     	;# 
   589  041F                     	;# 
   590  0498                     	;# 
   591  0498                     	;# 
   592  0499                     	;# 
   593  049A                     	;# 
   594  049B                     	;# 
   595  049B                     	;# 
   596  049C                     	;# 
   597  049D                     	;# 
   598  049E                     	;# 
   599  049F                     	;# 
   600  0617                     	;# 
   601  0618                     	;# 
   602  0619                     	;# 
   603  0619                     	;# 
   604  061A                     	;# 
   605  061B                     	;# 
   606  061C                     	;# 
   607  061C                     	;# 
   608  061F                     	;# 
   609  0691                     	;# 
   610  0692                     	;# 
   611  0693                     	;# 
   612  0694                     	;# 
   613  0695                     	;# 
   614  0696                     	;# 
   615  0697                     	;# 
   616  0698                     	;# 
   617  0699                     	;# 
   618  0711                     	;# 
   619  0712                     	;# 
   620  0713                     	;# 
   621  0714                     	;# 
   622  0715                     	;# 
   623  0716                     	;# 
   624  0717                     	;# 
   625  0718                     	;# 
   626  0719                     	;# 
   627  0891                     	;# 
   628  0891                     	;# 
   629  0891                     	;# 
   630  0891                     	;# 
   631  0891                     	;# 
   632  0891                     	;# 
   633  0892                     	;# 
   634  0892                     	;# 
   635  0892                     	;# 
   636  0893                     	;# 
   637  0893                     	;# 
   638  0893                     	;# 
   639  0893                     	;# 
   640  0893                     	;# 
   641  0893                     	;# 
   642  0894                     	;# 
   643  0894                     	;# 
   644  0894                     	;# 
   645  0895                     	;# 
   646  0895                     	;# 
   647  0895                     	;# 
   648  0896                     	;# 
   649  0896                     	;# 
   650  0896                     	;# 
   651  089B                     	;# 
   652  0911                     	;# 
   653  0912                     	;# 
   654  0913                     	;# 
   655  0914                     	;# 
   656  0915                     	;# 
   657  0916                     	;# 
   658  0918                     	;# 
   659  0919                     	;# 
   660  091A                     	;# 
   661  091B                     	;# 
   662  091C                     	;# 
   663  091D                     	;# 
   664  091E                     	;# 
   665  091F                     	;# 
   666  0E0F                     	;# 
   667  0E10                     	;# 
   668  0E11                     	;# 
   669  0E12                     	;# 
   670  0E13                     	;# 
   671  0E14                     	;# 
   672  0E15                     	;# 
   673  0E16                     	;# 
   674  0E17                     	;# 
   675  0E18                     	;# 
   676  0E19                     	;# 
   677  0E1A                     	;# 
   678  0E1B                     	;# 
   679  0E1C                     	;# 
   680  0E1D                     	;# 
   681  0E1E                     	;# 
   682  0E1F                     	;# 
   683  0E20                     	;# 
   684  0E21                     	;# 
   685  0E22                     	;# 
   686  0E24                     	;# 
   687  0E25                     	;# 
   688  0E28                     	;# 
   689  0E29                     	;# 
   690  0E2A                     	;# 
   691  0E2B                     	;# 
   692  0E2C                     	;# 
   693  0E2D                     	;# 
   694  0E2E                     	;# 
   695  0E2F                     	;# 
   696  0E90                     	;# 
   697  0E91                     	;# 
   698  0E92                     	;# 
   699  0E94                     	;# 
   700  0E95                     	;# 
   701  0EA0                     	;# 
   702  0EA1                     	;# 
   703  0EA2                     	;# 
   704  0EA3                     	;# 
   705  0EA4                     	;# 
   706  0EA5                     	;# 
   707  0F0F                     	;# 
   708  0F10                     	;# 
   709  0F11                     	;# 
   710  0F12                     	;# 
   711  0F13                     	;# 
   712  0F14                     	;# 
   713  0F15                     	;# 
   714  0F16                     	;# 
   715  0F17                     	;# 
   716  0F18                     	;# 
   717  0F19                     	;# 
   718  0F1A                     	;# 
   719  0F1B                     	;# 
   720  0F1C                     	;# 
   721  0F1D                     	;# 
   722  0F1E                     	;# 
   723  0F1F                     	;# 
   724  0F20                     	;# 
   725  0F21                     	;# 
   726  0F22                     	;# 
   727  0F23                     	;# 
   728  0F24                     	;# 
   729  0F25                     	;# 
   730  0F26                     	;# 
   731  0F27                     	;# 
   732  0F28                     	;# 
   733  0F29                     	;# 
   734  0F2A                     	;# 
   735  0F2B                     	;# 
   736  0F2C                     	;# 
   737  0F2D                     	;# 
   738  0F2E                     	;# 
   739  0F2F                     	;# 
   740  0F30                     	;# 
   741  0F31                     	;# 
   742  0F32                     	;# 
   743  0F33                     	;# 
   744  0F34                     	;# 
   745  0F35                     	;# 
   746  0F36                     	;# 
   747  0F37                     	;# 
   748  0FE4                     	;# 
   749  0FE5                     	;# 
   750  0FE6                     	;# 
   751  0FE7                     	;# 
   752  0FE8                     	;# 
   753  0FE9                     	;# 
   754  0FEA                     	;# 
   755  0FEB                     	;# 
   756  0FED                     	;# 
   757  0FEE                     	;# 
   758  0FEF                     	;# 
   759  0000                     	;# 
   760  0001                     	;# 
   761  0002                     	;# 
   762  0003                     	;# 
   763  0004                     	;# 
   764  0005                     	;# 
   765  0006                     	;# 
   766  0007                     	;# 
   767  0008                     	;# 
   768  0009                     	;# 
   769  000A                     	;# 
   770  000B                     	;# 
   771  000C                     	;# 
   772  000E                     	;# 
   773  0010                     	;# 
   774  0011                     	;# 
   775  0012                     	;# 
   776  0013                     	;# 
   777  0014                     	;# 
   778  0015                     	;# 
   779  0015                     	;# 
   780  0016                     	;# 
   781  0016                     	;# 
   782  0017                     	;# 
   783  0018                     	;# 
   784  0019                     	;# 
   785  0019                     	;# 
   786  001A                     	;# 
   787  001B                     	;# 
   788  001C                     	;# 
   789  001D                     	;# 
   790  001E                     	;# 
   791  001F                     	;# 
   792  008C                     	;# 
   793  008E                     	;# 
   794  0090                     	;# 
   795  0091                     	;# 
   796  0092                     	;# 
   797  0093                     	;# 
   798  0094                     	;# 
   799  0097                     	;# 
   800  009B                     	;# 
   801  009B                     	;# 
   802  009C                     	;# 
   803  009D                     	;# 
   804  009E                     	;# 
   805  009F                     	;# 
   806  010C                     	;# 
   807  010E                     	;# 
   808  0111                     	;# 
   809  0112                     	;# 
   810  0113                     	;# 
   811  0114                     	;# 
   812  0115                     	;# 
   813  0116                     	;# 
   814  0117                     	;# 
   815  0118                     	;# 
   816  0119                     	;# 
   817  018C                     	;# 
   818  018E                     	;# 
   819  0197                     	;# 
   820  0199                     	;# 
   821  0199                     	;# 
   822  0199                     	;# 
   823  019A                     	;# 
   824  019A                     	;# 
   825  019A                     	;# 
   826  019B                     	;# 
   827  019B                     	;# 
   828  019B                     	;# 
   829  019B                     	;# 
   830  019B                     	;# 
   831  019C                     	;# 
   832  019C                     	;# 
   833  019C                     	;# 
   834  019D                     	;# 
   835  019D                     	;# 
   836  019D                     	;# 
   837  019E                     	;# 
   838  019E                     	;# 
   839  019E                     	;# 
   840  019F                     	;# 
   841  019F                     	;# 
   842  019F                     	;# 
   843  019F                     	;# 
   844  019F                     	;# 
   845  020C                     	;# 
   846  020E                     	;# 
   847  0211                     	;# 
   848  0211                     	;# 
   849  0212                     	;# 
   850  0212                     	;# 
   851  0213                     	;# 
   852  0213                     	;# 
   853  0214                     	;# 
   854  0214                     	;# 
   855  0215                     	;# 
   856  0215                     	;# 
   857  0215                     	;# 
   858  0215                     	;# 
   859  0216                     	;# 
   860  0216                     	;# 
   861  0217                     	;# 
   862  0217                     	;# 
   863  0219                     	;# 
   864  021A                     	;# 
   865  021B                     	;# 
   866  021C                     	;# 
   867  021D                     	;# 
   868  021D                     	;# 
   869  021E                     	;# 
   870  021F                     	;# 
   871  028C                     	;# 
   872  028E                     	;# 
   873  0291                     	;# 
   874  0291                     	;# 
   875  0292                     	;# 
   876  0293                     	;# 
   877  0294                     	;# 
   878  0295                     	;# 
   879  0295                     	;# 
   880  0296                     	;# 
   881  0297                     	;# 
   882  0298                     	;# 
   883  029F                     	;# 
   884  030C                     	;# 
   885  030E                     	;# 
   886  0311                     	;# 
   887  0311                     	;# 
   888  0312                     	;# 
   889  0313                     	;# 
   890  0314                     	;# 
   891  0315                     	;# 
   892  0315                     	;# 
   893  0316                     	;# 
   894  0317                     	;# 
   895  0318                     	;# 
   896  038C                     	;# 
   897  038E                     	;# 
   898  0391                     	;# 
   899  0392                     	;# 
   900  0393                     	;# 
   901  0397                     	;# 
   902  0398                     	;# 
   903  0399                     	;# 
   904  039A                     	;# 
   905  039C                     	;# 
   906  039D                     	;# 
   907  039E                     	;# 
   908  039F                     	;# 
   909  0411                     	;# 
   910  0411                     	;# 
   911  0412                     	;# 
   912  0413                     	;# 
   913  0414                     	;# 
   914  0415                     	;# 
   915  0416                     	;# 
   916  0417                     	;# 
   917  0418                     	;# 
   918  0418                     	;# 
   919  0419                     	;# 
   920  041A                     	;# 
   921  041B                     	;# 
   922  041C                     	;# 
   923  041D                     	;# 
   924  041E                     	;# 
   925  041F                     	;# 
   926  0498                     	;# 
   927  0498                     	;# 
   928  0499                     	;# 
   929  049A                     	;# 
   930  049B                     	;# 
   931  049B                     	;# 
   932  049C                     	;# 
   933  049D                     	;# 
   934  049E                     	;# 
   935  049F                     	;# 
   936  0617                     	;# 
   937  0618                     	;# 
   938  0619                     	;# 
   939  0619                     	;# 
   940  061A                     	;# 
   941  061B                     	;# 
   942  061C                     	;# 
   943  061C                     	;# 
   944  061F                     	;# 
   945  0691                     	;# 
   946  0692                     	;# 
   947  0693                     	;# 
   948  0694                     	;# 
   949  0695                     	;# 
   950  0696                     	;# 
   951  0697                     	;# 
   952  0698                     	;# 
   953  0699                     	;# 
   954  0711                     	;# 
   955  0712                     	;# 
   956  0713                     	;# 
   957  0714                     	;# 
   958  0715                     	;# 
   959  0716                     	;# 
   960  0717                     	;# 
   961  0718                     	;# 
   962  0719                     	;# 
   963  0891                     	;# 
   964  0891                     	;# 
   965  0891                     	;# 
   966  0891                     	;# 
   967  0891                     	;# 
   968  0891                     	;# 
   969  0892                     	;# 
   970  0892                     	;# 
   971  0892                     	;# 
   972  0893                     	;# 
   973  0893                     	;# 
   974  0893                     	;# 
   975  0893                     	;# 
   976  0893                     	;# 
   977  0893                     	;# 
   978  0894                     	;# 
   979  0894                     	;# 
   980  0894                     	;# 
   981  0895                     	;# 
   982  0895                     	;# 
   983  0895                     	;# 
   984  0896                     	;# 
   985  0896                     	;# 
   986  0896                     	;# 
   987  089B                     	;# 
   988  0911                     	;# 
   989  0912                     	;# 
   990  0913                     	;# 
   991  0914                     	;# 
   992  0915                     	;# 
   993  0916                     	;# 
   994  0918                     	;# 
   995  0919                     	;# 
   996  091A                     	;# 
   997  091B                     	;# 
   998  091C                     	;# 
   999  091D                     	;# 
  1000  091E                     	;# 
  1001  091F                     	;# 
  1002  0E0F                     	;# 
  1003  0E10                     	;# 
  1004  0E11                     	;# 
  1005  0E12                     	;# 
  1006  0E13                     	;# 
  1007  0E14                     	;# 
  1008  0E15                     	;# 
  1009  0E16                     	;# 
  1010  0E17                     	;# 
  1011  0E18                     	;# 
  1012  0E19                     	;# 
  1013  0E1A                     	;# 
  1014  0E1B                     	;# 
  1015  0E1C                     	;# 
  1016  0E1D                     	;# 
  1017  0E1E                     	;# 
  1018  0E1F                     	;# 
  1019  0E20                     	;# 
  1020  0E21                     	;# 
  1021  0E22                     	;# 
  1022  0E24                     	;# 
  1023  0E25                     	;# 
  1024  0E28                     	;# 
  1025  0E29                     	;# 
  1026  0E2A                     	;# 
  1027  0E2B                     	;# 
  1028  0E2C                     	;# 
  1029  0E2D                     	;# 
  1030  0E2E                     	;# 
  1031  0E2F                     	;# 
  1032  0E90                     	;# 
  1033  0E91                     	;# 
  1034  0E92                     	;# 
  1035  0E94                     	;# 
  1036  0E95                     	;# 
  1037  0EA0                     	;# 
  1038  0EA1                     	;# 
  1039  0EA2                     	;# 
  1040  0EA3                     	;# 
  1041  0EA4                     	;# 
  1042  0EA5                     	;# 
  1043  0F0F                     	;# 
  1044  0F10                     	;# 
  1045  0F11                     	;# 
  1046  0F12                     	;# 
  1047  0F13                     	;# 
  1048  0F14                     	;# 
  1049  0F15                     	;# 
  1050  0F16                     	;# 
  1051  0F17                     	;# 
  1052  0F18                     	;# 
  1053  0F19                     	;# 
  1054  0F1A                     	;# 
  1055  0F1B                     	;# 
  1056  0F1C                     	;# 
  1057  0F1D                     	;# 
  1058  0F1E                     	;# 
  1059  0F1F                     	;# 
  1060  0F20                     	;# 
  1061  0F21                     	;# 
  1062  0F22                     	;# 
  1063  0F23                     	;# 
  1064  0F24                     	;# 
  1065  0F25                     	;# 
  1066  0F26                     	;# 
  1067  0F27                     	;# 
  1068  0F28                     	;# 
  1069  0F29                     	;# 
  1070  0F2A                     	;# 
  1071  0F2B                     	;# 
  1072  0F2C                     	;# 
  1073  0F2D                     	;# 
  1074  0F2E                     	;# 
  1075  0F2F                     	;# 
  1076  0F30                     	;# 
  1077  0F31                     	;# 
  1078  0F32                     	;# 
  1079  0F33                     	;# 
  1080  0F34                     	;# 
  1081  0F35                     	;# 
  1082  0F36                     	;# 
  1083  0F37                     	;# 
  1084  0FE4                     	;# 
  1085  0FE5                     	;# 
  1086  0FE6                     	;# 
  1087  0FE7                     	;# 
  1088  0FE8                     	;# 
  1089  0FE9                     	;# 
  1090  0FEA                     	;# 
  1091  0FEB                     	;# 
  1092  0FED                     	;# 
  1093  0FEE                     	;# 
  1094  0FEF                     	;# 
  1095  0000                     	;# 
  1096  0001                     	;# 
  1097  0002                     	;# 
  1098  0003                     	;# 
  1099  0004                     	;# 
  1100  0005                     	;# 
  1101  0006                     	;# 
  1102  0007                     	;# 
  1103  0008                     	;# 
  1104  0009                     	;# 
  1105  000A                     	;# 
  1106  000B                     	;# 
  1107  000C                     	;# 
  1108  000E                     	;# 
  1109  0010                     	;# 
  1110  0011                     	;# 
  1111  0012                     	;# 
  1112  0013                     	;# 
  1113  0014                     	;# 
  1114  0015                     	;# 
  1115  0015                     	;# 
  1116  0016                     	;# 
  1117  0016                     	;# 
  1118  0017                     	;# 
  1119  0018                     	;# 
  1120  0019                     	;# 
  1121  0019                     	;# 
  1122  001A                     	;# 
  1123  001B                     	;# 
  1124  001C                     	;# 
  1125  001D                     	;# 
  1126  001E                     	;# 
  1127  001F                     	;# 
  1128  008C                     	;# 
  1129  008E                     	;# 
  1130  0090                     	;# 
  1131  0091                     	;# 
  1132  0092                     	;# 
  1133  0093                     	;# 
  1134  0094                     	;# 
  1135  0097                     	;# 
  1136  009B                     	;# 
  1137  009B                     	;# 
  1138  009C                     	;# 
  1139  009D                     	;# 
  1140  009E                     	;# 
  1141  009F                     	;# 
  1142  010C                     	;# 
  1143  010E                     	;# 
  1144  0111                     	;# 
  1145  0112                     	;# 
  1146  0113                     	;# 
  1147  0114                     	;# 
  1148  0115                     	;# 
  1149  0116                     	;# 
  1150  0117                     	;# 
  1151  0118                     	;# 
  1152  0119                     	;# 
  1153  018C                     	;# 
  1154  018E                     	;# 
  1155  0197                     	;# 
  1156  0199                     	;# 
  1157  0199                     	;# 
  1158  0199                     	;# 
  1159  019A                     	;# 
  1160  019A                     	;# 
  1161  019A                     	;# 
  1162  019B                     	;# 
  1163  019B                     	;# 
  1164  019B                     	;# 
  1165  019B                     	;# 
  1166  019B                     	;# 
  1167  019C                     	;# 
  1168  019C                     	;# 
  1169  019C                     	;# 
  1170  019D                     	;# 
  1171  019D                     	;# 
  1172  019D                     	;# 
  1173  019E                     	;# 
  1174  019E                     	;# 
  1175  019E                     	;# 
  1176  019F                     	;# 
  1177  019F                     	;# 
  1178  019F                     	;# 
  1179  019F                     	;# 
  1180  019F                     	;# 
  1181  020C                     	;# 
  1182  020E                     	;# 
  1183  0211                     	;# 
  1184  0211                     	;# 
  1185  0212                     	;# 
  1186  0212                     	;# 
  1187  0213                     	;# 
  1188  0213                     	;# 
  1189  0214                     	;# 
  1190  0214                     	;# 
  1191  0215                     	;# 
  1192  0215                     	;# 
  1193  0215                     	;# 
  1194  0215                     	;# 
  1195  0216                     	;# 
  1196  0216                     	;# 
  1197  0217                     	;# 
  1198  0217                     	;# 
  1199  0219                     	;# 
  1200  021A                     	;# 
  1201  021B                     	;# 
  1202  021C                     	;# 
  1203  021D                     	;# 
  1204  021D                     	;# 
  1205  021E                     	;# 
  1206  021F                     	;# 
  1207  028C                     	;# 
  1208  028E                     	;# 
  1209  0291                     	;# 
  1210  0291                     	;# 
  1211  0292                     	;# 
  1212  0293                     	;# 
  1213  0294                     	;# 
  1214  0295                     	;# 
  1215  0295                     	;# 
  1216  0296                     	;# 
  1217  0297                     	;# 
  1218  0298                     	;# 
  1219  029F                     	;# 
  1220  030C                     	;# 
  1221  030E                     	;# 
  1222  0311                     	;# 
  1223  0311                     	;# 
  1224  0312                     	;# 
  1225  0313                     	;# 
  1226  0314                     	;# 
  1227  0315                     	;# 
  1228  0315                     	;# 
  1229  0316                     	;# 
  1230  0317                     	;# 
  1231  0318                     	;# 
  1232  038C                     	;# 
  1233  038E                     	;# 
  1234  0391                     	;# 
  1235  0392                     	;# 
  1236  0393                     	;# 
  1237  0397                     	;# 
  1238  0398                     	;# 
  1239  0399                     	;# 
  1240  039A                     	;# 
  1241  039C                     	;# 
  1242  039D                     	;# 
  1243  039E                     	;# 
  1244  039F                     	;# 
  1245  0411                     	;# 
  1246  0411                     	;# 
  1247  0412                     	;# 
  1248  0413                     	;# 
  1249  0414                     	;# 
  1250  0415                     	;# 
  1251  0416                     	;# 
  1252  0417                     	;# 
  1253  0418                     	;# 
  1254  0418                     	;# 
  1255  0419                     	;# 
  1256  041A                     	;# 
  1257  041B                     	;# 
  1258  041C                     	;# 
  1259  041D                     	;# 
  1260  041E                     	;# 
  1261  041F                     	;# 
  1262  0498                     	;# 
  1263  0498                     	;# 
  1264  0499                     	;# 
  1265  049A                     	;# 
  1266  049B                     	;# 
  1267  049B                     	;# 
  1268  049C                     	;# 
  1269  049D                     	;# 
  1270  049E                     	;# 
  1271  049F                     	;# 
  1272  0617                     	;# 
  1273  0618                     	;# 
  1274  0619                     	;# 
  1275  0619                     	;# 
  1276  061A                     	;# 
  1277  061B                     	;# 
  1278  061C                     	;# 
  1279  061C                     	;# 
  1280  061F                     	;# 
  1281  0691                     	;# 
  1282  0692                     	;# 
  1283  0693                     	;# 
  1284  0694                     	;# 
  1285  0695                     	;# 
  1286  0696                     	;# 
  1287  0697                     	;# 
  1288  0698                     	;# 
  1289  0699                     	;# 
  1290  0711                     	;# 
  1291  0712                     	;# 
  1292  0713                     	;# 
  1293  0714                     	;# 
  1294  0715                     	;# 
  1295  0716                     	;# 
  1296  0717                     	;# 
  1297  0718                     	;# 
  1298  0719                     	;# 
  1299  0891                     	;# 
  1300  0891                     	;# 
  1301  0891                     	;# 
  1302  0891                     	;# 
  1303  0891                     	;# 
  1304  0891                     	;# 
  1305  0892                     	;# 
  1306  0892                     	;# 
  1307  0892                     	;# 
  1308  0893                     	;# 
  1309  0893                     	;# 
  1310  0893                     	;# 
  1311  0893                     	;# 
  1312  0893                     	;# 
  1313  0893                     	;# 
  1314  0894                     	;# 
  1315  0894                     	;# 
  1316  0894                     	;# 
  1317  0895                     	;# 
  1318  0895                     	;# 
  1319  0895                     	;# 
  1320  0896                     	;# 
  1321  0896                     	;# 
  1322  0896                     	;# 
  1323  089B                     	;# 
  1324  0911                     	;# 
  1325  0912                     	;# 
  1326  0913                     	;# 
  1327  0914                     	;# 
  1328  0915                     	;# 
  1329  0916                     	;# 
  1330  0918                     	;# 
  1331  0919                     	;# 
  1332  091A                     	;# 
  1333  091B                     	;# 
  1334  091C                     	;# 
  1335  091D                     	;# 
  1336  091E                     	;# 
  1337  091F                     	;# 
  1338  0E0F                     	;# 
  1339  0E10                     	;# 
  1340  0E11                     	;# 
  1341  0E12                     	;# 
  1342  0E13                     	;# 
  1343  0E14                     	;# 
  1344  0E15                     	;# 
  1345  0E16                     	;# 
  1346  0E17                     	;# 
  1347  0E18                     	;# 
  1348  0E19                     	;# 
  1349  0E1A                     	;# 
  1350  0E1B                     	;# 
  1351  0E1C                     	;# 
  1352  0E1D                     	;# 
  1353  0E1E                     	;# 
  1354  0E1F                     	;# 
  1355  0E20                     	;# 
  1356  0E21                     	;# 
  1357  0E22                     	;# 
  1358  0E24                     	;# 
  1359  0E25                     	;# 
  1360  0E28                     	;# 
  1361  0E29                     	;# 
  1362  0E2A                     	;# 
  1363  0E2B                     	;# 
  1364  0E2C                     	;# 
  1365  0E2D                     	;# 
  1366  0E2E                     	;# 
  1367  0E2F                     	;# 
  1368  0E90                     	;# 
  1369  0E91                     	;# 
  1370  0E92                     	;# 
  1371  0E94                     	;# 
  1372  0E95                     	;# 
  1373  0EA0                     	;# 
  1374  0EA1                     	;# 
  1375  0EA2                     	;# 
  1376  0EA3                     	;# 
  1377  0EA4                     	;# 
  1378  0EA5                     	;# 
  1379  0F0F                     	;# 
  1380  0F10                     	;# 
  1381  0F11                     	;# 
  1382  0F12                     	;# 
  1383  0F13                     	;# 
  1384  0F14                     	;# 
  1385  0F15                     	;# 
  1386  0F16                     	;# 
  1387  0F17                     	;# 
  1388  0F18                     	;# 
  1389  0F19                     	;# 
  1390  0F1A                     	;# 
  1391  0F1B                     	;# 
  1392  0F1C                     	;# 
  1393  0F1D                     	;# 
  1394  0F1E                     	;# 
  1395  0F1F                     	;# 
  1396  0F20                     	;# 
  1397  0F21                     	;# 
  1398  0F22                     	;# 
  1399  0F23                     	;# 
  1400  0F24                     	;# 
  1401  0F25                     	;# 
  1402  0F26                     	;# 
  1403  0F27                     	;# 
  1404  0F28                     	;# 
  1405  0F29                     	;# 
  1406  0F2A                     	;# 
  1407  0F2B                     	;# 
  1408  0F2C                     	;# 
  1409  0F2D                     	;# 
  1410  0F2E                     	;# 
  1411  0F2F                     	;# 
  1412  0F30                     	;# 
  1413  0F31                     	;# 
  1414  0F32                     	;# 
  1415  0F33                     	;# 
  1416  0F34                     	;# 
  1417  0F35                     	;# 
  1418  0F36                     	;# 
  1419  0F37                     	;# 
  1420  0FE4                     	;# 
  1421  0FE5                     	;# 
  1422  0FE6                     	;# 
  1423  0FE7                     	;# 
  1424  0FE8                     	;# 
  1425  0FE9                     	;# 
  1426  0FEA                     	;# 
  1427  0FEB                     	;# 
  1428  0FED                     	;# 
  1429  0FEE                     	;# 
  1430  0FEF                     	;# 
  1431  0000                     	;# 
  1432  0001                     	;# 
  1433  0002                     	;# 
  1434  0003                     	;# 
  1435  0004                     	;# 
  1436  0005                     	;# 
  1437  0006                     	;# 
  1438  0007                     	;# 
  1439  0008                     	;# 
  1440  0009                     	;# 
  1441  000A                     	;# 
  1442  000B                     	;# 
  1443  000C                     	;# 
  1444  000E                     	;# 
  1445  0010                     	;# 
  1446  0011                     	;# 
  1447  0012                     	;# 
  1448  0013                     	;# 
  1449  0014                     	;# 
  1450  0015                     	;# 
  1451  0015                     	;# 
  1452  0016                     	;# 
  1453  0016                     	;# 
  1454  0017                     	;# 
  1455  0018                     	;# 
  1456  0019                     	;# 
  1457  0019                     	;# 
  1458  001A                     	;# 
  1459  001B                     	;# 
  1460  001C                     	;# 
  1461  001D                     	;# 
  1462  001E                     	;# 
  1463  001F                     	;# 
  1464  008C                     	;# 
  1465  008E                     	;# 
  1466  0090                     	;# 
  1467  0091                     	;# 
  1468  0092                     	;# 
  1469  0093                     	;# 
  1470  0094                     	;# 
  1471  0097                     	;# 
  1472  009B                     	;# 
  1473  009B                     	;# 
  1474  009C                     	;# 
  1475  009D                     	;# 
  1476  009E                     	;# 
  1477  009F                     	;# 
  1478  010C                     	;# 
  1479  010E                     	;# 
  1480  0111                     	;# 
  1481  0112                     	;# 
  1482  0113                     	;# 
  1483  0114                     	;# 
  1484  0115                     	;# 
  1485  0116                     	;# 
  1486  0117                     	;# 
  1487  0118                     	;# 
  1488  0119                     	;# 
  1489  018C                     	;# 
  1490  018E                     	;# 
  1491  0197                     	;# 
  1492  0199                     	;# 
  1493  0199                     	;# 
  1494  0199                     	;# 
  1495  019A                     	;# 
  1496  019A                     	;# 
  1497  019A                     	;# 
  1498  019B                     	;# 
  1499  019B                     	;# 
  1500  019B                     	;# 
  1501  019B                     	;# 
  1502  019B                     	;# 
  1503  019C                     	;# 
  1504  019C                     	;# 
  1505  019C                     	;# 
  1506  019D                     	;# 
  1507  019D                     	;# 
  1508  019D                     	;# 
  1509  019E                     	;# 
  1510  019E                     	;# 
  1511  019E                     	;# 
  1512  019F                     	;# 
  1513  019F                     	;# 
  1514  019F                     	;# 
  1515  019F                     	;# 
  1516  019F                     	;# 
  1517  020C                     	;# 
  1518  020E                     	;# 
  1519  0211                     	;# 
  1520  0211                     	;# 
  1521  0212                     	;# 
  1522  0212                     	;# 
  1523  0213                     	;# 
  1524  0213                     	;# 
  1525  0214                     	;# 
  1526  0214                     	;# 
  1527  0215                     	;# 
  1528  0215                     	;# 
  1529  0215                     	;# 
  1530  0215                     	;# 
  1531  0216                     	;# 
  1532  0216                     	;# 
  1533  0217                     	;# 
  1534  0217                     	;# 
  1535  0219                     	;# 
  1536  021A                     	;# 
  1537  021B                     	;# 
  1538  021C                     	;# 
  1539  021D                     	;# 
  1540  021D                     	;# 
  1541  021E                     	;# 
  1542  021F                     	;# 
  1543  028C                     	;# 
  1544  028E                     	;# 
  1545  0291                     	;# 
  1546  0291                     	;# 
  1547  0292                     	;# 
  1548  0293                     	;# 
  1549  0294                     	;# 
  1550  0295                     	;# 
  1551  0295                     	;# 
  1552  0296                     	;# 
  1553  0297                     	;# 
  1554  0298                     	;# 
  1555  029F                     	;# 
  1556  030C                     	;# 
  1557  030E                     	;# 
  1558  0311                     	;# 
  1559  0311                     	;# 
  1560  0312                     	;# 
  1561  0313                     	;# 
  1562  0314                     	;# 
  1563  0315                     	;# 
  1564  0315                     	;# 
  1565  0316                     	;# 
  1566  0317                     	;# 
  1567  0318                     	;# 
  1568  038C                     	;# 
  1569  038E                     	;# 
  1570  0391                     	;# 
  1571  0392                     	;# 
  1572  0393                     	;# 
  1573  0397                     	;# 
  1574  0398                     	;# 
  1575  0399                     	;# 
  1576  039A                     	;# 
  1577  039C                     	;# 
  1578  039D                     	;# 
  1579  039E                     	;# 
  1580  039F                     	;# 
  1581  0411                     	;# 
  1582  0411                     	;# 
  1583  0412                     	;# 
  1584  0413                     	;# 
  1585  0414                     	;# 
  1586  0415                     	;# 
  1587  0416                     	;# 
  1588  0417                     	;# 
  1589  0418                     	;# 
  1590  0418                     	;# 
  1591  0419                     	;# 
  1592  041A                     	;# 
  1593  041B                     	;# 
  1594  041C                     	;# 
  1595  041D                     	;# 
  1596  041E                     	;# 
  1597  041F                     	;# 
  1598  0498                     	;# 
  1599  0498                     	;# 
  1600  0499                     	;# 
  1601  049A                     	;# 
  1602  049B                     	;# 
  1603  049B                     	;# 
  1604  049C                     	;# 
  1605  049D                     	;# 
  1606  049E                     	;# 
  1607  049F                     	;# 
  1608  0617                     	;# 
  1609  0618                     	;# 
  1610  0619                     	;# 
  1611  0619                     	;# 
  1612  061A                     	;# 
  1613  061B                     	;# 
  1614  061C                     	;# 
  1615  061C                     	;# 
  1616  061F                     	;# 
  1617  0691                     	;# 
  1618  0692                     	;# 
  1619  0693                     	;# 
  1620  0694                     	;# 
  1621  0695                     	;# 
  1622  0696                     	;# 
  1623  0697                     	;# 
  1624  0698                     	;# 
  1625  0699                     	;# 
  1626  0711                     	;# 
  1627  0712                     	;# 
  1628  0713                     	;# 
  1629  0714                     	;# 
  1630  0715                     	;# 
  1631  0716                     	;# 
  1632  0717                     	;# 
  1633  0718                     	;# 
  1634  0719                     	;# 
  1635  0891                     	;# 
  1636  0891                     	;# 
  1637  0891                     	;# 
  1638  0891                     	;# 
  1639  0891                     	;# 
  1640  0891                     	;# 
  1641  0892                     	;# 
  1642  0892                     	;# 
  1643  0892                     	;# 
  1644  0893                     	;# 
  1645  0893                     	;# 
  1646  0893                     	;# 
  1647  0893                     	;# 
  1648  0893                     	;# 
  1649  0893                     	;# 
  1650  0894                     	;# 
  1651  0894                     	;# 
  1652  0894                     	;# 
  1653  0895                     	;# 
  1654  0895                     	;# 
  1655  0895                     	;# 
  1656  0896                     	;# 
  1657  0896                     	;# 
  1658  0896                     	;# 
  1659  089B                     	;# 
  1660  0911                     	;# 
  1661  0912                     	;# 
  1662  0913                     	;# 
  1663  0914                     	;# 
  1664  0915                     	;# 
  1665  0916                     	;# 
  1666  0918                     	;# 
  1667  0919                     	;# 
  1668  091A                     	;# 
  1669  091B                     	;# 
  1670  091C                     	;# 
  1671  091D                     	;# 
  1672  091E                     	;# 
  1673  091F                     	;# 
  1674  0E0F                     	;# 
  1675  0E10                     	;# 
  1676  0E11                     	;# 
  1677  0E12                     	;# 
  1678  0E13                     	;# 
  1679  0E14                     	;# 
  1680  0E15                     	;# 
  1681  0E16                     	;# 
  1682  0E17                     	;# 
  1683  0E18                     	;# 
  1684  0E19                     	;# 
  1685  0E1A                     	;# 
  1686  0E1B                     	;# 
  1687  0E1C                     	;# 
  1688  0E1D                     	;# 
  1689  0E1E                     	;# 
  1690  0E1F                     	;# 
  1691  0E20                     	;# 
  1692  0E21                     	;# 
  1693  0E22                     	;# 
  1694  0E24                     	;# 
  1695  0E25                     	;# 
  1696  0E28                     	;# 
  1697  0E29                     	;# 
  1698  0E2A                     	;# 
  1699  0E2B                     	;# 
  1700  0E2C                     	;# 
  1701  0E2D                     	;# 
  1702  0E2E                     	;# 
  1703  0E2F                     	;# 
  1704  0E90                     	;# 
  1705  0E91                     	;# 
  1706  0E92                     	;# 
  1707  0E94                     	;# 
  1708  0E95                     	;# 
  1709  0EA0                     	;# 
  1710  0EA1                     	;# 
  1711  0EA2                     	;# 
  1712  0EA3                     	;# 
  1713  0EA4                     	;# 
  1714  0EA5                     	;# 
  1715  0F0F                     	;# 
  1716  0F10                     	;# 
  1717  0F11                     	;# 
  1718  0F12                     	;# 
  1719  0F13                     	;# 
  1720  0F14                     	;# 
  1721  0F15                     	;# 
  1722  0F16                     	;# 
  1723  0F17                     	;# 
  1724  0F18                     	;# 
  1725  0F19                     	;# 
  1726  0F1A                     	;# 
  1727  0F1B                     	;# 
  1728  0F1C                     	;# 
  1729  0F1D                     	;# 
  1730  0F1E                     	;# 
  1731  0F1F                     	;# 
  1732  0F20                     	;# 
  1733  0F21                     	;# 
  1734  0F22                     	;# 
  1735  0F23                     	;# 
  1736  0F24                     	;# 
  1737  0F25                     	;# 
  1738  0F26                     	;# 
  1739  0F27                     	;# 
  1740  0F28                     	;# 
  1741  0F29                     	;# 
  1742  0F2A                     	;# 
  1743  0F2B                     	;# 
  1744  0F2C                     	;# 
  1745  0F2D                     	;# 
  1746  0F2E                     	;# 
  1747  0F2F                     	;# 
  1748  0F30                     	;# 
  1749  0F31                     	;# 
  1750  0F32                     	;# 
  1751  0F33                     	;# 
  1752  0F34                     	;# 
  1753  0F35                     	;# 
  1754  0F36                     	;# 
  1755  0F37                     	;# 
  1756  0FE4                     	;# 
  1757  0FE5                     	;# 
  1758  0FE6                     	;# 
  1759  0FE7                     	;# 
  1760  0FE8                     	;# 
  1761  0FE9                     	;# 
  1762  0FEA                     	;# 
  1763  0FEB                     	;# 
  1764  0FED                     	;# 
  1765  0FEE                     	;# 
  1766  0FEF                     	;# 
  1767  0000                     	;# 
  1768  0001                     	;# 
  1769  0002                     	;# 
  1770  0003                     	;# 
  1771  0004                     	;# 
  1772  0005                     	;# 
  1773  0006                     	;# 
  1774  0007                     	;# 
  1775  0008                     	;# 
  1776  0009                     	;# 
  1777  000A                     	;# 
  1778  000B                     	;# 
  1779  000C                     	;# 
  1780  000E                     	;# 
  1781  0010                     	;# 
  1782  0011                     	;# 
  1783  0012                     	;# 
  1784  0013                     	;# 
  1785  0014                     	;# 
  1786  0015                     	;# 
  1787  0015                     	;# 
  1788  0016                     	;# 
  1789  0016                     	;# 
  1790  0017                     	;# 
  1791  0018                     	;# 
  1792  0019                     	;# 
  1793  0019                     	;# 
  1794  001A                     	;# 
  1795  001B                     	;# 
  1796  001C                     	;# 
  1797  001D                     	;# 
  1798  001E                     	;# 
  1799  001F                     	;# 
  1800  008C                     	;# 
  1801  008E                     	;# 
  1802  0090                     	;# 
  1803  0091                     	;# 
  1804  0092                     	;# 
  1805  0093                     	;# 
  1806  0094                     	;# 
  1807  0097                     	;# 
  1808  009B                     	;# 
  1809  009B                     	;# 
  1810  009C                     	;# 
  1811  009D                     	;# 
  1812  009E                     	;# 
  1813  009F                     	;# 
  1814  010C                     	;# 
  1815  010E                     	;# 
  1816  0111                     	;# 
  1817  0112                     	;# 
  1818  0113                     	;# 
  1819  0114                     	;# 
  1820  0115                     	;# 
  1821  0116                     	;# 
  1822  0117                     	;# 
  1823  0118                     	;# 
  1824  0119                     	;# 
  1825  018C                     	;# 
  1826  018E                     	;# 
  1827  0197                     	;# 
  1828  0199                     	;# 
  1829  0199                     	;# 
  1830  0199                     	;# 
  1831  019A                     	;# 
  1832  019A                     	;# 
  1833  019A                     	;# 
  1834  019B                     	;# 
  1835  019B                     	;# 
  1836  019B                     	;# 
  1837  019B                     	;# 
  1838  019B                     	;# 
  1839  019C                     	;# 
  1840  019C                     	;# 
  1841  019C                     	;# 
  1842  019D                     	;# 
  1843  019D                     	;# 
  1844  019D                     	;# 
  1845  019E                     	;# 
  1846  019E                     	;# 
  1847  019E                     	;# 
  1848  019F                     	;# 
  1849  019F                     	;# 
  1850  019F                     	;# 
  1851  019F                     	;# 
  1852  019F                     	;# 
  1853  020C                     	;# 
  1854  020E                     	;# 
  1855  0211                     	;# 
  1856  0211                     	;# 
  1857  0212                     	;# 
  1858  0212                     	;# 
  1859  0213                     	;# 
  1860  0213                     	;# 
  1861  0214                     	;# 
  1862  0214                     	;# 
  1863  0215                     	;# 
  1864  0215                     	;# 
  1865  0215                     	;# 
  1866  0215                     	;# 
  1867  0216                     	;# 
  1868  0216                     	;# 
  1869  0217                     	;# 
  1870  0217                     	;# 
  1871  0219                     	;# 
  1872  021A                     	;# 
  1873  021B                     	;# 
  1874  021C                     	;# 
  1875  021D                     	;# 
  1876  021D                     	;# 
  1877  021E                     	;# 
  1878  021F                     	;# 
  1879  028C                     	;# 
  1880  028E                     	;# 
  1881  0291                     	;# 
  1882  0291                     	;# 
  1883  0292                     	;# 
  1884  0293                     	;# 
  1885  0294                     	;# 
  1886  0295                     	;# 
  1887  0295                     	;# 
  1888  0296                     	;# 
  1889  0297                     	;# 
  1890  0298                     	;# 
  1891  029F                     	;# 
  1892  030C                     	;# 
  1893  030E                     	;# 
  1894  0311                     	;# 
  1895  0311                     	;# 
  1896  0312                     	;# 
  1897  0313                     	;# 
  1898  0314                     	;# 
  1899  0315                     	;# 
  1900  0315                     	;# 
  1901  0316                     	;# 
  1902  0317                     	;# 
  1903  0318                     	;# 
  1904  038C                     	;# 
  1905  038E                     	;# 
  1906  0391                     	;# 
  1907  0392                     	;# 
  1908  0393                     	;# 
  1909  0397                     	;# 
  1910  0398                     	;# 
  1911  0399                     	;# 
  1912  039A                     	;# 
  1913  039C                     	;# 
  1914  039D                     	;# 
  1915  039E                     	;# 
  1916  039F                     	;# 
  1917  0411                     	;# 
  1918  0411                     	;# 
  1919  0412                     	;# 
  1920  0413                     	;# 
  1921  0414                     	;# 
  1922  0415                     	;# 
  1923  0416                     	;# 
  1924  0417                     	;# 
  1925  0418                     	;# 
  1926  0418                     	;# 
  1927  0419                     	;# 
  1928  041A                     	;# 
  1929  041B                     	;# 
  1930  041C                     	;# 
  1931  041D                     	;# 
  1932  041E                     	;# 
  1933  041F                     	;# 
  1934  0498                     	;# 
  1935  0498                     	;# 
  1936  0499                     	;# 
  1937  049A                     	;# 
  1938  049B                     	;# 
  1939  049B                     	;# 
  1940  049C                     	;# 
  1941  049D                     	;# 
  1942  049E                     	;# 
  1943  049F                     	;# 
  1944  0617                     	;# 
  1945  0618                     	;# 
  1946  0619                     	;# 
  1947  0619                     	;# 
  1948  061A                     	;# 
  1949  061B                     	;# 
  1950  061C                     	;# 
  1951  061C                     	;# 
  1952  061F                     	;# 
  1953  0691                     	;# 
  1954  0692                     	;# 
  1955  0693                     	;# 
  1956  0694                     	;# 
  1957  0695                     	;# 
  1958  0696                     	;# 
  1959  0697                     	;# 
  1960  0698                     	;# 
  1961  0699                     	;# 
  1962  0711                     	;# 
  1963  0712                     	;# 
  1964  0713                     	;# 
  1965  0714                     	;# 
  1966  0715                     	;# 
  1967  0716                     	;# 
  1968  0717                     	;# 
  1969  0718                     	;# 
  1970  0719                     	;# 
  1971  0891                     	;# 
  1972  0891                     	;# 
  1973  0891                     	;# 
  1974  0891                     	;# 
  1975  0891                     	;# 
  1976  0891                     	;# 
  1977  0892                     	;# 
  1978  0892                     	;# 
  1979  0892                     	;# 
  1980  0893                     	;# 
  1981  0893                     	;# 
  1982  0893                     	;# 
  1983  0893                     	;# 
  1984  0893                     	;# 
  1985  0893                     	;# 
  1986  0894                     	;# 
  1987  0894                     	;# 
  1988  0894                     	;# 
  1989  0895                     	;# 
  1990  0895                     	;# 
  1991  0895                     	;# 
  1992  0896                     	;# 
  1993  0896                     	;# 
  1994  0896                     	;# 
  1995  089B                     	;# 
  1996  0911                     	;# 
  1997  0912                     	;# 
  1998  0913                     	;# 
  1999  0914                     	;# 
  2000  0915                     	;# 
  2001  0916                     	;# 
  2002  0918                     	;# 
  2003  0919                     	;# 
  2004  091A                     	;# 
  2005  091B                     	;# 
  2006  091C                     	;# 
  2007  091D                     	;# 
  2008  091E                     	;# 
  2009  091F                     	;# 
  2010  0E0F                     	;# 
  2011  0E10                     	;# 
  2012  0E11                     	;# 
  2013  0E12                     	;# 
  2014  0E13                     	;# 
  2015  0E14                     	;# 
  2016  0E15                     	;# 
  2017  0E16                     	;# 
  2018  0E17                     	;# 
  2019  0E18                     	;# 
  2020  0E19                     	;# 
  2021  0E1A                     	;# 
  2022  0E1B                     	;# 
  2023  0E1C                     	;# 
  2024  0E1D                     	;# 
  2025  0E1E                     	;# 
  2026  0E1F                     	;# 
  2027  0E20                     	;# 
  2028  0E21                     	;# 
  2029  0E22                     	;# 
  2030  0E24                     	;# 
  2031  0E25                     	;# 
  2032  0E28                     	;# 
  2033  0E29                     	;# 
  2034  0E2A                     	;# 
  2035  0E2B                     	;# 
  2036  0E2C                     	;# 
  2037  0E2D                     	;# 
  2038  0E2E                     	;# 
  2039  0E2F                     	;# 
  2040  0E90                     	;# 
  2041  0E91                     	;# 
  2042  0E92                     	;# 
  2043  0E94                     	;# 
  2044  0E95                     	;# 
  2045  0EA0                     	;# 
  2046  0EA1                     	;# 
  2047  0EA2                     	;# 
  2048  0EA3                     	;# 
  2049  0EA4                     	;# 
  2050  0EA5                     	;# 
  2051  0F0F                     	;# 
  2052  0F10                     	;# 
  2053  0F11                     	;# 
  2054  0F12                     	;# 
  2055  0F13                     	;# 
  2056  0F14                     	;# 
  2057  0F15                     	;# 
  2058  0F16                     	;# 
  2059  0F17                     	;# 
  2060  0F18                     	;# 
  2061  0F19                     	;# 
  2062  0F1A                     	;# 
  2063  0F1B                     	;# 
  2064  0F1C                     	;# 
  2065  0F1D                     	;# 
  2066  0F1E                     	;# 
  2067  0F1F                     	;# 
  2068  0F20                     	;# 
  2069  0F21                     	;# 
  2070  0F22                     	;# 
  2071  0F23                     	;# 
  2072  0F24                     	;# 
  2073  0F25                     	;# 
  2074  0F26                     	;# 
  2075  0F27                     	;# 
  2076  0F28                     	;# 
  2077  0F29                     	;# 
  2078  0F2A                     	;# 
  2079  0F2B                     	;# 
  2080  0F2C                     	;# 
  2081  0F2D                     	;# 
  2082  0F2E                     	;# 
  2083  0F2F                     	;# 
  2084  0F30                     	;# 
  2085  0F31                     	;# 
  2086  0F32                     	;# 
  2087  0F33                     	;# 
  2088  0F34                     	;# 
  2089  0F35                     	;# 
  2090  0F36                     	;# 
  2091  0F37                     	;# 
  2092  0FE4                     	;# 
  2093  0FE5                     	;# 
  2094  0FE6                     	;# 
  2095  0FE7                     	;# 
  2096  0FE8                     	;# 
  2097  0FE9                     	;# 
  2098  0FEA                     	;# 
  2099  0FEB                     	;# 
  2100  0FED                     	;# 
  2101  0FEE                     	;# 
  2102  0FEF                     	;# 
  2103  0000                     	;# 
  2104  0001                     	;# 
  2105  0002                     	;# 
  2106  0003                     	;# 
  2107  0004                     	;# 
  2108  0005                     	;# 
  2109  0006                     	;# 
  2110  0007                     	;# 
  2111  0008                     	;# 
  2112  0009                     	;# 
  2113  000A                     	;# 
  2114  000B                     	;# 
  2115  000C                     	;# 
  2116  000E                     	;# 
  2117  0010                     	;# 
  2118  0011                     	;# 
  2119  0012                     	;# 
  2120  0013                     	;# 
  2121  0014                     	;# 
  2122  0015                     	;# 
  2123  0015                     	;# 
  2124  0016                     	;# 
  2125  0016                     	;# 
  2126  0017                     	;# 
  2127  0018                     	;# 
  2128  0019                     	;# 
  2129  0019                     	;# 
  2130  001A                     	;# 
  2131  001B                     	;# 
  2132  001C                     	;# 
  2133  001D                     	;# 
  2134  001E                     	;# 
  2135  001F                     	;# 
  2136  008C                     	;# 
  2137  008E                     	;# 
  2138  0090                     	;# 
  2139  0091                     	;# 
  2140  0092                     	;# 
  2141  0093                     	;# 
  2142  0094                     	;# 
  2143  0097                     	;# 
  2144  009B                     	;# 
  2145  009B                     	;# 
  2146  009C                     	;# 
  2147  009D                     	;# 
  2148  009E                     	;# 
  2149  009F                     	;# 
  2150  010C                     	;# 
  2151  010E                     	;# 
  2152  0111                     	;# 
  2153  0112                     	;# 
  2154  0113                     	;# 
  2155  0114                     	;# 
  2156  0115                     	;# 
  2157  0116                     	;# 
  2158  0117                     	;# 
  2159  0118                     	;# 
  2160  0119                     	;# 
  2161  018C                     	;# 
  2162  018E                     	;# 
  2163  0197                     	;# 
  2164  0199                     	;# 
  2165  0199                     	;# 
  2166  0199                     	;# 
  2167  019A                     	;# 
  2168  019A                     	;# 
  2169  019A                     	;# 
  2170  019B                     	;# 
  2171  019B                     	;# 
  2172  019B                     	;# 
  2173  019B                     	;# 
  2174  019B                     	;# 
  2175  019C                     	;# 
  2176  019C                     	;# 
  2177  019C                     	;# 
  2178  019D                     	;# 
  2179  019D                     	;# 
  2180  019D                     	;# 
  2181  019E                     	;# 
  2182  019E                     	;# 
  2183  019E                     	;# 
  2184  019F                     	;# 
  2185  019F                     	;# 
  2186  019F                     	;# 
  2187  019F                     	;# 
  2188  019F                     	;# 
  2189  020C                     	;# 
  2190  020E                     	;# 
  2191  0211                     	;# 
  2192  0211                     	;# 
  2193  0212                     	;# 
  2194  0212                     	;# 
  2195  0213                     	;# 
  2196  0213                     	;# 
  2197  0214                     	;# 
  2198  0214                     	;# 
  2199  0215                     	;# 
  2200  0215                     	;# 
  2201  0215                     	;# 
  2202  0215                     	;# 
  2203  0216                     	;# 
  2204  0216                     	;# 
  2205  0217                     	;# 
  2206  0217                     	;# 
  2207  0219                     	;# 
  2208  021A                     	;# 
  2209  021B                     	;# 
  2210  021C                     	;# 
  2211  021D                     	;# 
  2212  021D                     	;# 
  2213  021E                     	;# 
  2214  021F                     	;# 
  2215  028C                     	;# 
  2216  028E                     	;# 
  2217  0291                     	;# 
  2218  0291                     	;# 
  2219  0292                     	;# 
  2220  0293                     	;# 
  2221  0294                     	;# 
  2222  0295                     	;# 
  2223  0295                     	;# 
  2224  0296                     	;# 
  2225  0297                     	;# 
  2226  0298                     	;# 
  2227  029F                     	;# 
  2228  030C                     	;# 
  2229  030E                     	;# 
  2230  0311                     	;# 
  2231  0311                     	;# 
  2232  0312                     	;# 
  2233  0313                     	;# 
  2234  0314                     	;# 
  2235  0315                     	;# 
  2236  0315                     	;# 
  2237  0316                     	;# 
  2238  0317                     	;# 
  2239  0318                     	;# 
  2240  038C                     	;# 
  2241  038E                     	;# 
  2242  0391                     	;# 
  2243  0392                     	;# 
  2244  0393                     	;# 
  2245  0397                     	;# 
  2246  0398                     	;# 
  2247  0399                     	;# 
  2248  039A                     	;# 
  2249  039C                     	;# 
  2250  039D                     	;# 
  2251  039E                     	;# 
  2252  039F                     	;# 
  2253  0411                     	;# 
  2254  0411                     	;# 
  2255  0412                     	;# 
  2256  0413                     	;# 
  2257  0414                     	;# 
  2258  0415                     	;# 
  2259  0416                     	;# 
  2260  0417                     	;# 
  2261  0418                     	;# 
  2262  0418                     	;# 
  2263  0419                     	;# 
  2264  041A                     	;# 
  2265  041B                     	;# 
  2266  041C                     	;# 
  2267  041D                     	;# 
  2268  041E                     	;# 
  2269  041F                     	;# 
  2270  0498                     	;# 
  2271  0498                     	;# 
  2272  0499                     	;# 
  2273  049A                     	;# 
  2274  049B                     	;# 
  2275  049B                     	;# 
  2276  049C                     	;# 
  2277  049D                     	;# 
  2278  049E                     	;# 
  2279  049F                     	;# 
  2280  0617                     	;# 
  2281  0618                     	;# 
  2282  0619                     	;# 
  2283  0619                     	;# 
  2284  061A                     	;# 
  2285  061B                     	;# 
  2286  061C                     	;# 
  2287  061C                     	;# 
  2288  061F                     	;# 
  2289  0691                     	;# 
  2290  0692                     	;# 
  2291  0693                     	;# 
  2292  0694                     	;# 
  2293  0695                     	;# 
  2294  0696                     	;# 
  2295  0697                     	;# 
  2296  0698                     	;# 
  2297  0699                     	;# 
  2298  0711                     	;# 
  2299  0712                     	;# 
  2300  0713                     	;# 
  2301  0714                     	;# 
  2302  0715                     	;# 
  2303  0716                     	;# 
  2304  0717                     	;# 
  2305  0718                     	;# 
  2306  0719                     	;# 
  2307  0891                     	;# 
  2308  0891                     	;# 
  2309  0891                     	;# 
  2310  0891                     	;# 
  2311  0891                     	;# 
  2312  0891                     	;# 
  2313  0892                     	;# 
  2314  0892                     	;# 
  2315  0892                     	;# 
  2316  0893                     	;# 
  2317  0893                     	;# 
  2318  0893                     	;# 
  2319  0893                     	;# 
  2320  0893                     	;# 
  2321  0893                     	;# 
  2322  0894                     	;# 
  2323  0894                     	;# 
  2324  0894                     	;# 
  2325  0895                     	;# 
  2326  0895                     	;# 
  2327  0895                     	;# 
  2328  0896                     	;# 
  2329  0896                     	;# 
  2330  0896                     	;# 
  2331  089B                     	;# 
  2332  0911                     	;# 
  2333  0912                     	;# 
  2334  0913                     	;# 
  2335  0914                     	;# 
  2336  0915                     	;# 
  2337  0916                     	;# 
  2338  0918                     	;# 
  2339  0919                     	;# 
  2340  091A                     	;# 
  2341  091B                     	;# 
  2342  091C                     	;# 
  2343  091D                     	;# 
  2344  091E                     	;# 
  2345  091F                     	;# 
  2346  0E0F                     	;# 
  2347  0E10                     	;# 
  2348  0E11                     	;# 
  2349  0E12                     	;# 
  2350  0E13                     	;# 
  2351  0E14                     	;# 
  2352  0E15                     	;# 
  2353  0E16                     	;# 
  2354  0E17                     	;# 
  2355  0E18                     	;# 
  2356  0E19                     	;# 
  2357  0E1A                     	;# 
  2358  0E1B                     	;# 
  2359  0E1C                     	;# 
  2360  0E1D                     	;# 
  2361  0E1E                     	;# 
  2362  0E1F                     	;# 
  2363  0E20                     	;# 
  2364  0E21                     	;# 
  2365  0E22                     	;# 
  2366  0E24                     	;# 
  2367  0E25                     	;# 
  2368  0E28                     	;# 
  2369  0E29                     	;# 
  2370  0E2A                     	;# 
  2371  0E2B                     	;# 
  2372  0E2C                     	;# 
  2373  0E2D                     	;# 
  2374  0E2E                     	;# 
  2375  0E2F                     	;# 
  2376  0E90                     	;# 
  2377  0E91                     	;# 
  2378  0E92                     	;# 
  2379  0E94                     	;# 
  2380  0E95                     	;# 
  2381  0EA0                     	;# 
  2382  0EA1                     	;# 
  2383  0EA2                     	;# 
  2384  0EA3                     	;# 
  2385  0EA4                     	;# 
  2386  0EA5                     	;# 
  2387  0F0F                     	;# 
  2388  0F10                     	;# 
  2389  0F11                     	;# 
  2390  0F12                     	;# 
  2391  0F13                     	;# 
  2392  0F14                     	;# 
  2393  0F15                     	;# 
  2394  0F16                     	;# 
  2395  0F17                     	;# 
  2396  0F18                     	;# 
  2397  0F19                     	;# 
  2398  0F1A                     	;# 
  2399  0F1B                     	;# 
  2400  0F1C                     	;# 
  2401  0F1D                     	;# 
  2402  0F1E                     	;# 
  2403  0F1F                     	;# 
  2404  0F20                     	;# 
  2405  0F21                     	;# 
  2406  0F22                     	;# 
  2407  0F23                     	;# 
  2408  0F24                     	;# 
  2409  0F25                     	;# 
  2410  0F26                     	;# 
  2411  0F27                     	;# 
  2412  0F28                     	;# 
  2413  0F29                     	;# 
  2414  0F2A                     	;# 
  2415  0F2B                     	;# 
  2416  0F2C                     	;# 
  2417  0F2D                     	;# 
  2418  0F2E                     	;# 
  2419  0F2F                     	;# 
  2420  0F30                     	;# 
  2421  0F31                     	;# 
  2422  0F32                     	;# 
  2423  0F33                     	;# 
  2424  0F34                     	;# 
  2425  0F35                     	;# 
  2426  0F36                     	;# 
  2427  0F37                     	;# 
  2428  0FE4                     	;# 
  2429  0FE5                     	;# 
  2430  0FE6                     	;# 
  2431  0FE7                     	;# 
  2432  0FE8                     	;# 
  2433  0FE9                     	;# 
  2434  0FEA                     	;# 
  2435  0FEB                     	;# 
  2436  0FED                     	;# 
  2437  0FEE                     	;# 
  2438  0FEF                     	;# 
  2439  0000                     	;# 
  2440  0001                     	;# 
  2441  0002                     	;# 
  2442  0003                     	;# 
  2443  0004                     	;# 
  2444  0005                     	;# 
  2445  0006                     	;# 
  2446  0007                     	;# 
  2447  0008                     	;# 
  2448  0009                     	;# 
  2449  000A                     	;# 
  2450  000B                     	;# 
  2451  000C                     	;# 
  2452  000E                     	;# 
  2453  0010                     	;# 
  2454  0011                     	;# 
  2455  0012                     	;# 
  2456  0013                     	;# 
  2457  0014                     	;# 
  2458  0015                     	;# 
  2459  0015                     	;# 
  2460  0016                     	;# 
  2461  0016                     	;# 
  2462  0017                     	;# 
  2463  0018                     	;# 
  2464  0019                     	;# 
  2465  0019                     	;# 
  2466  001A                     	;# 
  2467  001B                     	;# 
  2468  001C                     	;# 
  2469  001D                     	;# 
  2470  001E                     	;# 
  2471  001F                     	;# 
  2472  008C                     	;# 
  2473  008E                     	;# 
  2474  0090                     	;# 
  2475  0091                     	;# 
  2476  0092                     	;# 
  2477  0093                     	;# 
  2478  0094                     	;# 
  2479  0097                     	;# 
  2480  009B                     	;# 
  2481  009B                     	;# 
  2482  009C                     	;# 
  2483  009D                     	;# 
  2484  009E                     	;# 
  2485  009F                     	;# 
  2486  010C                     	;# 
  2487  010E                     	;# 
  2488  0111                     	;# 
  2489  0112                     	;# 
  2490  0113                     	;# 
  2491  0114                     	;# 
  2492  0115                     	;# 
  2493  0116                     	;# 
  2494  0117                     	;# 
  2495  0118                     	;# 
  2496  0119                     	;# 
  2497  018C                     	;# 
  2498  018E                     	;# 
  2499  0197                     	;# 
  2500  0199                     	;# 
  2501  0199                     	;# 
  2502  0199                     	;# 
  2503  019A                     	;# 
  2504  019A                     	;# 
  2505  019A                     	;# 
  2506  019B                     	;# 
  2507  019B                     	;# 
  2508  019B                     	;# 
  2509  019B                     	;# 
  2510  019B                     	;# 
  2511  019C                     	;# 
  2512  019C                     	;# 
  2513  019C                     	;# 
  2514  019D                     	;# 
  2515  019D                     	;# 
  2516  019D                     	;# 
  2517  019E                     	;# 
  2518  019E                     	;# 
  2519  019E                     	;# 
  2520  019F                     	;# 
  2521  019F                     	;# 
  2522  019F                     	;# 
  2523  019F                     	;# 
  2524  019F                     	;# 
  2525  020C                     	;# 
  2526  020E                     	;# 
  2527  0211                     	;# 
  2528  0211                     	;# 
  2529  0212                     	;# 
  2530  0212                     	;# 
  2531  0213                     	;# 
  2532  0213                     	;# 
  2533  0214                     	;# 
  2534  0214                     	;# 
  2535  0215                     	;# 
  2536  0215                     	;# 
  2537  0215                     	;# 
  2538  0215                     	;# 
  2539  0216                     	;# 
  2540  0216                     	;# 
  2541  0217                     	;# 
  2542  0217                     	;# 
  2543  0219                     	;# 
  2544  021A                     	;# 
  2545  021B                     	;# 
  2546  021C                     	;# 
  2547  021D                     	;# 
  2548  021D                     	;# 
  2549  021E                     	;# 
  2550  021F                     	;# 
  2551  028C                     	;# 
  2552  028E                     	;# 
  2553  0291                     	;# 
  2554  0291                     	;# 
  2555  0292                     	;# 
  2556  0293                     	;# 
  2557  0294                     	;# 
  2558  0295                     	;# 
  2559  0295                     	;# 
  2560  0296                     	;# 
  2561  0297                     	;# 
  2562  0298                     	;# 
  2563  029F                     	;# 
  2564  030C                     	;# 
  2565  030E                     	;# 
  2566  0311                     	;# 
  2567  0311                     	;# 
  2568  0312                     	;# 
  2569  0313                     	;# 
  2570  0314                     	;# 
  2571  0315                     	;# 
  2572  0315                     	;# 
  2573  0316                     	;# 
  2574  0317                     	;# 
  2575  0318                     	;# 
  2576  038C                     	;# 
  2577  038E                     	;# 
  2578  0391                     	;# 
  2579  0392                     	;# 
  2580  0393                     	;# 
  2581  0397                     	;# 
  2582  0398                     	;# 
  2583  0399                     	;# 
  2584  039A                     	;# 
  2585  039C                     	;# 
  2586  039D                     	;# 
  2587  039E                     	;# 
  2588  039F                     	;# 
  2589  0411                     	;# 
  2590  0411                     	;# 
  2591  0412                     	;# 
  2592  0413                     	;# 
  2593  0414                     	;# 
  2594  0415                     	;# 
  2595  0416                     	;# 
  2596  0417                     	;# 
  2597  0418                     	;# 
  2598  0418                     	;# 
  2599  0419                     	;# 
  2600  041A                     	;# 
  2601  041B                     	;# 
  2602  041C                     	;# 
  2603  041D                     	;# 
  2604  041E                     	;# 
  2605  041F                     	;# 
  2606  0498                     	;# 
  2607  0498                     	;# 
  2608  0499                     	;# 
  2609  049A                     	;# 
  2610  049B                     	;# 
  2611  049B                     	;# 
  2612  049C                     	;# 
  2613  049D                     	;# 
  2614  049E                     	;# 
  2615  049F                     	;# 
  2616  0617                     	;# 
  2617  0618                     	;# 
  2618  0619                     	;# 
  2619  0619                     	;# 
  2620  061A                     	;# 
  2621  061B                     	;# 
  2622  061C                     	;# 
  2623  061C                     	;# 
  2624  061F                     	;# 
  2625  0691                     	;# 
  2626  0692                     	;# 
  2627  0693                     	;# 
  2628  0694                     	;# 
  2629  0695                     	;# 
  2630  0696                     	;# 
  2631  0697                     	;# 
  2632  0698                     	;# 
  2633  0699                     	;# 
  2634  0711                     	;# 
  2635  0712                     	;# 
  2636  0713                     	;# 
  2637  0714                     	;# 
  2638  0715                     	;# 
  2639  0716                     	;# 
  2640  0717                     	;# 
  2641  0718                     	;# 
  2642  0719                     	;# 
  2643  0891                     	;# 
  2644  0891                     	;# 
  2645  0891                     	;# 
  2646  0891                     	;# 
  2647  0891                     	;# 
  2648  0891                     	;# 
  2649  0892                     	;# 
  2650  0892                     	;# 
  2651  0892                     	;# 
  2652  0893                     	;# 
  2653  0893                     	;# 
  2654  0893                     	;# 
  2655  0893                     	;# 
  2656  0893                     	;# 
  2657  0893                     	;# 
  2658  0894                     	;# 
  2659  0894                     	;# 
  2660  0894                     	;# 
  2661  0895                     	;# 
  2662  0895                     	;# 
  2663  0895                     	;# 
  2664  0896                     	;# 
  2665  0896                     	;# 
  2666  0896                     	;# 
  2667  089B                     	;# 
  2668  0911                     	;# 
  2669  0912                     	;# 
  2670  0913                     	;# 
  2671  0914                     	;# 
  2672  0915                     	;# 
  2673  0916                     	;# 
  2674  0918                     	;# 
  2675  0919                     	;# 
  2676  091A                     	;# 
  2677  091B                     	;# 
  2678  091C                     	;# 
  2679  091D                     	;# 
  2680  091E                     	;# 
  2681  091F                     	;# 
  2682  0E0F                     	;# 
  2683  0E10                     	;# 
  2684  0E11                     	;# 
  2685  0E12                     	;# 
  2686  0E13                     	;# 
  2687  0E14                     	;# 
  2688  0E15                     	;# 
  2689  0E16                     	;# 
  2690  0E17                     	;# 
  2691  0E18                     	;# 
  2692  0E19                     	;# 
  2693  0E1A                     	;# 
  2694  0E1B                     	;# 
  2695  0E1C                     	;# 
  2696  0E1D                     	;# 
  2697  0E1E                     	;# 
  2698  0E1F                     	;# 
  2699  0E20                     	;# 
  2700  0E21                     	;# 
  2701  0E22                     	;# 
  2702  0E24                     	;# 
  2703  0E25                     	;# 
  2704  0E28                     	;# 
  2705  0E29                     	;# 
  2706  0E2A                     	;# 
  2707  0E2B                     	;# 
  2708  0E2C                     	;# 
  2709  0E2D                     	;# 
  2710  0E2E                     	;# 
  2711  0E2F                     	;# 
  2712  0E90                     	;# 
  2713  0E91                     	;# 
  2714  0E92                     	;# 
  2715  0E94                     	;# 
  2716  0E95                     	;# 
  2717  0EA0                     	;# 
  2718  0EA1                     	;# 
  2719  0EA2                     	;# 
  2720  0EA3                     	;# 
  2721  0EA4                     	;# 
  2722  0EA5                     	;# 
  2723  0F0F                     	;# 
  2724  0F10                     	;# 
  2725  0F11                     	;# 
  2726  0F12                     	;# 
  2727  0F13                     	;# 
  2728  0F14                     	;# 
  2729  0F15                     	;# 
  2730  0F16                     	;# 
  2731  0F17                     	;# 
  2732  0F18                     	;# 
  2733  0F19                     	;# 
  2734  0F1A                     	;# 
  2735  0F1B                     	;# 
  2736  0F1C                     	;# 
  2737  0F1D                     	;# 
  2738  0F1E                     	;# 
  2739  0F1F                     	;# 
  2740  0F20                     	;# 
  2741  0F21                     	;# 
  2742  0F22                     	;# 
  2743  0F23                     	;# 
  2744  0F24                     	;# 
  2745  0F25                     	;# 
  2746  0F26                     	;# 
  2747  0F27                     	;# 
  2748  0F28                     	;# 
  2749  0F29                     	;# 
  2750  0F2A                     	;# 
  2751  0F2B                     	;# 
  2752  0F2C                     	;# 
  2753  0F2D                     	;# 
  2754  0F2E                     	;# 
  2755  0F2F                     	;# 
  2756  0F30                     	;# 
  2757  0F31                     	;# 
  2758  0F32                     	;# 
  2759  0F33                     	;# 
  2760  0F34                     	;# 
  2761  0F35                     	;# 
  2762  0F36                     	;# 
  2763  0F37                     	;# 
  2764  0FE4                     	;# 
  2765  0FE5                     	;# 
  2766  0FE6                     	;# 
  2767  0FE7                     	;# 
  2768  0FE8                     	;# 
  2769  0FE9                     	;# 
  2770  0FEA                     	;# 
  2771  0FEB                     	;# 
  2772  0FED                     	;# 
  2773  0FEE                     	;# 
  2774  0FEF                     	;# 
  2775  0000                     	;# 
  2776  0001                     	;# 
  2777  0002                     	;# 
  2778  0003                     	;# 
  2779  0004                     	;# 
  2780  0005                     	;# 
  2781  0006                     	;# 
  2782  0007                     	;# 
  2783  0008                     	;# 
  2784  0009                     	;# 
  2785  000A                     	;# 
  2786  000B                     	;# 
  2787  000C                     	;# 
  2788  000E                     	;# 
  2789  0010                     	;# 
  2790  0011                     	;# 
  2791  0012                     	;# 
  2792  0013                     	;# 
  2793  0014                     	;# 
  2794  0015                     	;# 
  2795  0015                     	;# 
  2796  0016                     	;# 
  2797  0016                     	;# 
  2798  0017                     	;# 
  2799  0018                     	;# 
  2800  0019                     	;# 
  2801  0019                     	;# 
  2802  001A                     	;# 
  2803  001B                     	;# 
  2804  001C                     	;# 
  2805  001D                     	;# 
  2806  001E                     	;# 
  2807  001F                     	;# 
  2808  008C                     	;# 
  2809  008E                     	;# 
  2810  0090                     	;# 
  2811  0091                     	;# 
  2812  0092                     	;# 
  2813  0093                     	;# 
  2814  0094                     	;# 
  2815  0097                     	;# 
  2816  009B                     	;# 
  2817  009B                     	;# 
  2818  009C                     	;# 
  2819  009D                     	;# 
  2820  009E                     	;# 
  2821  009F                     	;# 
  2822  010C                     	;# 
  2823  010E                     	;# 
  2824  0111                     	;# 
  2825  0112                     	;# 
  2826  0113                     	;# 
  2827  0114                     	;# 
  2828  0115                     	;# 
  2829  0116                     	;# 
  2830  0117                     	;# 
  2831  0118                     	;# 
  2832  0119                     	;# 
  2833  018C                     	;# 
  2834  018E                     	;# 
  2835  0197                     	;# 
  2836  0199                     	;# 
  2837  0199                     	;# 
  2838  0199                     	;# 
  2839  019A                     	;# 
  2840  019A                     	;# 
  2841  019A                     	;# 
  2842  019B                     	;# 
  2843  019B                     	;# 
  2844  019B                     	;# 
  2845  019B                     	;# 
  2846  019B                     	;# 
  2847  019C                     	;# 
  2848  019C                     	;# 
  2849  019C                     	;# 
  2850  019D                     	;# 
  2851  019D                     	;# 
  2852  019D                     	;# 
  2853  019E                     	;# 
  2854  019E                     	;# 
  2855  019E                     	;# 
  2856  019F                     	;# 
  2857  019F                     	;# 
  2858  019F                     	;# 
  2859  019F                     	;# 
  2860  019F                     	;# 
  2861  020C                     	;# 
  2862  020E                     	;# 
  2863  0211                     	;# 
  2864  0211                     	;# 
  2865  0212                     	;# 
  2866  0212                     	;# 
  2867  0213                     	;# 
  2868  0213                     	;# 
  2869  0214                     	;# 
  2870  0214                     	;# 
  2871  0215                     	;# 
  2872  0215                     	;# 
  2873  0215                     	;# 
  2874  0215                     	;# 
  2875  0216                     	;# 
  2876  0216                     	;# 
  2877  0217                     	;# 
  2878  0217                     	;# 
  2879  0219                     	;# 
  2880  021A                     	;# 
  2881  021B                     	;# 
  2882  021C                     	;# 
  2883  021D                     	;# 
  2884  021D                     	;# 
  2885  021E                     	;# 
  2886  021F                     	;# 
  2887  028C                     	;# 
  2888  028E                     	;# 
  2889  0291                     	;# 
  2890  0291                     	;# 
  2891  0292                     	;# 
  2892  0293                     	;# 
  2893  0294                     	;# 
  2894  0295                     	;# 
  2895  0295                     	;# 
  2896  0296                     	;# 
  2897  0297                     	;# 
  2898  0298                     	;# 
  2899  029F                     	;# 
  2900  030C                     	;# 
  2901  030E                     	;# 
  2902  0311                     	;# 
  2903  0311                     	;# 
  2904  0312                     	;# 
  2905  0313                     	;# 
  2906  0314                     	;# 
  2907  0315                     	;# 
  2908  0315                     	;# 
  2909  0316                     	;# 
  2910  0317                     	;# 
  2911  0318                     	;# 
  2912  038C                     	;# 
  2913  038E                     	;# 
  2914  0391                     	;# 
  2915  0392                     	;# 
  2916  0393                     	;# 
  2917  0397                     	;# 
  2918  0398                     	;# 
  2919  0399                     	;# 
  2920  039A                     	;# 
  2921  039C                     	;# 
  2922  039D                     	;# 
  2923  039E                     	;# 
  2924  039F                     	;# 
  2925  0411                     	;# 
  2926  0411                     	;# 
  2927  0412                     	;# 
  2928  0413                     	;# 
  2929  0414                     	;# 
  2930  0415                     	;# 
  2931  0416                     	;# 
  2932  0417                     	;# 
  2933  0418                     	;# 
  2934  0418                     	;# 
  2935  0419                     	;# 
  2936  041A                     	;# 
  2937  041B                     	;# 
  2938  041C                     	;# 
  2939  041D                     	;# 
  2940  041E                     	;# 
  2941  041F                     	;# 
  2942  0498                     	;# 
  2943  0498                     	;# 
  2944  0499                     	;# 
  2945  049A                     	;# 
  2946  049B                     	;# 
  2947  049B                     	;# 
  2948  049C                     	;# 
  2949  049D                     	;# 
  2950  049E                     	;# 
  2951  049F                     	;# 
  2952  0617                     	;# 
  2953  0618                     	;# 
  2954  0619                     	;# 
  2955  0619                     	;# 
  2956  061A                     	;# 
  2957  061B                     	;# 
  2958  061C                     	;# 
  2959  061C                     	;# 
  2960  061F                     	;# 
  2961  0691                     	;# 
  2962  0692                     	;# 
  2963  0693                     	;# 
  2964  0694                     	;# 
  2965  0695                     	;# 
  2966  0696                     	;# 
  2967  0697                     	;# 
  2968  0698                     	;# 
  2969  0699                     	;# 
  2970  0711                     	;# 
  2971  0712                     	;# 
  2972  0713                     	;# 
  2973  0714                     	;# 
  2974  0715                     	;# 
  2975  0716                     	;# 
  2976  0717                     	;# 
  2977  0718                     	;# 
  2978  0719                     	;# 
  2979  0891                     	;# 
  2980  0891                     	;# 
  2981  0891                     	;# 
  2982  0891                     	;# 
  2983  0891                     	;# 
  2984  0891                     	;# 
  2985  0892                     	;# 
  2986  0892                     	;# 
  2987  0892                     	;# 
  2988  0893                     	;# 
  2989  0893                     	;# 
  2990  0893                     	;# 
  2991  0893                     	;# 
  2992  0893                     	;# 
  2993  0893                     	;# 
  2994  0894                     	;# 
  2995  0894                     	;# 
  2996  0894                     	;# 
  2997  0895                     	;# 
  2998  0895                     	;# 
  2999  0895                     	;# 
  3000  0896                     	;# 
  3001  0896                     	;# 
  3002  0896                     	;# 
  3003  089B                     	;# 
  3004  0911                     	;# 
  3005  0912                     	;# 
  3006  0913                     	;# 
  3007  0914                     	;# 
  3008  0915                     	;# 
  3009  0916                     	;# 
  3010  0918                     	;# 
  3011  0919                     	;# 
  3012  091A                     	;# 
  3013  091B                     	;# 
  3014  091C                     	;# 
  3015  091D                     	;# 
  3016  091E                     	;# 
  3017  091F                     	;# 
  3018  0E0F                     	;# 
  3019  0E10                     	;# 
  3020  0E11                     	;# 
  3021  0E12                     	;# 
  3022  0E13                     	;# 
  3023  0E14                     	;# 
  3024  0E15                     	;# 
  3025  0E16                     	;# 
  3026  0E17                     	;# 
  3027  0E18                     	;# 
  3028  0E19                     	;# 
  3029  0E1A                     	;# 
  3030  0E1B                     	;# 
  3031  0E1C                     	;# 
  3032  0E1D                     	;# 
  3033  0E1E                     	;# 
  3034  0E1F                     	;# 
  3035  0E20                     	;# 
  3036  0E21                     	;# 
  3037  0E22                     	;# 
  3038  0E24                     	;# 
  3039  0E25                     	;# 
  3040  0E28                     	;# 
  3041  0E29                     	;# 
  3042  0E2A                     	;# 
  3043  0E2B                     	;# 
  3044  0E2C                     	;# 
  3045  0E2D                     	;# 
  3046  0E2E                     	;# 
  3047  0E2F                     	;# 
  3048  0E90                     	;# 
  3049  0E91                     	;# 
  3050  0E92                     	;# 
  3051  0E94                     	;# 
  3052  0E95                     	;# 
  3053  0EA0                     	;# 
  3054  0EA1                     	;# 
  3055  0EA2                     	;# 
  3056  0EA3                     	;# 
  3057  0EA4                     	;# 
  3058  0EA5                     	;# 
  3059  0F0F                     	;# 
  3060  0F10                     	;# 
  3061  0F11                     	;# 
  3062  0F12                     	;# 
  3063  0F13                     	;# 
  3064  0F14                     	;# 
  3065  0F15                     	;# 
  3066  0F16                     	;# 
  3067  0F17                     	;# 
  3068  0F18                     	;# 
  3069  0F19                     	;# 
  3070  0F1A                     	;# 
  3071  0F1B                     	;# 
  3072  0F1C                     	;# 
  3073  0F1D                     	;# 
  3074  0F1E                     	;# 
  3075  0F1F                     	;# 
  3076  0F20                     	;# 
  3077  0F21                     	;# 
  3078  0F22                     	;# 
  3079  0F23                     	;# 
  3080  0F24                     	;# 
  3081  0F25                     	;# 
  3082  0F26                     	;# 
  3083  0F27                     	;# 
  3084  0F28                     	;# 
  3085  0F29                     	;# 
  3086  0F2A                     	;# 
  3087  0F2B                     	;# 
  3088  0F2C                     	;# 
  3089  0F2D                     	;# 
  3090  0F2E                     	;# 
  3091  0F2F                     	;# 
  3092  0F30                     	;# 
  3093  0F31                     	;# 
  3094  0F32                     	;# 
  3095  0F33                     	;# 
  3096  0F34                     	;# 
  3097  0F35                     	;# 
  3098  0F36                     	;# 
  3099  0F37                     	;# 
  3100  0FE4                     	;# 
  3101  0FE5                     	;# 
  3102  0FE6                     	;# 
  3103  0FE7                     	;# 
  3104  0FE8                     	;# 
  3105  0FE9                     	;# 
  3106  0FEA                     	;# 
  3107  0FEB                     	;# 
  3108  0FED                     	;# 
  3109  0FEE                     	;# 
  3110  0FEF                     	;# 
  3111  0000                     	;# 
  3112  0001                     	;# 
  3113  0002                     	;# 
  3114  0003                     	;# 
  3115  0004                     	;# 
  3116  0005                     	;# 
  3117  0006                     	;# 
  3118  0007                     	;# 
  3119  0008                     	;# 
  3120  0009                     	;# 
  3121  000A                     	;# 
  3122  000B                     	;# 
  3123  000C                     	;# 
  3124  000E                     	;# 
  3125  0010                     	;# 
  3126  0011                     	;# 
  3127  0012                     	;# 
  3128  0013                     	;# 
  3129  0014                     	;# 
  3130  0015                     	;# 
  3131  0015                     	;# 
  3132  0016                     	;# 
  3133  0016                     	;# 
  3134  0017                     	;# 
  3135  0018                     	;# 
  3136  0019                     	;# 
  3137  0019                     	;# 
  3138  001A                     	;# 
  3139  001B                     	;# 
  3140  001C                     	;# 
  3141  001D                     	;# 
  3142  001E                     	;# 
  3143  001F                     	;# 
  3144  008C                     	;# 
  3145  008E                     	;# 
  3146  0090                     	;# 
  3147  0091                     	;# 
  3148  0092                     	;# 
  3149  0093                     	;# 
  3150  0094                     	;# 
  3151  0097                     	;# 
  3152  009B                     	;# 
  3153  009B                     	;# 
  3154  009C                     	;# 
  3155  009D                     	;# 
  3156  009E                     	;# 
  3157  009F                     	;# 
  3158  010C                     	;# 
  3159  010E                     	;# 
  3160  0111                     	;# 
  3161  0112                     	;# 
  3162  0113                     	;# 
  3163  0114                     	;# 
  3164  0115                     	;# 
  3165  0116                     	;# 
  3166  0117                     	;# 
  3167  0118                     	;# 
  3168  0119                     	;# 
  3169  018C                     	;# 
  3170  018E                     	;# 
  3171  0197                     	;# 
  3172  0199                     	;# 
  3173  0199                     	;# 
  3174  0199                     	;# 
  3175  019A                     	;# 
  3176  019A                     	;# 
  3177  019A                     	;# 
  3178  019B                     	;# 
  3179  019B                     	;# 
  3180  019B                     	;# 
  3181  019B                     	;# 
  3182  019B                     	;# 
  3183  019C                     	;# 
  3184  019C                     	;# 
  3185  019C                     	;# 
  3186  019D                     	;# 
  3187  019D                     	;# 
  3188  019D                     	;# 
  3189  019E                     	;# 
  3190  019E                     	;# 
  3191  019E                     	;# 
  3192  019F                     	;# 
  3193  019F                     	;# 
  3194  019F                     	;# 
  3195  019F                     	;# 
  3196  019F                     	;# 
  3197  020C                     	;# 
  3198  020E                     	;# 
  3199  0211                     	;# 
  3200  0211                     	;# 
  3201  0212                     	;# 
  3202  0212                     	;# 
  3203  0213                     	;# 
  3204  0213                     	;# 
  3205  0214                     	;# 
  3206  0214                     	;# 
  3207  0215                     	;# 
  3208  0215                     	;# 
  3209  0215                     	;# 
  3210  0215                     	;# 
  3211  0216                     	;# 
  3212  0216                     	;# 
  3213  0217                     	;# 
  3214  0217                     	;# 
  3215  0219                     	;# 
  3216  021A                     	;# 
  3217  021B                     	;# 
  3218  021C                     	;# 
  3219  021D                     	;# 
  3220  021D                     	;# 
  3221  021E                     	;# 
  3222  021F                     	;# 
  3223  028C                     	;# 
  3224  028E                     	;# 
  3225  0291                     	;# 
  3226  0291                     	;# 
  3227  0292                     	;# 
  3228  0293                     	;# 
  3229  0294                     	;# 
  3230  0295                     	;# 
  3231  0295                     	;# 
  3232  0296                     	;# 
  3233  0297                     	;# 
  3234  0298                     	;# 
  3235  029F                     	;# 
  3236  030C                     	;# 
  3237  030E                     	;# 
  3238  0311                     	;# 
  3239  0311                     	;# 
  3240  0312                     	;# 
  3241  0313                     	;# 
  3242  0314                     	;# 
  3243  0315                     	;# 
  3244  0315                     	;# 
  3245  0316                     	;# 
  3246  0317                     	;# 
  3247  0318                     	;# 
  3248  038C                     	;# 
  3249  038E                     	;# 
  3250  0391                     	;# 
  3251  0392                     	;# 
  3252  0393                     	;# 
  3253  0397                     	;# 
  3254  0398                     	;# 
  3255  0399                     	;# 
  3256  039A                     	;# 
  3257  039C                     	;# 
  3258  039D                     	;# 
  3259  039E                     	;# 
  3260  039F                     	;# 
  3261  0411                     	;# 
  3262  0411                     	;# 
  3263  0412                     	;# 
  3264  0413                     	;# 
  3265  0414                     	;# 
  3266  0415                     	;# 
  3267  0416                     	;# 
  3268  0417                     	;# 
  3269  0418                     	;# 
  3270  0418                     	;# 
  3271  0419                     	;# 
  3272  041A                     	;# 
  3273  041B                     	;# 
  3274  041C                     	;# 
  3275  041D                     	;# 
  3276  041E                     	;# 
  3277  041F                     	;# 
  3278  0498                     	;# 
  3279  0498                     	;# 
  3280  0499                     	;# 
  3281  049A                     	;# 
  3282  049B                     	;# 
  3283  049B                     	;# 
  3284  049C                     	;# 
  3285  049D                     	;# 
  3286  049E                     	;# 
  3287  049F                     	;# 
  3288  0617                     	;# 
  3289  0618                     	;# 
  3290  0619                     	;# 
  3291  0619                     	;# 
  3292  061A                     	;# 
  3293  061B                     	;# 
  3294  061C                     	;# 
  3295  061C                     	;# 
  3296  061F                     	;# 
  3297  0691                     	;# 
  3298  0692                     	;# 
  3299  0693                     	;# 
  3300  0694                     	;# 
  3301  0695                     	;# 
  3302  0696                     	;# 
  3303  0697                     	;# 
  3304  0698                     	;# 
  3305  0699                     	;# 
  3306  0711                     	;# 
  3307  0712                     	;# 
  3308  0713                     	;# 
  3309  0714                     	;# 
  3310  0715                     	;# 
  3311  0716                     	;# 
  3312  0717                     	;# 
  3313  0718                     	;# 
  3314  0719                     	;# 
  3315  0891                     	;# 
  3316  0891                     	;# 
  3317  0891                     	;# 
  3318  0891                     	;# 
  3319  0891                     	;# 
  3320  0891                     	;# 
  3321  0892                     	;# 
  3322  0892                     	;# 
  3323  0892                     	;# 
  3324  0893                     	;# 
  3325  0893                     	;# 
  3326  0893                     	;# 
  3327  0893                     	;# 
  3328  0893                     	;# 
  3329  0893                     	;# 
  3330  0894                     	;# 
  3331  0894                     	;# 
  3332  0894                     	;# 
  3333  0895                     	;# 
  3334  0895                     	;# 
  3335  0895                     	;# 
  3336  0896                     	;# 
  3337  0896                     	;# 
  3338  0896                     	;# 
  3339  089B                     	;# 
  3340  0911                     	;# 
  3341  0912                     	;# 
  3342  0913                     	;# 
  3343  0914                     	;# 
  3344  0915                     	;# 
  3345  0916                     	;# 
  3346  0918                     	;# 
  3347  0919                     	;# 
  3348  091A                     	;# 
  3349  091B                     	;# 
  3350  091C                     	;# 
  3351  091D                     	;# 
  3352  091E                     	;# 
  3353  091F                     	;# 
  3354  0E0F                     	;# 
  3355  0E10                     	;# 
  3356  0E11                     	;# 
  3357  0E12                     	;# 
  3358  0E13                     	;# 
  3359  0E14                     	;# 
  3360  0E15                     	;# 
  3361  0E16                     	;# 
  3362  0E17                     	;# 
  3363  0E18                     	;# 
  3364  0E19                     	;# 
  3365  0E1A                     	;# 
  3366  0E1B                     	;# 
  3367  0E1C                     	;# 
  3368  0E1D                     	;# 
  3369  0E1E                     	;# 
  3370  0E1F                     	;# 
  3371  0E20                     	;# 
  3372  0E21                     	;# 
  3373  0E22                     	;# 
  3374  0E24                     	;# 
  3375  0E25                     	;# 
  3376  0E28                     	;# 
  3377  0E29                     	;# 
  3378  0E2A                     	;# 
  3379  0E2B                     	;# 
  3380  0E2C                     	;# 
  3381  0E2D                     	;# 
  3382  0E2E                     	;# 
  3383  0E2F                     	;# 
  3384  0E90                     	;# 
  3385  0E91                     	;# 
  3386  0E92                     	;# 
  3387  0E94                     	;# 
  3388  0E95                     	;# 
  3389  0EA0                     	;# 
  3390  0EA1                     	;# 
  3391  0EA2                     	;# 
  3392  0EA3                     	;# 
  3393  0EA4                     	;# 
  3394  0EA5                     	;# 
  3395  0F0F                     	;# 
  3396  0F10                     	;# 
  3397  0F11                     	;# 
  3398  0F12                     	;# 
  3399  0F13                     	;# 
  3400  0F14                     	;# 
  3401  0F15                     	;# 
  3402  0F16                     	;# 
  3403  0F17                     	;# 
  3404  0F18                     	;# 
  3405  0F19                     	;# 
  3406  0F1A                     	;# 
  3407  0F1B                     	;# 
  3408  0F1C                     	;# 
  3409  0F1D                     	;# 
  3410  0F1E                     	;# 
  3411  0F1F                     	;# 
  3412  0F20                     	;# 
  3413  0F21                     	;# 
  3414  0F22                     	;# 
  3415  0F23                     	;# 
  3416  0F24                     	;# 
  3417  0F25                     	;# 
  3418  0F26                     	;# 
  3419  0F27                     	;# 
  3420  0F28                     	;# 
  3421  0F29                     	;# 
  3422  0F2A                     	;# 
  3423  0F2B                     	;# 
  3424  0F2C                     	;# 
  3425  0F2D                     	;# 
  3426  0F2E                     	;# 
  3427  0F2F                     	;# 
  3428  0F30                     	;# 
  3429  0F31                     	;# 
  3430  0F32                     	;# 
  3431  0F33                     	;# 
  3432  0F34                     	;# 
  3433  0F35                     	;# 
  3434  0F36                     	;# 
  3435  0F37                     	;# 
  3436  0FE4                     	;# 
  3437  0FE5                     	;# 
  3438  0FE6                     	;# 
  3439  0FE7                     	;# 
  3440  0FE8                     	;# 
  3441  0FE9                     	;# 
  3442  0FEA                     	;# 
  3443  0FEB                     	;# 
  3444  0FED                     	;# 
  3445  0FEE                     	;# 
  3446  0FEF                     	;_stage_stash
  3447                           
  3448                           	psect	idataBANK0
  3449  04F9                     __pidataBANK0:	
  3450                           
  3451                           ;initializer for InitWigwagPattern@F436
  3452  04F9  3401               	retlw	1
  3453  04FA  3400               	retlw	0
  3454  04FB  3401               	retlw	1
  3455  04FC  3400               	retlw	0
  3456                           
  3457                           	psect	idataBANK1
  3458  04FD                     __pidataBANK1:	
  3459                           
  3460                           ;initializer for InitWigwagPattern@F439
  3461  04FD  3400               	retlw	0
  3462  04FE  3401               	retlw	1
  3463  04FF  3400               	retlw	0
  3464  0500  3401               	retlw	1
  3465                           
  3466                           	psect	nvBANK0
  3467  0054                     __pnvBANK0:	
  3468  0054                     _TMR1_InterruptHandler:	
  3469  0054                     	ds	2
  3470  0056                     _timer1ReloadVal:	
  3471  0056                     	ds	2
  3472  0058                     _IOCCF0_InterruptHandler:	
  3473  0058                     	ds	2
  3474  000E                     _PORTCbits	set	14
  3475  001C                     _T1GCONbits	set	28
  3476  001B                     _T1CONbits	set	27
  3477  0019                     _TMR1L	set	25
  3478  001A                     _TMR1H	set	26
  3479  001C                     _T1GCON	set	28
  3480  0011                     _PIR1bits	set	17
  3481  000B                     _INTCONbits	set	11
  3482  0010                     _PIR0bits	set	16
  3483  0091                     _PIE1bits	set	145
  3484  0090                     _PIE0bits	set	144
  3485  008E                     _TRISC	set	142
  3486  008C                     _TRISA	set	140
  3487  0097                     _WDTCON	set	151
  3488  010E                     _LATCbits	set	270
  3489  010E                     _LATC	set	270
  3490  010C                     _LATA	set	268
  3491  018C                     _ANSELA	set	396
  3492  018E                     _ANSELC	set	398
  3493  020E                     _WPUC	set	526
  3494  020C                     _WPUA	set	524
  3495  028E                     _ODCONC	set	654
  3496  028C                     _ODCONA	set	652
  3497  030E                     _SLRCONC	set	782
  3498  030C                     _SLRCONA	set	780
  3499  0397                     _IOCCPbits	set	919
  3500  0398                     _IOCCNbits	set	920
  3501  0399                     _IOCCFbits	set	921
  3502  038E                     _INLVLC	set	910
  3503  038C                     _INLVLA	set	908
  3504  0916                     _PMD5	set	2326
  3505  0915                     _PMD4	set	2325
  3506  0914                     _PMD3	set	2324
  3507  0913                     _PMD2	set	2323
  3508  0912                     _PMD1	set	2322
  3509  0911                     _PMD0	set	2321
  3510  091E                     _OSCTUNE	set	2334
  3511  091F                     _OSCFRQ	set	2335
  3512  091D                     _OSCEN	set	2333
  3513  091B                     _OSCCON3	set	2331
  3514  0919                     _OSCCON1	set	2329
  3515                           
  3516                           ; #config settings
  3517  0000                     
  3518                           	psect	cinit
  3519  002A                     start_initialization:	
  3520  002A                     __initialization:		;BIGRAM
  3521                           
  3522                           ; Initialize objects allocated to BANK0
  3523  002A  3184  24F9  3180   	fcall	__pidataBANK0	;fetch initializer
  3524  002D  00DA               	movwf	__pdataBANK0& (0+127)
  3525  002E  3184  24FA  3180   	fcall	__pidataBANK0+1	;fetch initializer
  3526  0031  00DB               	movwf	(__pdataBANK0+1)& (0+127)
  3527  0032  3184  24FB  3180   	fcall	__pidataBANK0+2	;fetch initializer
  3528  0035  00DC               	movwf	(__pdataBANK0+2)& (0+127)
  3529  0036  3184  24FC  3180   	fcall	__pidataBANK0+3	;fetch initializer
  3530  0039  00DD               	movwf	(__pdataBANK0+3)& (0+127)
  3531                           
  3532                           ; Initialize objects allocated to BANK1
  3533  003A  0021               	movlb	1	; select bank1
  3534  003B  3184  24FD  3180   	fcall	__pidataBANK1	;fetch initializer
  3535  003E  00B8               	movwf	__pdataBANK1& (0+127)
  3536  003F  3184  24FE  3180   	fcall	__pidataBANK1+1	;fetch initializer
  3537  0042  00B9               	movwf	(__pdataBANK1+1)& (0+127)
  3538  0043  3184  24FF  3180   	fcall	__pidataBANK1+2	;fetch initializer
  3539  0046  00BA               	movwf	(__pdataBANK1+2)& (0+127)
  3540  0047  3185  2500  3180   	fcall	__pidataBANK1+3	;fetch initializer
  3541  004A  00BB               	movwf	(__pdataBANK1+3)& (0+127)
  3542                           
  3543                           ; Clear objects allocated to BIGRAM
  3544  004B  30B0               	movlw	low (0+8880)
  3545  004C  0084               	movwf	4
  3546  004D  3022               	movlw	high (0+8880)
  3547  004E  0085               	movwf	5
  3548  004F  3040               	movlw	64
  3549  0050  00FE               	movwf	btemp
  3550  0051  3001               	movlw	1
  3551  0052  00FF               	movwf	btemp+1
  3552  0053  3184  24C1  3180   	fcall	clear_ram0
  3553                           
  3554                           ; Clear objects allocated to COMMON
  3555  0056  01FA               	clrf	__pbssCOMMON& (0+127)
  3556  0057  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  3557                           
  3558                           ; Clear objects allocated to BANK0
  3559  0058  3041               	movlw	low __pbssBANK0
  3560  0059  0084               	movwf	4
  3561  005A  3000               	movlw	high __pbssBANK0
  3562  005B  0085               	movwf	5
  3563  005C  3013               	movlw	19
  3564  005D  00FE               	movwf	btemp
  3565  005E  3000               	movlw	0
  3566  005F  00FF               	movwf	btemp+1
  3567  0060  3184  24C1  3180   	fcall	clear_ram0
  3568                           
  3569                           ; Clear objects allocated to BANK1
  3570  0063  01B4               	clrf	__pbssBANK1& (0+127)
  3571  0064  01B5               	clrf	(__pbssBANK1+1)& (0+127)
  3572  0065  01B6               	clrf	(__pbssBANK1+2)& (0+127)
  3573  0066  01B7               	clrf	(__pbssBANK1+3)& (0+127)
  3574  0067                     end_of_initialization:	
  3575                           ;End of C runtime variable initialization code
  3576                           
  3577  0067                     __end_of__initialization:	
  3578  0067  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3579  0068  0020               	movlb	0
  3580  0069  3184  2C4D         	ljmp	_main	;jump to C main() function
  3581                           
  3582                           	psect	bssCOMMON
  3583  007A                     __pbssCOMMON:	
  3584  007A                     _last_pc_input_state:	
  3585  007A                     	ds	1
  3586  007B                     _cur_pc_input_state:	
  3587  007B                     	ds	1
  3588                           
  3589                           	psect	bssBANK0
  3590  0041                     __pbssBANK0:	
  3591  0041                     _start_time:	
  3592  0041                     	ds	2
  3593  0043                     _current_stage:	
  3594  0043                     	ds	2
  3595  0045                     _stage_list_iter:	
  3596  0045                     	ds	2
  3597  0047                     _cur_sec:	
  3598  0047                     	ds	2
  3599  0049                     _cur_hsec:	
  3600  0049                     	ds	2
  3601  004B                     _cur_ms:	
  3602  004B                     	ds	2
  3603  004D                     _temp_ms:	
  3604  004D                     	ds	2
  3605  004F                     _update_stage:	
  3606  004F                     	ds	1
  3607  0050                     _ts_trigger:	
  3608  0050                     	ds	1
  3609  0051                     _Wigwag:	
  3610  0051                     	ds	3
  3611                           
  3612                           	psect	dataBANK0
  3613  005A                     __pdataBANK0:	
  3614  005A                     InitWigwagPattern@F436:	
  3615  005A                     	ds	4
  3616                           
  3617                           	psect	bssBANK1
  3618  00B4                     __pbssBANK1:	
  3619  00B4                     NewStage@F411:	
  3620  00B4                     	ds	4
  3621                           
  3622                           	psect	dataBANK1
  3623  00B8                     __pdataBANK1:	
  3624  00B8                     InitWigwagPattern@F439:	
  3625  00B8                     	ds	4
  3626                           
  3627                           	psect	clrtext
  3628  04C1                     clear_ram0:	
  3629                           ;	Called with FSR0 containing the base address, and
  3630                           ;	btemp/btemp+1 has the size to clear
  3631                           
  3632  04C1  0064               	clrwdt	;clear the watchdog before getting into this loop
  3633  04C2                     clrloop0:	
  3634  04C2  0180               	clrf	0	;clear RAM location pointed to by FSR
  3635  04C3  3101               	addfsr 0,1
  3636  04C4  3001               	movlw	1
  3637  04C5  02FE               	subwf	btemp,f
  3638  04C6  3000               	movlw	0
  3639  04C7  3BFF               	subwfb	btemp+1,f
  3640  04C8  087F               	movf	btemp+1,w
  3641  04C9  047E               	iorwf	btemp,w
  3642  04CA  1D03               	skipz
  3643  04CB  2CC2               	goto	clrloop0	;have we reached the end yet?
  3644  04CC  3400               	retlw	0	;all done for this memory range, return
  3645                           
  3646                           	psect	cstackBANK1
  3647  00A0                     __pcstackBANK1:	
  3648  00A0                     InitWigwagPattern@left_side_states:	
  3649                           
  3650                           ; 4 bytes @ 0x0
  3651  00A0                     	ds	4
  3652  00A4                     InitWigwagPattern@right_side_states:	
  3653                           
  3654                           ; 4 bytes @ 0x4
  3655  00A4                     	ds	4
  3656  00A8                     InitWigwagPattern@left_side_on:	
  3657                           
  3658                           ; 2 bytes @ 0x8
  3659  00A8                     	ds	2
  3660  00AA                     InitWigwagPattern@right_side_on:	
  3661                           
  3662                           ; 2 bytes @ 0xA
  3663  00AA                     	ds	2
  3664  00AC                     InitWigwagPattern@i:	
  3665                           
  3666                           ; 2 bytes @ 0xC
  3667  00AC                     	ds	2
  3668  00AE                     InitWigwagPattern@i_770:	
  3669                           
  3670                           ; 2 bytes @ 0xE
  3671  00AE                     	ds	2
  3672  00B0                     InitWigwagPattern@off:	
  3673                           
  3674                           ; 2 bytes @ 0x10
  3675  00B0                     	ds	2
  3676  00B2                     InitWigwagPattern@head:	
  3677                           
  3678                           ; 2 bytes @ 0x12
  3679  00B2                     	ds	2
  3680                           
  3681                           	psect	cstackCOMMON
  3682  0070                     __pcstackCOMMON:	
  3683  0070                     ?_PMD_Initialize:	
  3684  0070                     ?_PIN_MANAGER_Initialize:	
  3685                           ; 1 bytes @ 0x0
  3686                           
  3687  0070                     ?_OSCILLATOR_Initialize:	
  3688                           ; 1 bytes @ 0x0
  3689                           
  3690  0070                     ?_WDT_Initialize:	
  3691                           ; 1 bytes @ 0x0
  3692                           
  3693  0070                     ?_TMR1_Initialize:	
  3694                           ; 1 bytes @ 0x0
  3695                           
  3696  0070                     ?_IOCCF0_DefaultInterruptHandler:	
  3697                           ; 1 bytes @ 0x0
  3698                           
  3699  0070                     ??_IOCCF0_DefaultInterruptHandler:	
  3700                           ; 1 bytes @ 0x0
  3701                           
  3702  0070                     ?_IOCCF0_ISR:	
  3703                           ; 1 bytes @ 0x0
  3704                           
  3705  0070                     ??_IOCCF0_ISR:	
  3706                           ; 1 bytes @ 0x0
  3707                           
  3708  0070                     ?_TMR1_ISR:	
  3709                           ; 1 bytes @ 0x0
  3710                           
  3711  0070                     ?_TMR1_DefaultInterruptHandler:	
  3712                           ; 1 bytes @ 0x0
  3713                           
  3714  0070                     ??_TMR1_DefaultInterruptHandler:	
  3715                           ; 1 bytes @ 0x0
  3716                           
  3717  0070                     ?_SetOutputs:	
  3718                           ; 1 bytes @ 0x0
  3719                           
  3720  0070                     ?_PatternCycleInputChanged:	
  3721                           ; 1 bytes @ 0x0
  3722                           
  3723  0070                     ?_SYSTEM_Initialize:	
  3724                           ; 1 bytes @ 0x0
  3725                           
  3726  0070                     ?_PIN_MANAGER_IOC:	
  3727                           ; 1 bytes @ 0x0
  3728                           
  3729  0070                     ??_PIN_MANAGER_IOC:	
  3730                           ; 1 bytes @ 0x0
  3731                           
  3732  0070                     ?_INTERRUPT_InterruptManager:	
  3733                           ; 1 bytes @ 0x0
  3734                           
  3735  0070                     ?_TMR1_StartTimer:	
  3736                           ; 1 bytes @ 0x0
  3737                           
  3738  0070                     ?_TMR1_WriteTimer:	
  3739                           ; 1 bytes @ 0x0
  3740                           
  3741  0070                     ?_setup:	
  3742                           ; 1 bytes @ 0x0
  3743                           
  3744  0070                     ?_main:	
  3745                           ; 1 bytes @ 0x0
  3746                           
  3747  0070                     TMR1_WriteTimer@timerVal:	
  3748                           ; 1 bytes @ 0x0
  3749                           
  3750                           
  3751                           ; 2 bytes @ 0x0
  3752  0070                     	ds	2
  3753  0072                     ??_PMD_Initialize:	
  3754  0072                     ??_OSCILLATOR_Initialize:	
  3755                           ; 1 bytes @ 0x2
  3756                           
  3757  0072                     ??_WDT_Initialize:	
  3758                           ; 1 bytes @ 0x2
  3759                           
  3760  0072                     ?_IOCCF0_SetInterruptHandler:	
  3761                           ; 1 bytes @ 0x2
  3762                           
  3763  0072                     ??_TMR1_ISR:	
  3764                           ; 1 bytes @ 0x2
  3765                           
  3766  0072                     ?_TMR1_SetInterruptHandler:	
  3767                           ; 1 bytes @ 0x2
  3768                           
  3769  0072                     ??_PatternCycleInputChanged:	
  3770                           ; 1 bytes @ 0x2
  3771                           
  3772  0072                     ??_INTERRUPT_InterruptManager:	
  3773                           ; 1 bytes @ 0x2
  3774                           
  3775  0072                     ??_TMR1_StartTimer:	
  3776                           ; 1 bytes @ 0x2
  3777                           
  3778  0072                     ??_TMR1_WriteTimer:	
  3779                           ; 1 bytes @ 0x2
  3780                           
  3781  0072                     ?_SetLight:	
  3782                           ; 1 bytes @ 0x2
  3783                           
  3784  0072                     ?_AssignLightStates:	
  3785                           ; 1 bytes @ 0x2
  3786                           
  3787  0072                     SetLight@state:	
  3788                           ; 1 bytes @ 0x2
  3789                           
  3790  0072                     IOCCF0_SetInterruptHandler@InterruptHandler:	
  3791                           ; 1 bytes @ 0x2
  3792                           
  3793  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  3794                           ; 2 bytes @ 0x2
  3795                           
  3796  0072                     AssignLightStates@stage:	
  3797                           ; 2 bytes @ 0x2
  3798                           
  3799                           
  3800                           ; 2 bytes @ 0x2
  3801  0072                     	ds	1
  3802  0073                     ??_SetLight:	
  3803                           
  3804                           ; 1 bytes @ 0x3
  3805  0073                     	ds	1
  3806  0074                     ??_PIN_MANAGER_Initialize:	
  3807  0074                     ??_TMR1_Initialize:	
  3808                           ; 1 bytes @ 0x4
  3809                           
  3810  0074                     ??_IOCCF0_SetInterruptHandler:	
  3811                           ; 1 bytes @ 0x4
  3812                           
  3813  0074                     ??_TMR1_SetInterruptHandler:	
  3814                           ; 1 bytes @ 0x4
  3815                           
  3816  0074                     ??_SYSTEM_Initialize:	
  3817                           ; 1 bytes @ 0x4
  3818                           
  3819  0074                     AssignLightStates@states:	
  3820                           ; 1 bytes @ 0x4
  3821                           
  3822  0074                     PatternCycleInputChanged@delay_count:	
  3823                           ; 1 bytes @ 0x4
  3824                           
  3825                           
  3826                           ; 2 bytes @ 0x4
  3827  0074                     	ds	1
  3828  0075                     ??_AssignLightStates:	
  3829  0075                     SetLight@light:	
  3830                           ; 1 bytes @ 0x5
  3831                           
  3832                           
  3833                           ; 1 bytes @ 0x5
  3834  0075                     	ds	1
  3835  0076                     ??_SetOutputs:	
  3836  0076                     ?_FlashPattern:	
  3837                           ; 1 bytes @ 0x6
  3838                           
  3839  0076                     FlashPattern@pattern:	
  3840                           ; 1 bytes @ 0x6
  3841                           
  3842                           
  3843                           ; 2 bytes @ 0x6
  3844  0076                     	ds	1
  3845  0077                     ?_NewStage:	
  3846  0077                     SetOutputs@state:	
  3847                           ; 2 bytes @ 0x7
  3848                           
  3849                           
  3850                           ; 1 bytes @ 0x7
  3851  0077                     	ds	1
  3852  0078                     FlashPattern@current_time:	
  3853                           
  3854                           ; 2 bytes @ 0x8
  3855  0078                     	ds	1
  3856  0079                     ??_ConstructStage:	
  3857                           
  3858                           ; 1 bytes @ 0x9
  3859  0079                     	ds	1
  3860  007A                     ??_setup:	
  3861                           
  3862                           	psect	cstackBANK0
  3863  0020                     __pcstackBANK0:	
  3864                           ; 1 bytes @ 0xA
  3865                           
  3866  0020                     ??_FlashPattern:	
  3867  0020                     AssignLightStates@i:	
  3868                           ; 1 bytes @ 0x0
  3869                           
  3870                           
  3871                           ; 2 bytes @ 0x0
  3872  0020                     	ds	2
  3873  0022                     ??_NewStage:	
  3874                           
  3875                           ; 1 bytes @ 0x2
  3876  0022                     	ds	4
  3877  0026                     NewStage@init_states:	
  3878                           
  3879                           ; 4 bytes @ 0x6
  3880  0026                     	ds	4
  3881  002A                     NewStage@new_stage:	
  3882                           
  3883                           ; 2 bytes @ 0xA
  3884  002A                     	ds	2
  3885  002C                     ?_CopyStageData:	
  3886  002C                     ?_ConstructStage:	
  3887                           ; 2 bytes @ 0xC
  3888                           
  3889  002C                     ConstructStage@time_ms:	
  3890                           ; 2 bytes @ 0xC
  3891                           
  3892  002C                     CopyStageData@dest:	
  3893                           ; 2 bytes @ 0xC
  3894                           
  3895                           
  3896                           ; 2 bytes @ 0xC
  3897  002C                     	ds	2
  3898  002E                     ConstructStage@next:	
  3899  002E                     CopyStageData@source:	
  3900                           ; 1 bytes @ 0xE
  3901                           
  3902                           
  3903                           ; 2 bytes @ 0xE
  3904  002E                     	ds	1
  3905  002F                     ConstructStage@states:	
  3906                           
  3907                           ; 1 bytes @ 0xF
  3908  002F                     	ds	1
  3909  0030                     ??_CopyStageData:	
  3910  0030                     ConstructStage@new_stage:	
  3911                           ; 1 bytes @ 0x10
  3912                           
  3913                           
  3914                           ; 2 bytes @ 0x10
  3915  0030                     	ds	3
  3916  0033                     CopyStageData@i:	
  3917                           
  3918                           ; 2 bytes @ 0x13
  3919  0033                     	ds	2
  3920  0035                     ?_AppendStage:	
  3921  0035                     AppendStage@head:	
  3922                           ; 1 bytes @ 0x15
  3923                           
  3924                           
  3925                           ; 2 bytes @ 0x15
  3926  0035                     	ds	2
  3927  0037                     AppendStage@new_stage:	
  3928                           
  3929                           ; 2 bytes @ 0x17
  3930  0037                     	ds	2
  3931  0039                     ??_AppendStage:	
  3932                           
  3933                           ; 1 bytes @ 0x19
  3934  0039                     	ds	2
  3935  003B                     AppendStage@last_stage:	
  3936                           
  3937                           ; 2 bytes @ 0x1B
  3938  003B                     	ds	2
  3939  003D                     ?_InitWigwagPattern:	
  3940  003D                     InitWigwagPattern@pattern:	
  3941                           ; 1 bytes @ 0x1D
  3942                           
  3943                           
  3944                           ; 2 bytes @ 0x1D
  3945  003D                     	ds	2
  3946  003F                     ??_InitWigwagPattern:	
  3947                           
  3948                           ; 1 bytes @ 0x1F
  3949  003F                     	ds	1
  3950  0040                     ??_main:	
  3951                           
  3952                           ; 1 bytes @ 0x20
  3953  0040                     	ds	1
  3954                           
  3955                           	psect	maintext
  3956  044D                     __pmaintext:	
  3957 ;;
  3958 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3959 ;;
  3960 ;; *************** function _main *****************
  3961 ;; Defined at:
  3962 ;;		line 34 in file "main.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;		None
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;		None
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  1    wreg      void 
  3969 ;; Registers used:
  3970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3971 ;; Tracked objects:
  3972 ;;		On entry : B1F/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3978 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3979 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3980 ;;Total ram usage:        1 bytes
  3981 ;; Hardware stack levels required when called:    9
  3982 ;; This function calls:
  3983 ;;		_FlashPattern
  3984 ;;		_PatternCycleInputChanged
  3985 ;;		_setup
  3986 ;; This function is called by:
  3987 ;;		Startup code after reset
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           
  3992                           ;psect for function _main
  3993  044D                     _main:	
  3994  044D                     l1953:	
  3995                           ;incstack = 0
  3996                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3997                           
  3998                           
  3999                           ;main.c: 36:     setup();
  4000  044D  3184  2430  3184   	fcall	_setup
  4001  0450                     l1955:	
  4002                           
  4003                           ;main.c: 39:     {;main.c: 40:         cur_pc_input_state = PORTCbits.RC5;
  4004  0450  3000               	movlw	0
  4005  0451  0020               	movlb	0	; select bank0
  4006  0452  1A8E               	btfsc	14,5	;volatile
  4007  0453  3001               	movlw	1
  4008  0454  00FB               	movwf	_cur_pc_input_state
  4009  0455                     l1957:	
  4010                           
  4011                           ;main.c: 45:         if ( PatternCycleInputChanged() )
  4012  0455  3183  2391  3184   	fcall	_PatternCycleInputChanged
  4013  0458                     l1963:	
  4014                           
  4015                           ;main.c: 65:         last_pc_input_state = cur_pc_input_state;
  4016  0458  087B               	movf	_cur_pc_input_state,w
  4017  0459  0020               	movlb	0	; select bank0
  4018  045A  00C0               	movwf	??_main
  4019  045B  0840               	movf	??_main,w
  4020  045C  00FA               	movwf	_last_pc_input_state
  4021  045D                     l1965:	
  4022                           
  4023                           ;main.c: 67:         FlashPattern( &Wigwag );
  4024  045D  3051               	movlw	low _Wigwag
  4025  045E  00F6               	movwf	FlashPattern@pattern
  4026  045F  3000               	movlw	high _Wigwag
  4027  0460  00F7               	movwf	FlashPattern@pattern+1
  4028  0461  3182  2219  3184   	fcall	_FlashPattern
  4029  0464  2C50               	goto	l1955
  4030  0465  3180  2828         	ljmp	start
  4031  0467                     __end_of_main:	
  4032                           
  4033                           	psect	text1
  4034  0430                     __ptext1:	
  4035 ;; *************** function _setup *****************
  4036 ;; Defined at:
  4037 ;;		line 13 in file "main.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;		None
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;		None
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  1    wreg      void 
  4044 ;; Registers used:
  4045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4055 ;;Total ram usage:        0 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; Hardware stack levels required when called:    8
  4058 ;; This function calls:
  4059 ;;		_InitWigwagPattern
  4060 ;;		_SYSTEM_Initialize
  4061 ;;		_SetOutputs
  4062 ;;		_TMR1_Initialize
  4063 ;;		_TMR1_StartTimer
  4064 ;; This function is called by:
  4065 ;;		_main
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           
  4070                           ;psect for function _setup
  4071  0430                     _setup:	
  4072  0430                     l1923:	
  4073                           ;incstack = 0
  4074                           ; Regs used in _setup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4075                           
  4076                           
  4077                           ;main.c: 16:     SYSTEM_Initialize();
  4078  0430  3184  24A2  3184   	fcall	_SYSTEM_Initialize
  4079  0433                     l1925:	
  4080                           
  4081                           ;main.c: 18:     (INTCONbits.GIE = 1);
  4082  0433  178B               	bsf	11,7	;volatile
  4083  0434                     l1927:	
  4084                           
  4085                           ;main.c: 21:     (INTCONbits.PEIE = 1);
  4086  0434  170B               	bsf	11,6	;volatile
  4087                           
  4088                           ;main.c: 24:     TMR1_Initialize();
  4089  0435  3184  247D  3184   	fcall	_TMR1_Initialize
  4090  0438                     l1929:	
  4091                           
  4092                           ;main.c: 25:     TMR1_StartTimer();
  4093  0438  3185  2505  3184   	fcall	_TMR1_StartTimer
  4094  043B                     l1931:	
  4095                           
  4096                           ;main.c: 28:     SetOutputs( 0 );
  4097  043B  3000               	movlw	0
  4098  043C  3184  240E  3184   	fcall	_SetOutputs
  4099  043F                     l1933:	
  4100                           
  4101                           ;main.c: 30:     InitWigwagPattern( &Wigwag );
  4102  043F  3051               	movlw	low _Wigwag
  4103  0440  0020               	movlb	0	; select bank0
  4104  0441  00BD               	movwf	InitWigwagPattern@pattern
  4105  0442  3000               	movlw	high _Wigwag
  4106  0443  00BE               	movwf	InitWigwagPattern@pattern+1
  4107  0444  3180  206B  3184   	fcall	_InitWigwagPattern
  4108  0447                     l1935:	
  4109                           
  4110                           ;main.c: 31:     current_stage = Wigwag.first_stage;
  4111  0447  0020               	movlb	0	; select bank0
  4112  0448  0853               	movf	_Wigwag+2,w
  4113  0449  00C4               	movwf	_current_stage+1
  4114  044A  0852               	movf	_Wigwag+1,w
  4115  044B  00C3               	movwf	_current_stage
  4116  044C                     l267:	
  4117  044C  0008               	return
  4118  044D                     __end_of_setup:	
  4119                           
  4120                           	psect	text2
  4121  0505                     __ptext2:	
  4122 ;; *************** function _TMR1_StartTimer *****************
  4123 ;; Defined at:
  4124 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;		None
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;		None
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      void 
  4131 ;; Registers used:
  4132 ;;		None
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4142 ;;Total ram usage:        0 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    4
  4145 ;; This function calls:
  4146 ;;		Nothing
  4147 ;; This function is called by:
  4148 ;;		_setup
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           
  4153                           ;psect for function _TMR1_StartTimer
  4154  0505                     _TMR1_StartTimer:	
  4155  0505                     l1597:	
  4156                           ;incstack = 0
  4157                           ; Regs used in _TMR1_StartTimer: []
  4158                           
  4159                           
  4160                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  4161  0505  0020               	movlb	0	; select bank0
  4162  0506  141B               	bsf	27,0	;volatile
  4163  0507                     l190:	
  4164  0507  0008               	return
  4165  0508                     __end_of_TMR1_StartTimer:	
  4166                           
  4167                           	psect	text3
  4168  040E                     __ptext3:	
  4169 ;; *************** function _SetOutputs *****************
  4170 ;; Defined at:
  4171 ;;		line 38 in file "Lights.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;  state           1    wreg     const _Bool 
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  state           1    7[COMMON] const _Bool 
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      void 
  4178 ;; Registers used:
  4179 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4186 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4187 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4188 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4189 ;;Total ram usage:        2 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:    5
  4192 ;; This function calls:
  4193 ;;		_SetLight
  4194 ;; This function is called by:
  4195 ;;		_setup
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           
  4200                           ;psect for function _SetOutputs
  4201  040E                     _SetOutputs:	
  4202                           
  4203                           ;incstack = 0
  4204                           ; Regs used in _SetOutputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4205                           ;SetOutputs@state stored from wreg
  4206  040E  00F7               	movwf	SetOutputs@state
  4207  040F                     l1879:	
  4208                           
  4209                           ;Lights.c: 38: void SetOutputs( const _Bool state );Lights.c: 39: {;Lights.c: 40:     Se
      +                          tLight( L1, state );
  4210  040F  0877               	movf	SetOutputs@state,w
  4211  0410  00F6               	movwf	??_SetOutputs
  4212  0411  0876               	movf	??_SetOutputs,w
  4213  0412  00F2               	movwf	SetLight@state
  4214  0413  3000               	movlw	0
  4215  0414  3181  21A8  3184   	fcall	_SetLight
  4216                           
  4217                           ;Lights.c: 41:     SetLight( L2, state );
  4218  0417  0877               	movf	SetOutputs@state,w
  4219  0418  00F6               	movwf	??_SetOutputs
  4220  0419  0876               	movf	??_SetOutputs,w
  4221  041A  00F2               	movwf	SetLight@state
  4222  041B  3001               	movlw	1
  4223  041C  3181  21A8  3184   	fcall	_SetLight
  4224                           
  4225                           ;Lights.c: 42:     SetLight( L3, state );
  4226  041F  0877               	movf	SetOutputs@state,w
  4227  0420  00F6               	movwf	??_SetOutputs
  4228  0421  0876               	movf	??_SetOutputs,w
  4229  0422  00F2               	movwf	SetLight@state
  4230  0423  3002               	movlw	2
  4231  0424  3181  21A8  3184   	fcall	_SetLight
  4232                           
  4233                           ;Lights.c: 43:     SetLight( L4, state );
  4234  0427  0877               	movf	SetOutputs@state,w
  4235  0428  00F6               	movwf	??_SetOutputs
  4236  0429  0876               	movf	??_SetOutputs,w
  4237  042A  00F2               	movwf	SetLight@state
  4238  042B  3003               	movlw	3
  4239  042C  3181  21A8  3184   	fcall	_SetLight
  4240  042F                     l336:	
  4241  042F  0008               	return
  4242  0430                     __end_of_SetOutputs:	
  4243                           
  4244                           	psect	text4
  4245  04A2                     __ptext4:	
  4246 ;; *************** function _SYSTEM_Initialize *****************
  4247 ;; Defined at:
  4248 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;		None
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;		None
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		wreg, status,2, status,0, pclath, cstack
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4266 ;;Total ram usage:        0 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    6
  4269 ;; This function calls:
  4270 ;;		_OSCILLATOR_Initialize
  4271 ;;		_PIN_MANAGER_Initialize
  4272 ;;		_PMD_Initialize
  4273 ;;		_TMR1_Initialize
  4274 ;;		_WDT_Initialize
  4275 ;; This function is called by:
  4276 ;;		_setup
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           
  4281                           ;psect for function _SYSTEM_Initialize
  4282  04A2                     _SYSTEM_Initialize:	
  4283  04A2                     l1581:	
  4284                           ;incstack = 0
  4285                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4286                           
  4287                           
  4288                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  4289  04A2  3184  24DF  3184   	fcall	_PMD_Initialize
  4290  04A5                     l1583:	
  4291                           
  4292                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4293  04A5  3183  23BE  3184   	fcall	_PIN_MANAGER_Initialize
  4294  04A8                     l1585:	
  4295                           
  4296                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4297  04A8  3184  24CD  3184   	fcall	_OSCILLATOR_Initialize
  4298  04AB                     l1587:	
  4299                           
  4300                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4301  04AB  3185  2501  3184   	fcall	_WDT_Initialize
  4302  04AE                     l1589:	
  4303                           
  4304                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  4305  04AE  3184  247D  3184   	fcall	_TMR1_Initialize
  4306  04B1                     l47:	
  4307  04B1  0008               	return
  4308  04B2                     __end_of_SYSTEM_Initialize:	
  4309                           
  4310                           	psect	text5
  4311  0501                     __ptext5:	
  4312 ;; *************** function _WDT_Initialize *****************
  4313 ;; Defined at:
  4314 ;;		line 74 in file "mcc_generated_files/mcc.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;		None
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;		None
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      void 
  4321 ;; Registers used:
  4322 ;;		wreg
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4332 ;;Total ram usage:        0 bytes
  4333 ;; Hardware stack levels used:    1
  4334 ;; Hardware stack levels required when called:    4
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_SYSTEM_Initialize
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           
  4343                           ;psect for function _WDT_Initialize
  4344  0501                     _WDT_Initialize:	
  4345  0501                     l1499:	
  4346                           ;incstack = 0
  4347                           ; Regs used in _WDT_Initialize: [wreg]
  4348                           
  4349                           
  4350                           ;mcc_generated_files/mcc.c: 77:     WDTCON = 0x16;
  4351  0501  3016               	movlw	22
  4352  0502  0021               	movlb	1	; select bank1
  4353  0503  0097               	movwf	23	;volatile
  4354  0504                     l53:	
  4355  0504  0008               	return
  4356  0505                     __end_of_WDT_Initialize:	
  4357                           
  4358                           	psect	text6
  4359  047D                     __ptext6:	
  4360 ;; *************** function _TMR1_Initialize *****************
  4361 ;; Defined at:
  4362 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;		None
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;		None
  4367 ;; Return value:  Size  Location     Type
  4368 ;;                  1    wreg      void 
  4369 ;; Registers used:
  4370 ;;		wreg, status,2, status,0, pclath, cstack
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;Total ram usage:        0 bytes
  4381 ;; Hardware stack levels used:    1
  4382 ;; Hardware stack levels required when called:    5
  4383 ;; This function calls:
  4384 ;;		_TMR1_SetInterruptHandler
  4385 ;; This function is called by:
  4386 ;;		_SYSTEM_Initialize
  4387 ;;		_setup
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           
  4392                           ;psect for function _TMR1_Initialize
  4393  047D                     _TMR1_Initialize:	
  4394  047D                     l1501:	
  4395                           ;incstack = 0
  4396                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4397                           
  4398                           
  4399                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4400  047D  0020               	movlb	0	; select bank0
  4401  047E  019C               	clrf	28	;volatile
  4402  047F                     l1503:	
  4403                           
  4404                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xFF;
  4405  047F  30FF               	movlw	255
  4406  0480  009A               	movwf	26	;volatile
  4407  0481                     l1505:	
  4408                           
  4409                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x00;
  4410  0481  0199               	clrf	25	;volatile
  4411  0482                     l1507:	
  4412                           
  4413                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  4414  0482  1011               	bcf	17,0	;volatile
  4415                           
  4416                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4417  0483  081A               	movf	26,w	;volatile
  4418  0484  00D7               	movwf	_timer1ReloadVal+1	;volatile
  4419  0485  0819               	movf	25,w	;volatile
  4420  0486  00D6               	movwf	_timer1ReloadVal	;volatile
  4421  0487                     l1509:	
  4422                           
  4423                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  4424  0487  0021               	movlb	1	; select bank1
  4425  0488  1411               	bsf	17,0	;volatile
  4426  0489                     l1511:	
  4427                           
  4428                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4429  0489  30F3               	movlw	low _TMR1_DefaultInterruptHandler
  4430  048A  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  4431  048B  3004               	movlw	high _TMR1_DefaultInterruptHandler
  4432  048C  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  4433  048D  3184  24E7  3184   	fcall	_TMR1_SetInterruptHandler
  4434  0490                     l187:	
  4435  0490  0008               	return
  4436  0491                     __end_of_TMR1_Initialize:	
  4437                           
  4438                           	psect	text7
  4439  04E7                     __ptext7:	
  4440 ;; *************** function _TMR1_SetInterruptHandler *****************
  4441 ;; Defined at:
  4442 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4445 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;		None
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  1    wreg      void 
  4450 ;; Registers used:
  4451 ;;		wreg
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4460 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4461 ;;Total ram usage:        2 bytes
  4462 ;; Hardware stack levels used:    1
  4463 ;; Hardware stack levels required when called:    4
  4464 ;; This function calls:
  4465 ;;		Nothing
  4466 ;; This function is called by:
  4467 ;;		_TMR1_Initialize
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           
  4472                           ;psect for function _TMR1_SetInterruptHandler
  4473  04E7                     _TMR1_SetInterruptHandler:	
  4474  04E7                     l1433:	
  4475                           ;incstack = 0
  4476                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  4477                           
  4478                           
  4479                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
  4480  04E7  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  4481  04E8  0020               	movlb	0	; select bank0
  4482  04E9  00D5               	movwf	_TMR1_InterruptHandler+1
  4483  04EA  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  4484  04EB  00D4               	movwf	_TMR1_InterruptHandler
  4485  04EC                     l217:	
  4486  04EC  0008               	return
  4487  04ED                     __end_of_TMR1_SetInterruptHandler:	
  4488                           
  4489                           	psect	text8
  4490  04DF                     __ptext8:	
  4491 ;; *************** function _PMD_Initialize *****************
  4492 ;; Defined at:
  4493 ;;		line 80 in file "mcc_generated_files/mcc.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;		None
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;		None
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      void 
  4500 ;; Registers used:
  4501 ;;		status,2
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4511 ;;Total ram usage:        0 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; Hardware stack levels required when called:    4
  4514 ;; This function calls:
  4515 ;;		Nothing
  4516 ;; This function is called by:
  4517 ;;		_SYSTEM_Initialize
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           
  4522                           ;psect for function _PMD_Initialize
  4523  04DF                     _PMD_Initialize:	
  4524  04DF                     l1457:	
  4525                           ;incstack = 0
  4526                           ; Regs used in _PMD_Initialize: [status,2]
  4527                           
  4528                           
  4529                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
  4530  04DF  0032               	movlb	18	; select bank18
  4531  04E0  0191               	clrf	17	;volatile
  4532                           
  4533                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
  4534  04E1  0192               	clrf	18	;volatile
  4535                           
  4536                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
  4537  04E2  0193               	clrf	19	;volatile
  4538                           
  4539                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
  4540  04E3  0194               	clrf	20	;volatile
  4541                           
  4542                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
  4543  04E4  0195               	clrf	21	;volatile
  4544                           
  4545                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
  4546  04E5  0196               	clrf	22	;volatile
  4547  04E6                     l56:	
  4548  04E6  0008               	return
  4549  04E7                     __end_of_PMD_Initialize:	
  4550                           
  4551                           	psect	text9
  4552  03BE                     __ptext9:	
  4553 ;; *************** function _PIN_MANAGER_Initialize *****************
  4554 ;; Defined at:
  4555 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;		None
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;		None
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  1    wreg      void 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0, pclath, cstack
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4573 ;;Total ram usage:        0 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    5
  4576 ;; This function calls:
  4577 ;;		_IOCCF0_SetInterruptHandler
  4578 ;; This function is called by:
  4579 ;;		_SYSTEM_Initialize
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           
  4584                           ;psect for function _PIN_MANAGER_Initialize
  4585  03BE                     _PIN_MANAGER_Initialize:	
  4586  03BE                     l1459:	
  4587                           ;incstack = 0
  4588                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4589                           
  4590                           
  4591                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4592  03BE  0022               	movlb	2	; select bank2
  4593  03BF  018C               	clrf	12	;volatile
  4594  03C0                     l1461:	
  4595                           
  4596                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x20;
  4597  03C0  3020               	movlw	32
  4598  03C1  008E               	movwf	14	;volatile
  4599  03C2                     l1463:	
  4600                           
  4601                           ;mcc_generated_files/pin_manager.c: 68:     TRISA = 0x37;
  4602  03C2  3037               	movlw	55
  4603  03C3  0021               	movlb	1	; select bank1
  4604  03C4  008C               	movwf	12	;volatile
  4605  03C5                     l1465:	
  4606                           
  4607                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x21;
  4608  03C5  3021               	movlw	33
  4609  03C6  008E               	movwf	14	;volatile
  4610  03C7                     l1467:	
  4611                           
  4612                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  4613  03C7  0023               	movlb	3	; select bank3
  4614  03C8  018E               	clrf	14	;volatile
  4615                           
  4616                           ;mcc_generated_files/pin_manager.c: 75:     ANSELA = 0x33;
  4617  03C9  3033               	movlw	51
  4618  03CA  008C               	movwf	12	;volatile
  4619  03CB                     l1469:	
  4620                           
  4621                           ;mcc_generated_files/pin_manager.c: 80:     WPUA = 0x00;
  4622  03CB  0024               	movlb	4	; select bank4
  4623  03CC  018C               	clrf	12	;volatile
  4624  03CD                     l1471:	
  4625                           
  4626                           ;mcc_generated_files/pin_manager.c: 81:     WPUC = 0x1E;
  4627  03CD  301E               	movlw	30
  4628  03CE  008E               	movwf	14	;volatile
  4629                           
  4630                           ;mcc_generated_files/pin_manager.c: 86:     ODCONA = 0x00;
  4631  03CF  0025               	movlb	5	; select bank5
  4632  03D0  018C               	clrf	12	;volatile
  4633                           
  4634                           ;mcc_generated_files/pin_manager.c: 87:     ODCONC = 0x00;
  4635  03D1  018E               	clrf	14	;volatile
  4636  03D2                     l1473:	
  4637                           
  4638                           ;mcc_generated_files/pin_manager.c: 92:     SLRCONA = 0x37;
  4639  03D2  3037               	movlw	55
  4640  03D3  0026               	movlb	6	; select bank6
  4641  03D4  008C               	movwf	12	;volatile
  4642  03D5                     l1475:	
  4643                           
  4644                           ;mcc_generated_files/pin_manager.c: 93:     SLRCONC = 0x3F;
  4645  03D5  303F               	movlw	63
  4646  03D6  008E               	movwf	14	;volatile
  4647  03D7                     l1477:	
  4648                           
  4649                           ;mcc_generated_files/pin_manager.c: 98:     INLVLA = 0x3F;
  4650  03D7  303F               	movlw	63
  4651  03D8  0027               	movlb	7	; select bank7
  4652  03D9  008C               	movwf	12	;volatile
  4653  03DA                     l1479:	
  4654                           
  4655                           ;mcc_generated_files/pin_manager.c: 99:     INLVLC = 0x3F;
  4656  03DA  303F               	movlw	63
  4657  03DB  008E               	movwf	14	;volatile
  4658  03DC                     l1481:	
  4659                           
  4660                           ;mcc_generated_files/pin_manager.c: 106:     IOCCFbits.IOCCF0 = 0;
  4661  03DC  1019               	bcf	25,0	;volatile
  4662  03DD                     l1483:	
  4663                           
  4664                           ;mcc_generated_files/pin_manager.c: 108:     IOCCNbits.IOCCN0 = 0;
  4665  03DD  1018               	bcf	24,0	;volatile
  4666  03DE                     l1485:	
  4667                           
  4668                           ;mcc_generated_files/pin_manager.c: 110:     IOCCPbits.IOCCP0 = 1;
  4669  03DE  1417               	bsf	23,0	;volatile
  4670  03DF                     l1487:	
  4671                           
  4672                           ;mcc_generated_files/pin_manager.c: 115:     IOCCF0_SetInterruptHandler(IOCCF0_DefaultIn
      +                          terruptHandler);
  4673  03DF  3008               	movlw	low _IOCCF0_DefaultInterruptHandler
  4674  03E0  00F2               	movwf	IOCCF0_SetInterruptHandler@InterruptHandler
  4675  03E1  3005               	movlw	high _IOCCF0_DefaultInterruptHandler
  4676  03E2  00F3               	movwf	IOCCF0_SetInterruptHandler@InterruptHandler+1
  4677  03E3  3184  24ED  3183   	fcall	_IOCCF0_SetInterruptHandler
  4678  03E6                     l1489:	
  4679                           
  4680                           ;mcc_generated_files/pin_manager.c: 118:     PIE0bits.IOCIE = 1;
  4681  03E6  0021               	movlb	1	; select bank1
  4682  03E7  1610               	bsf	16,4	;volatile
  4683  03E8                     l105:	
  4684  03E8  0008               	return
  4685  03E9                     __end_of_PIN_MANAGER_Initialize:	
  4686                           
  4687                           	psect	text10
  4688  04ED                     __ptext10:	
  4689 ;; *************** function _IOCCF0_SetInterruptHandler *****************
  4690 ;; Defined at:
  4691 ;;		line 149 in file "mcc_generated_files/pin_manager.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4694 ;;		 -> IOCCF0_DefaultInterruptHandler(1), 
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;		None
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  1    wreg      void 
  4699 ;; Registers used:
  4700 ;;		wreg
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4706 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;Total ram usage:        2 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:    4
  4713 ;; This function calls:
  4714 ;;		Nothing
  4715 ;; This function is called by:
  4716 ;;		_PIN_MANAGER_Initialize
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           
  4721                           ;psect for function _IOCCF0_SetInterruptHandler
  4722  04ED                     _IOCCF0_SetInterruptHandler:	
  4723  04ED                     l1431:	
  4724                           ;incstack = 0
  4725                           ; Regs used in _IOCCF0_SetInterruptHandler: [wreg]
  4726                           
  4727                           
  4728                           ;mcc_generated_files/pin_manager.c: 150:     IOCCF0_InterruptHandler = InterruptHandler;
  4729  04ED  0873               	movf	IOCCF0_SetInterruptHandler@InterruptHandler+1,w
  4730  04EE  0020               	movlb	0	; select bank0
  4731  04EF  00D9               	movwf	_IOCCF0_InterruptHandler+1
  4732  04F0  0872               	movf	IOCCF0_SetInterruptHandler@InterruptHandler,w
  4733  04F1  00D8               	movwf	_IOCCF0_InterruptHandler
  4734  04F2                     l116:	
  4735  04F2  0008               	return
  4736  04F3                     __end_of_IOCCF0_SetInterruptHandler:	
  4737                           
  4738                           	psect	text11
  4739  04CD                     __ptext11:	
  4740 ;; *************** function _OSCILLATOR_Initialize *****************
  4741 ;; Defined at:
  4742 ;;		line 60 in file "mcc_generated_files/mcc.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;		None
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;		None
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  1    wreg      void 
  4749 ;; Registers used:
  4750 ;;		wreg, status,2
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4760 ;;Total ram usage:        0 bytes
  4761 ;; Hardware stack levels used:    1
  4762 ;; Hardware stack levels required when called:    4
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_SYSTEM_Initialize
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           
  4771                           ;psect for function _OSCILLATOR_Initialize
  4772  04CD                     _OSCILLATOR_Initialize:	
  4773  04CD                     l1491:	
  4774                           ;incstack = 0
  4775                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4776                           
  4777                           
  4778                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
  4779  04CD  3062               	movlw	98
  4780  04CE  0032               	movlb	18	; select bank18
  4781  04CF  0099               	movwf	25	;volatile
  4782  04D0                     l1493:	
  4783                           
  4784                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  4785  04D0  019B               	clrf	27	;volatile
  4786  04D1                     l1495:	
  4787                           
  4788                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  4789  04D1  019D               	clrf	29	;volatile
  4790                           
  4791                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x03;
  4792  04D2  3003               	movlw	3
  4793  04D3  009F               	movwf	31	;volatile
  4794  04D4                     l1497:	
  4795                           
  4796                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  4797  04D4  019E               	clrf	30	;volatile
  4798  04D5                     l50:	
  4799  04D5  0008               	return
  4800  04D6                     __end_of_OSCILLATOR_Initialize:	
  4801                           
  4802                           	psect	text12
  4803  006B                     __ptext12:	
  4804 ;; *************** function _InitWigwagPattern *****************
  4805 ;; Defined at:
  4806 ;;		line 87 in file "Pattern.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  pattern         2   29[BANK0 ] PTR struct Pattern
  4809 ;;		 -> Wigwag(3), 
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;  i               2   14[BANK1 ] int 
  4812 ;;  i               2   12[BANK1 ] int 
  4813 ;;  right_side_s    4    4[BANK1 ] _Bool [4]
  4814 ;;  left_side_st    4    0[BANK1 ] _Bool [4]
  4815 ;;  head            2   18[BANK1 ] PTR struct Stage
  4816 ;;		 -> stage_stash(320), NULL(0), 
  4817 ;;  off             2   16[BANK1 ] PTR struct Stage
  4818 ;;		 -> stage_stash(320), NULL(0), 
  4819 ;;  right_side_o    2   10[BANK1 ] PTR struct Stage
  4820 ;;		 -> stage_stash(320), NULL(0), 
  4821 ;;  left_side_on    2    8[BANK1 ] PTR struct Stage
  4822 ;;		 -> stage_stash(320), NULL(0), 
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  1    wreg      void 
  4825 ;; Registers used:
  4826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4832 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4833 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  4834 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4835 ;;      Totals:         0       3      20       0       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;Total ram usage:       23 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    7
  4839 ;; This function calls:
  4840 ;;		_AppendStage
  4841 ;;		_ConstructStage
  4842 ;;		_CopyStageData
  4843 ;;		_NewStage
  4844 ;; This function is called by:
  4845 ;;		_setup
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           
  4850                           ;psect for function _InitWigwagPattern
  4851  006B                     _InitWigwagPattern:	
  4852  006B                     l1881:	
  4853                           ;incstack = 0
  4854                           ; Regs used in _InitWigwagPattern: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4855                           
  4856                           
  4857                           ;Pattern.c: 87: void InitWigwagPattern( struct Pattern* pattern );Pattern.c: 88: {;Patte
      +                          rn.c: 89:     pattern->name = WIGWAG;
  4858  006B  0020               	movlb	0	; select bank0
  4859  006C  083D               	movf	InitWigwagPattern@pattern,w
  4860  006D  0086               	movwf	6
  4861  006E  083E               	movf	InitWigwagPattern@pattern+1,w
  4862  006F  0087               	movwf	7
  4863  0070  0181               	clrf	1
  4864  0071                     l1883:	
  4865                           
  4866                           ;Pattern.c: 92:     _Bool left_side_states[NUM_LIGHTS] = { 1, 0, 1, 0 };
  4867  0071  085D               	movf	InitWigwagPattern@F436+3,w
  4868  0072  0021               	movlb	1	; select bank1
  4869  0073  00A3               	movwf	(InitWigwagPattern@left_side_states+3)^(0+128)
  4870  0074  0020               	movlb	0	; select bank0
  4871  0075  085C               	movf	InitWigwagPattern@F436+2,w
  4872  0076  0021               	movlb	1	; select bank1
  4873  0077  00A2               	movwf	(InitWigwagPattern@left_side_states+2)^(0+128)
  4874  0078  0020               	movlb	0	; select bank0
  4875  0079  085B               	movf	InitWigwagPattern@F436+1,w
  4876  007A  0021               	movlb	1	; select bank1
  4877  007B  00A1               	movwf	(InitWigwagPattern@left_side_states+1)^(0+128)
  4878  007C  0020               	movlb	0	; select bank0
  4879  007D  085A               	movf	InitWigwagPattern@F436,w
  4880  007E  0021               	movlb	1	; select bank1
  4881  007F  00A0               	movwf	InitWigwagPattern@left_side_states^(0+128)
  4882  0080                     l1885:	
  4883                           
  4884                           ;Pattern.c: 93:     struct Stage* left_side_on = ConstructStage( left_side_states, 160UL
      +                          , ((void*)0) );
  4885  0080  30A0               	movlw	160
  4886  0081  0020               	movlb	0	; select bank0
  4887  0082  00AC               	movwf	ConstructStage@time_ms
  4888  0083  3000               	movlw	0
  4889  0084  00AD               	movwf	ConstructStage@time_ms+1
  4890  0085  01AE               	clrf	ConstructStage@next
  4891  0086  30A0               	movlw	(low (InitWigwagPattern@left_side_states| 0))& (0+255)
  4892  0087  3183  2364  3180   	fcall	_ConstructStage
  4893  008A  0020               	movlb	0	; select bank0
  4894  008B  082D               	movf	?_ConstructStage+1,w
  4895  008C  0021               	movlb	1	; select bank1
  4896  008D  00A9               	movwf	(InitWigwagPattern@left_side_on+1)^(0+128)
  4897  008E  0020               	movlb	0	; select bank0
  4898  008F  082C               	movf	?_ConstructStage,w
  4899  0090  0021               	movlb	1	; select bank1
  4900  0091  00A8               	movwf	InitWigwagPattern@left_side_on^(0+128)
  4901  0092                     l1887:	
  4902                           
  4903                           ;Pattern.c: 95:     _Bool right_side_states[NUM_LIGHTS] = { 0, 1, 0, 1 };
  4904  0092  083B               	movf	(InitWigwagPattern@F439+3)^(0+128),w
  4905  0093  00A7               	movwf	(InitWigwagPattern@right_side_states+3)^(0+128)
  4906  0094  083A               	movf	(InitWigwagPattern@F439+2)^(0+128),w
  4907  0095  00A6               	movwf	(InitWigwagPattern@right_side_states+2)^(0+128)
  4908  0096  0839               	movf	(InitWigwagPattern@F439+1)^(0+128),w
  4909  0097  00A5               	movwf	(InitWigwagPattern@right_side_states+1)^(0+128)
  4910  0098  0838               	movf	InitWigwagPattern@F439^(0+128),w
  4911  0099  00A4               	movwf	InitWigwagPattern@right_side_states^(0+128)
  4912  009A                     l1889:	
  4913                           
  4914                           ;Pattern.c: 96:     struct Stage* right_side_on = ConstructStage( right_side_states, 160
      +                          UL, ((void*)0) );
  4915  009A  30A0               	movlw	160
  4916  009B  0020               	movlb	0	; select bank0
  4917  009C  00AC               	movwf	ConstructStage@time_ms
  4918  009D  3000               	movlw	0
  4919  009E  00AD               	movwf	ConstructStage@time_ms+1
  4920  009F  01AE               	clrf	ConstructStage@next
  4921  00A0  30A4               	movlw	(low (InitWigwagPattern@right_side_states| 0))& (0+255)
  4922  00A1  3183  2364  3180   	fcall	_ConstructStage
  4923  00A4  0020               	movlb	0	; select bank0
  4924  00A5  082D               	movf	?_ConstructStage+1,w
  4925  00A6  0021               	movlb	1	; select bank1
  4926  00A7  00AB               	movwf	(InitWigwagPattern@right_side_on+1)^(0+128)
  4927  00A8  0020               	movlb	0	; select bank0
  4928  00A9  082C               	movf	?_ConstructStage,w
  4929  00AA  0021               	movlb	1	; select bank1
  4930  00AB  00AA               	movwf	InitWigwagPattern@right_side_on^(0+128)
  4931  00AC                     l1891:	
  4932                           
  4933                           ;Pattern.c: 98:     struct Stage* off = NewStage();
  4934  00AC  3182  22DC  3180   	fcall	_NewStage
  4935  00AF  0878               	movf	?_NewStage+1,w
  4936  00B0  0021               	movlb	1	; select bank1
  4937  00B1  00B1               	movwf	(InitWigwagPattern@off+1)^(0+128)
  4938  00B2  0877               	movf	?_NewStage,w
  4939  00B3  00B0               	movwf	InitWigwagPattern@off^(0+128)
  4940  00B4                     l1893:	
  4941                           
  4942                           ;Pattern.c: 100:     pattern->first_stage = NewStage();
  4943  00B4  3182  22DC  3180   	fcall	_NewStage
  4944  00B7  0020               	movlb	0	; select bank0
  4945  00B8  083D               	movf	InitWigwagPattern@pattern,w
  4946  00B9  0086               	movwf	6
  4947  00BA  083E               	movf	InitWigwagPattern@pattern+1,w
  4948  00BB  0087               	movwf	7
  4949  00BC  3141               	addfsr 1,1
  4950  00BD  0877               	movf	?_NewStage,w
  4951  00BE  3FC0               	movwi [0]fsr1
  4952  00BF  0878               	movf	?_NewStage+1,w
  4953  00C0  3FC1               	movwi [1]fsr1
  4954  00C1                     l1895:	
  4955                           
  4956                           ;Pattern.c: 101:     struct Stage* head = pattern->first_stage;
  4957  00C1  083D               	movf	InitWigwagPattern@pattern,w
  4958  00C2  0086               	movwf	6
  4959  00C3  083E               	movf	InitWigwagPattern@pattern+1,w
  4960  00C4  0087               	movwf	7
  4961  00C5  3141               	addfsr 1,1
  4962  00C6  3F40               	moviw [0]fsr1
  4963  00C7  0021               	movlb	1	; select bank1
  4964  00C8  00B2               	movwf	InitWigwagPattern@head^(0+128)
  4965  00C9  3F41               	moviw [1]fsr1
  4966  00CA  00B3               	movwf	(InitWigwagPattern@head+1)^(0+128)
  4967  00CB                     l1897:	
  4968                           
  4969                           ;Pattern.c: 104:     for( int i = 0; i < 3; i++ )
  4970  00CB  01AC               	clrf	InitWigwagPattern@i^(0+128)
  4971  00CC  01AD               	clrf	(InitWigwagPattern@i+1)^(0+128)
  4972  00CD                     l1903:	
  4973                           
  4974                           ;Pattern.c: 105:     {;Pattern.c: 106:         AppendStage( head, CopyStageData( NewStag
      +                          e(), left_side_on ) );
  4975  00CD  0021               	movlb	1	; select bank1
  4976  00CE  0833               	movf	(InitWigwagPattern@head+1)^(0+128),w
  4977  00CF  0020               	movlb	0	; select bank0
  4978  00D0  00B6               	movwf	AppendStage@head+1
  4979  00D1  0021               	movlb	1	; select bank1
  4980  00D2  0832               	movf	InitWigwagPattern@head^(0+128),w
  4981  00D3  0020               	movlb	0	; select bank0
  4982  00D4  00B5               	movwf	AppendStage@head
  4983  00D5  3182  22DC  3180   	fcall	_NewStage
  4984  00D8  0878               	movf	?_NewStage+1,w
  4985  00D9  0020               	movlb	0	; select bank0
  4986  00DA  00AD               	movwf	CopyStageData@dest+1
  4987  00DB  0877               	movf	?_NewStage,w
  4988  00DC  00AC               	movwf	CopyStageData@dest
  4989  00DD  0021               	movlb	1	; select bank1
  4990  00DE  0829               	movf	(InitWigwagPattern@left_side_on+1)^(0+128),w
  4991  00DF  0020               	movlb	0	; select bank0
  4992  00E0  00AF               	movwf	CopyStageData@source+1
  4993  00E1  0021               	movlb	1	; select bank1
  4994  00E2  0828               	movf	InitWigwagPattern@left_side_on^(0+128),w
  4995  00E3  0020               	movlb	0	; select bank0
  4996  00E4  00AE               	movwf	CopyStageData@source
  4997  00E5  3183  232B  3180   	fcall	_CopyStageData
  4998  00E8  0020               	movlb	0	; select bank0
  4999  00E9  082D               	movf	?_CopyStageData+1,w
  5000  00EA  00B8               	movwf	AppendStage@new_stage+1
  5001  00EB  082C               	movf	?_CopyStageData,w
  5002  00EC  00B7               	movwf	AppendStage@new_stage
  5003  00ED  3182  2284  3180   	fcall	_AppendStage
  5004                           
  5005                           ;Pattern.c: 107:         AppendStage( head, CopyStageData( NewStage(), off ) );
  5006  00F0  0021               	movlb	1	; select bank1
  5007  00F1  0833               	movf	(InitWigwagPattern@head+1)^(0+128),w
  5008  00F2  0020               	movlb	0	; select bank0
  5009  00F3  00B6               	movwf	AppendStage@head+1
  5010  00F4  0021               	movlb	1	; select bank1
  5011  00F5  0832               	movf	InitWigwagPattern@head^(0+128),w
  5012  00F6  0020               	movlb	0	; select bank0
  5013  00F7  00B5               	movwf	AppendStage@head
  5014  00F8  3182  22DC  3180   	fcall	_NewStage
  5015  00FB  0878               	movf	?_NewStage+1,w
  5016  00FC  0020               	movlb	0	; select bank0
  5017  00FD  00AD               	movwf	CopyStageData@dest+1
  5018  00FE  0877               	movf	?_NewStage,w
  5019  00FF  00AC               	movwf	CopyStageData@dest
  5020  0100  0021               	movlb	1	; select bank1
  5021  0101  0831               	movf	(InitWigwagPattern@off+1)^(0+128),w
  5022  0102  0020               	movlb	0	; select bank0
  5023  0103  00AF               	movwf	CopyStageData@source+1
  5024  0104  0021               	movlb	1	; select bank1
  5025  0105  0830               	movf	InitWigwagPattern@off^(0+128),w
  5026  0106  0020               	movlb	0	; select bank0
  5027  0107  00AE               	movwf	CopyStageData@source
  5028  0108  3183  232B  3180   	fcall	_CopyStageData
  5029  010B  0020               	movlb	0	; select bank0
  5030  010C  082D               	movf	?_CopyStageData+1,w
  5031  010D  00B8               	movwf	AppendStage@new_stage+1
  5032  010E  082C               	movf	?_CopyStageData,w
  5033  010F  00B7               	movwf	AppendStage@new_stage
  5034  0110  3182  2284  3180   	fcall	_AppendStage
  5035  0113                     l1905:	
  5036                           
  5037                           ;Pattern.c: 108:     }
  5038  0113  3001               	movlw	1
  5039  0114  0021               	movlb	1	; select bank1
  5040  0115  07AC               	addwf	InitWigwagPattern@i^(0+128),f
  5041  0116  3000               	movlw	0
  5042  0117  3DAD               	addwfc	(InitWigwagPattern@i+1)^(0+128),f
  5043  0118                     l1907:	
  5044  0118  082D               	movf	(InitWigwagPattern@i+1)^(0+128),w
  5045  0119  3A80               	xorlw	128
  5046  011A  0020               	movlb	0	; select bank0
  5047  011B  00BF               	movwf	??_InitWigwagPattern
  5048  011C  3080               	movlw	128
  5049  011D  023F               	subwf	??_InitWigwagPattern,w
  5050  011E  1D03               	skipz
  5051  011F  2923               	goto	u855
  5052  0120  3003               	movlw	3
  5053  0121  0021               	movlb	1	; select bank1
  5054  0122  022C               	subwf	InitWigwagPattern@i^(0+128),w
  5055  0123                     u855:	
  5056  0123  1C03               	skipc
  5057  0124  2926               	goto	u851
  5058  0125  2927               	goto	u850
  5059  0126                     u851:	
  5060  0126  28CD               	goto	l1903
  5061  0127                     u850:	
  5062  0127                     l1909:	
  5063                           
  5064                           ;Pattern.c: 110:     AppendStage( head, CopyStageData( NewStage(), off ) );
  5065  0127  0021               	movlb	1	; select bank1
  5066  0128  0833               	movf	(InitWigwagPattern@head+1)^(0+128),w
  5067  0129  0020               	movlb	0	; select bank0
  5068  012A  00B6               	movwf	AppendStage@head+1
  5069  012B  0021               	movlb	1	; select bank1
  5070  012C  0832               	movf	InitWigwagPattern@head^(0+128),w
  5071  012D  0020               	movlb	0	; select bank0
  5072  012E  00B5               	movwf	AppendStage@head
  5073  012F  3182  22DC  3180   	fcall	_NewStage
  5074  0132  0878               	movf	?_NewStage+1,w
  5075  0133  0020               	movlb	0	; select bank0
  5076  0134  00AD               	movwf	CopyStageData@dest+1
  5077  0135  0877               	movf	?_NewStage,w
  5078  0136  00AC               	movwf	CopyStageData@dest
  5079  0137  0021               	movlb	1	; select bank1
  5080  0138  0831               	movf	(InitWigwagPattern@off+1)^(0+128),w
  5081  0139  0020               	movlb	0	; select bank0
  5082  013A  00AF               	movwf	CopyStageData@source+1
  5083  013B  0021               	movlb	1	; select bank1
  5084  013C  0830               	movf	InitWigwagPattern@off^(0+128),w
  5085  013D  0020               	movlb	0	; select bank0
  5086  013E  00AE               	movwf	CopyStageData@source
  5087  013F  3183  232B  3180   	fcall	_CopyStageData
  5088  0142  0020               	movlb	0	; select bank0
  5089  0143  082D               	movf	?_CopyStageData+1,w
  5090  0144  00B8               	movwf	AppendStage@new_stage+1
  5091  0145  082C               	movf	?_CopyStageData,w
  5092  0146  00B7               	movwf	AppendStage@new_stage
  5093  0147  3182  2284  3180   	fcall	_AppendStage
  5094  014A                     l1911:	
  5095                           
  5096                           ;Pattern.c: 112:     for( int i = 0; i < 3; i++ )
  5097  014A  0021               	movlb	1	; select bank1
  5098  014B  01AE               	clrf	InitWigwagPattern@i_770^(0+128)
  5099  014C  01AF               	clrf	(InitWigwagPattern@i_770+1)^(0+128)
  5100  014D                     l1917:	
  5101                           
  5102                           ;Pattern.c: 113:     {;Pattern.c: 114:         AppendStage( head, CopyStageData( NewStag
      +                          e(), right_side_on ) );
  5103  014D  0021               	movlb	1	; select bank1
  5104  014E  0833               	movf	(InitWigwagPattern@head+1)^(0+128),w
  5105  014F  0020               	movlb	0	; select bank0
  5106  0150  00B6               	movwf	AppendStage@head+1
  5107  0151  0021               	movlb	1	; select bank1
  5108  0152  0832               	movf	InitWigwagPattern@head^(0+128),w
  5109  0153  0020               	movlb	0	; select bank0
  5110  0154  00B5               	movwf	AppendStage@head
  5111  0155  3182  22DC  3180   	fcall	_NewStage
  5112  0158  0878               	movf	?_NewStage+1,w
  5113  0159  0020               	movlb	0	; select bank0
  5114  015A  00AD               	movwf	CopyStageData@dest+1
  5115  015B  0877               	movf	?_NewStage,w
  5116  015C  00AC               	movwf	CopyStageData@dest
  5117  015D  0021               	movlb	1	; select bank1
  5118  015E  082B               	movf	(InitWigwagPattern@right_side_on+1)^(0+128),w
  5119  015F  0020               	movlb	0	; select bank0
  5120  0160  00AF               	movwf	CopyStageData@source+1
  5121  0161  0021               	movlb	1	; select bank1
  5122  0162  082A               	movf	InitWigwagPattern@right_side_on^(0+128),w
  5123  0163  0020               	movlb	0	; select bank0
  5124  0164  00AE               	movwf	CopyStageData@source
  5125  0165  3183  232B  3180   	fcall	_CopyStageData
  5126  0168  0020               	movlb	0	; select bank0
  5127  0169  082D               	movf	?_CopyStageData+1,w
  5128  016A  00B8               	movwf	AppendStage@new_stage+1
  5129  016B  082C               	movf	?_CopyStageData,w
  5130  016C  00B7               	movwf	AppendStage@new_stage
  5131  016D  3182  2284  3180   	fcall	_AppendStage
  5132                           
  5133                           ;Pattern.c: 115:         AppendStage( head, CopyStageData( NewStage(), off ) );
  5134  0170  0021               	movlb	1	; select bank1
  5135  0171  0833               	movf	(InitWigwagPattern@head+1)^(0+128),w
  5136  0172  0020               	movlb	0	; select bank0
  5137  0173  00B6               	movwf	AppendStage@head+1
  5138  0174  0021               	movlb	1	; select bank1
  5139  0175  0832               	movf	InitWigwagPattern@head^(0+128),w
  5140  0176  0020               	movlb	0	; select bank0
  5141  0177  00B5               	movwf	AppendStage@head
  5142  0178  3182  22DC  3180   	fcall	_NewStage
  5143  017B  0878               	movf	?_NewStage+1,w
  5144  017C  0020               	movlb	0	; select bank0
  5145  017D  00AD               	movwf	CopyStageData@dest+1
  5146  017E  0877               	movf	?_NewStage,w
  5147  017F  00AC               	movwf	CopyStageData@dest
  5148  0180  0021               	movlb	1	; select bank1
  5149  0181  0831               	movf	(InitWigwagPattern@off+1)^(0+128),w
  5150  0182  0020               	movlb	0	; select bank0
  5151  0183  00AF               	movwf	CopyStageData@source+1
  5152  0184  0021               	movlb	1	; select bank1
  5153  0185  0830               	movf	InitWigwagPattern@off^(0+128),w
  5154  0186  0020               	movlb	0	; select bank0
  5155  0187  00AE               	movwf	CopyStageData@source
  5156  0188  3183  232B  3180   	fcall	_CopyStageData
  5157  018B  0020               	movlb	0	; select bank0
  5158  018C  082D               	movf	?_CopyStageData+1,w
  5159  018D  00B8               	movwf	AppendStage@new_stage+1
  5160  018E  082C               	movf	?_CopyStageData,w
  5161  018F  00B7               	movwf	AppendStage@new_stage
  5162  0190  3182  2284  3180   	fcall	_AppendStage
  5163  0193                     l1919:	
  5164                           
  5165                           ;Pattern.c: 116:     }
  5166  0193  3001               	movlw	1
  5167  0194  0021               	movlb	1	; select bank1
  5168  0195  07AE               	addwf	InitWigwagPattern@i_770^(0+128),f
  5169  0196  3000               	movlw	0
  5170  0197  3DAF               	addwfc	(InitWigwagPattern@i_770+1)^(0+128),f
  5171  0198                     l1921:	
  5172  0198  082F               	movf	(InitWigwagPattern@i_770+1)^(0+128),w
  5173  0199  3A80               	xorlw	128
  5174  019A  0020               	movlb	0	; select bank0
  5175  019B  00BF               	movwf	??_InitWigwagPattern
  5176  019C  3080               	movlw	128
  5177  019D  023F               	subwf	??_InitWigwagPattern,w
  5178  019E  1D03               	skipz
  5179  019F  29A3               	goto	u865
  5180  01A0  3003               	movlw	3
  5181  01A1  0021               	movlb	1	; select bank1
  5182  01A2  022E               	subwf	InitWigwagPattern@i_770^(0+128),w
  5183  01A3                     u865:	
  5184  01A3  1C03               	skipc
  5185  01A4  29A6               	goto	u861
  5186  01A5  29A7               	goto	u860
  5187  01A6                     u861:	
  5188  01A6  294D               	goto	l1917
  5189  01A7                     u860:	
  5190  01A7                     l398:	
  5191  01A7  0008               	return
  5192  01A8                     __end_of_InitWigwagPattern:	
  5193                           
  5194                           	psect	text13
  5195  032B                     __ptext13:	
  5196 ;; *************** function _CopyStageData *****************
  5197 ;; Defined at:
  5198 ;;		line 51 in file "Pattern.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  dest            2   12[BANK0 ] PTR struct Stage
  5201 ;;		 -> stage_stash(320), NULL(0), 
  5202 ;;  source          2   14[BANK0 ] PTR struct Stage
  5203 ;;		 -> stage_stash(320), NULL(0), 
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;  i               2   19[BANK0 ] int 
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  2   12[BANK0 ] PTR struct Stage
  5208 ;; Registers used:
  5209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5215 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5217 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5218 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5219 ;;Total ram usage:        9 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; Hardware stack levels required when called:    4
  5222 ;; This function calls:
  5223 ;;		Nothing
  5224 ;; This function is called by:
  5225 ;;		_InitWigwagPattern
  5226 ;;		_CopyStage
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           
  5231                           ;psect for function _CopyStageData
  5232  032B                     _CopyStageData:	
  5233  032B                     l1849:	
  5234                           ;incstack = 0
  5235                           ; Regs used in _CopyStageData: [wreg-fsr1h+status,2+status,0]
  5236                           
  5237                           
  5238                           ;Pattern.c: 51: struct Stage* CopyStageData( struct Stage* dest, struct Stage* source );
      +                          Pattern.c: 52: {;Pattern.c: 53:     for( int i = 0; i < NUM_LIGHTS; i++ )
  5239  032B  0020               	movlb	0	; select bank0
  5240  032C  01B3               	clrf	CopyStageData@i
  5241  032D  01B4               	clrf	CopyStageData@i+1
  5242  032E                     l1855:	
  5243                           
  5244                           ;Pattern.c: 54:         dest->light_states[i] = source->light_states[i];
  5245  032E  0020               	movlb	0	; select bank0
  5246  032F  0833               	movf	CopyStageData@i,w
  5247  0330  072E               	addwf	CopyStageData@source,w
  5248  0331  0086               	movwf	6
  5249  0332  0834               	movf	CopyStageData@i+1,w
  5250  0333  3D2F               	addwfc	CopyStageData@source+1,w
  5251  0334  0087               	movwf	7
  5252  0335  0801               	movf	1,w
  5253  0336  00B0               	movwf	??_CopyStageData
  5254  0337  0833               	movf	CopyStageData@i,w
  5255  0338  072C               	addwf	CopyStageData@dest,w
  5256  0339  00B1               	movwf	??_CopyStageData+1
  5257  033A  0834               	movf	CopyStageData@i+1,w
  5258  033B  3D2D               	addwfc	CopyStageData@dest+1,w
  5259  033C  00B2               	movwf	??_CopyStageData+2
  5260  033D  0831               	movf	??_CopyStageData+1,w
  5261  033E  0086               	movwf	6
  5262  033F  0832               	movf	??_CopyStageData+2,w
  5263  0340  0087               	movwf	7
  5264  0341  0830               	movf	??_CopyStageData,w
  5265  0342  0081               	movwf	1
  5266  0343                     l1857:	
  5267  0343  3001               	movlw	1
  5268  0344  07B3               	addwf	CopyStageData@i,f
  5269  0345  3000               	movlw	0
  5270  0346  3DB4               	addwfc	CopyStageData@i+1,f
  5271  0347                     l1859:	
  5272  0347  0834               	movf	CopyStageData@i+1,w
  5273  0348  3A80               	xorlw	128
  5274  0349  00B0               	movwf	??_CopyStageData
  5275  034A  3080               	movlw	128
  5276  034B  0230               	subwf	??_CopyStageData,w
  5277  034C  1D03               	skipz
  5278  034D  2B50               	goto	u825
  5279  034E  3004               	movlw	4
  5280  034F  0233               	subwf	CopyStageData@i,w
  5281  0350                     u825:	
  5282  0350  1C03               	skipc
  5283  0351  2B53               	goto	u821
  5284  0352  2B54               	goto	u820
  5285  0353                     u821:	
  5286  0353  2B2E               	goto	l1855
  5287  0354                     u820:	
  5288  0354                     l1861:	
  5289                           
  5290                           ;Pattern.c: 55:     dest->time_ms = source->time_ms;
  5291  0354  0020               	movlb	0	; select bank0
  5292  0355  082E               	movf	CopyStageData@source,w
  5293  0356  0086               	movwf	6
  5294  0357  082F               	movf	CopyStageData@source+1,w
  5295  0358  0087               	movwf	7
  5296  0359  3144               	addfsr 1,4
  5297  035A  082C               	movf	CopyStageData@dest,w
  5298  035B  0084               	movwf	4
  5299  035C  082D               	movf	CopyStageData@dest+1,w
  5300  035D  0085               	movwf	5
  5301  035E  3104               	addfsr 0,4
  5302  035F  3F40               	moviw [0]fsr1
  5303  0360  3F80               	movwi [0]fsr0
  5304  0361  3F41               	moviw [1]fsr1
  5305  0362  3F81               	movwi [1]fsr0
  5306  0363                     l1863:	
  5307  0363                     l373:	
  5308                           ;Pattern.c: 56:     return dest;
  5309                           
  5310  0363  0008               	return
  5311  0364                     __end_of_CopyStageData:	
  5312                           
  5313                           	psect	text14
  5314  0364                     __ptext14:	
  5315 ;; *************** function _ConstructStage *****************
  5316 ;; Defined at:
  5317 ;;		line 35 in file "Pattern.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;  states          1    wreg     PTR const _Bool 
  5320 ;;		 -> InitWigwagPattern@right_side_states(4), InitWigwagPattern@left_side_states(4), 
  5321 ;;  time_ms         2   12[BANK0 ] const unsigned short 
  5322 ;;  next            1   14[BANK0 ] PTR struct Stage
  5323 ;;		 -> NULL(0), 
  5324 ;; Auto vars:     Size  Location     Type
  5325 ;;  states          1   15[BANK0 ] PTR const _Bool 
  5326 ;;		 -> InitWigwagPattern@right_side_states(4), InitWigwagPattern@left_side_states(4), 
  5327 ;;  new_stage       2   16[BANK0 ] PTR struct Stage
  5328 ;;		 -> stage_stash(320), NULL(0), 
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  2   12[BANK0 ] PTR struct Stage
  5331 ;; Registers used:
  5332 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5338 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5339 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5341 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5342 ;;Total ram usage:        7 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:    6
  5345 ;; This function calls:
  5346 ;;		_AssignLightStates
  5347 ;;		_NewStage
  5348 ;; This function is called by:
  5349 ;;		_InitWigwagPattern
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           
  5354                           ;psect for function _ConstructStage
  5355  0364                     _ConstructStage:	
  5356                           
  5357                           ;incstack = 0
  5358                           ; Regs used in _ConstructStage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5359                           ;ConstructStage@states stored from wreg
  5360  0364  0020               	movlb	0	; select bank0
  5361  0365  00AF               	movwf	ConstructStage@states
  5362  0366                     l1839:	
  5363                           
  5364                           ;Pattern.c: 35: struct Stage* ConstructStage( const _Bool states[NUM_LIGHTS], const uint
      +                           time_ms, struct Stage* next );Pattern.c: 36: {;Pattern.c: 37:     struct Stage* new_sta
      +                          ge = NewStage();
  5365  0366  3182  22DC  3183   	fcall	_NewStage
  5366  0369  0878               	movf	?_NewStage+1,w
  5367  036A  0020               	movlb	0	; select bank0
  5368  036B  00B1               	movwf	ConstructStage@new_stage+1
  5369  036C  0877               	movf	?_NewStage,w
  5370  036D  00B0               	movwf	ConstructStage@new_stage
  5371                           
  5372                           ;Pattern.c: 38:     AssignLightStates( new_stage, states );
  5373  036E  0831               	movf	ConstructStage@new_stage+1,w
  5374  036F  00F3               	movwf	AssignLightStates@stage+1
  5375  0370  0830               	movf	ConstructStage@new_stage,w
  5376  0371  00F2               	movwf	AssignLightStates@stage
  5377  0372  082F               	movf	ConstructStage@states,w
  5378  0373  00F9               	movwf	??_ConstructStage
  5379  0374  0879               	movf	??_ConstructStage,w
  5380  0375  00F4               	movwf	AssignLightStates@states
  5381  0376  3183  23E9  3183   	fcall	_AssignLightStates
  5382  0379                     l1841:	
  5383                           
  5384                           ;Pattern.c: 39:     new_stage->time_ms = time_ms;
  5385  0379  0020               	movlb	0	; select bank0
  5386  037A  0830               	movf	ConstructStage@new_stage,w
  5387  037B  0086               	movwf	6
  5388  037C  0831               	movf	ConstructStage@new_stage+1,w
  5389  037D  0087               	movwf	7
  5390  037E  3144               	addfsr 1,4
  5391  037F  082C               	movf	ConstructStage@time_ms,w
  5392  0380  3FC0               	movwi [0]fsr1
  5393  0381  082D               	movf	ConstructStage@time_ms+1,w
  5394  0382  3FC1               	movwi [1]fsr1
  5395  0383                     l1843:	
  5396                           
  5397                           ;Pattern.c: 40:     new_stage->next = next;
  5398  0383  0830               	movf	ConstructStage@new_stage,w
  5399  0384  0086               	movwf	6
  5400  0385  0831               	movf	ConstructStage@new_stage+1,w
  5401  0386  0087               	movwf	7
  5402  0387  3146               	addfsr 1,6
  5403  0388  082E               	movf	ConstructStage@next,w
  5404  0389  3FC0               	movwi [0]fsr1
  5405  038A  3000               	movlw	0
  5406  038B  3FC1               	movwi [1]fsr1
  5407  038C                     l1845:	
  5408                           
  5409                           ;Pattern.c: 41:     return new_stage;
  5410  038C  0831               	movf	ConstructStage@new_stage+1,w
  5411  038D  00AD               	movwf	?_ConstructStage+1
  5412  038E  0830               	movf	ConstructStage@new_stage,w
  5413  038F  00AC               	movwf	?_ConstructStage
  5414  0390                     l365:	
  5415  0390  0008               	return
  5416  0391                     __end_of_ConstructStage:	
  5417                           
  5418                           	psect	text15
  5419  02DC                     __ptext15:	
  5420 ;; *************** function _NewStage *****************
  5421 ;; Defined at:
  5422 ;;		line 21 in file "Pattern.c"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;		None
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;  init_states     4    6[BANK0 ] _Bool [4]
  5427 ;;  new_stage       2   10[BANK0 ] PTR struct Stage
  5428 ;;		 -> stage_stash(320), 
  5429 ;; Return value:  Size  Location     Type
  5430 ;;                  2    7[COMMON] PTR struct Stage
  5431 ;; Registers used:
  5432 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5439 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5440 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5441 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5442 ;;Total ram usage:       10 bytes
  5443 ;; Hardware stack levels used:    1
  5444 ;; Hardware stack levels required when called:    5
  5445 ;; This function calls:
  5446 ;;		_AssignLightStates
  5447 ;; This function is called by:
  5448 ;;		_ConstructStage
  5449 ;;		_InitWigwagPattern
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           
  5454                           ;psect for function _NewStage
  5455  02DC                     _NewStage:	
  5456  02DC                     l1789:	
  5457                           ;incstack = 0
  5458                           ; Regs used in _NewStage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5459                           
  5460                           
  5461                           ;Pattern.c: 23:     if ( stage_list_iter >= MAX_STAGES )
  5462  02DC  3000               	movlw	0
  5463  02DD  0020               	movlb	0	; select bank0
  5464  02DE  0246               	subwf	_stage_list_iter+1,w
  5465  02DF  3028               	movlw	40
  5466  02E0  1903               	skipnz
  5467  02E1  0245               	subwf	_stage_list_iter,w
  5468  02E2  1C03               	skipc
  5469  02E3  2AE5               	goto	u691
  5470  02E4  2AE6               	goto	u690
  5471  02E5                     u691:	
  5472  02E5  2AE9               	goto	l1795
  5473  02E6                     u690:	
  5474  02E6                     l1791:	
  5475                           
  5476                           ;Pattern.c: 24:         return ((void*)0);
  5477  02E6  01F7               	clrf	?_NewStage
  5478  02E7  01F8               	clrf	?_NewStage+1
  5479  02E8  2B2A               	goto	l360
  5480  02E9                     l1795:	
  5481                           
  5482                           ;Pattern.c: 26:     struct Stage* new_stage = &stage_stash[ stage_list_iter++ ];
  5483  02E9  0846               	movf	_stage_list_iter+1,w
  5484  02EA  00A3               	movwf	??_NewStage+1
  5485  02EB  0845               	movf	_stage_list_iter,w
  5486  02EC  00A2               	movwf	??_NewStage
  5487  02ED  35A2               	lslf	??_NewStage,f
  5488  02EE  0DA3               	rlf	??_NewStage+1,f
  5489  02EF  35A2               	lslf	??_NewStage,f
  5490  02F0  0DA3               	rlf	??_NewStage+1,f
  5491  02F1  35A2               	lslf	??_NewStage,f
  5492  02F2  0DA3               	rlf	??_NewStage+1,f
  5493  02F3  30B0               	movlw	176
  5494  02F4  00A4               	movwf	??_NewStage+2
  5495  02F5  3022               	movlw	34
  5496  02F6  00A5               	movwf	??_NewStage+3
  5497  02F7  0822               	movf	??_NewStage,w
  5498  02F8  0724               	addwf	??_NewStage+2,w
  5499  02F9  00AA               	movwf	NewStage@new_stage
  5500  02FA  0823               	movf	??_NewStage+1,w
  5501  02FB  3D25               	addwfc	??_NewStage+3,w
  5502  02FC  00AB               	movwf	NewStage@new_stage+1
  5503  02FD                     l1797:	
  5504  02FD  3001               	movlw	1
  5505  02FE  07C5               	addwf	_stage_list_iter,f
  5506  02FF  3000               	movlw	0
  5507  0300  3DC6               	addwfc	_stage_list_iter+1,f
  5508  0301                     l1799:	
  5509                           
  5510                           ;Pattern.c: 27:     _Bool init_states[NUM_LIGHTS] = { 0, 0, 0, 0 };
  5511  0301  3000               	movlw	0
  5512  0302  00A9               	movwf	NewStage@init_states+3
  5513  0303  3000               	movlw	0
  5514  0304  00A8               	movwf	NewStage@init_states+2
  5515  0305  3000               	movlw	0
  5516  0306  00A7               	movwf	NewStage@init_states+1
  5517  0307  3000               	movlw	0
  5518  0308  00A6               	movwf	NewStage@init_states
  5519  0309                     l1801:	
  5520                           
  5521                           ;Pattern.c: 28:     AssignLightStates( new_stage, init_states );
  5522  0309  082B               	movf	NewStage@new_stage+1,w
  5523  030A  00F3               	movwf	AssignLightStates@stage+1
  5524  030B  082A               	movf	NewStage@new_stage,w
  5525  030C  00F2               	movwf	AssignLightStates@stage
  5526  030D  3026               	movlw	(low (NewStage@init_states| 0))& (0+255)
  5527  030E  00A2               	movwf	??_NewStage
  5528  030F  0822               	movf	??_NewStage,w
  5529  0310  00F4               	movwf	AssignLightStates@states
  5530  0311  3183  23E9  3182   	fcall	_AssignLightStates
  5531  0314                     l1803:	
  5532                           
  5533                           ;Pattern.c: 29:     new_stage->time_ms = 160UL;
  5534  0314  0020               	movlb	0	; select bank0
  5535  0315  082A               	movf	NewStage@new_stage,w
  5536  0316  0086               	movwf	6
  5537  0317  082B               	movf	NewStage@new_stage+1,w
  5538  0318  0087               	movwf	7
  5539  0319  3144               	addfsr 1,4
  5540  031A  30A0               	movlw	160
  5541  031B  3FC0               	movwi [0]fsr1
  5542  031C  3000               	movlw	0
  5543  031D  3FC1               	movwi [1]fsr1
  5544  031E                     l1805:	
  5545                           
  5546                           ;Pattern.c: 30:     new_stage->next = ((void*)0);
  5547  031E  082A               	movf	NewStage@new_stage,w
  5548  031F  0086               	movwf	6
  5549  0320  082B               	movf	NewStage@new_stage+1,w
  5550  0321  0087               	movwf	7
  5551  0322  3146               	addfsr 1,6
  5552  0323  3000               	movlw	0
  5553  0324  3FC0               	movwi [0]fsr1
  5554  0325  3FC1               	movwi [1]fsr1
  5555  0326                     l1807:	
  5556                           
  5557                           ;Pattern.c: 32:     return new_stage;
  5558  0326  082B               	movf	NewStage@new_stage+1,w
  5559  0327  00F8               	movwf	?_NewStage+1
  5560  0328  082A               	movf	NewStage@new_stage,w
  5561  0329  00F7               	movwf	?_NewStage
  5562  032A                     l360:	
  5563  032A  0008               	return
  5564  032B                     __end_of_NewStage:	
  5565                           
  5566                           	psect	text16
  5567  03E9                     __ptext16:	
  5568 ;; *************** function _AssignLightStates *****************
  5569 ;; Defined at:
  5570 ;;		line 13 in file "Pattern.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;  stage           2    2[COMMON] PTR struct Stage
  5573 ;;		 -> stage_stash(320), NULL(0), 
  5574 ;;  states          1    4[COMMON] PTR const _Bool 
  5575 ;;		 -> InitWigwagPattern@right_side_states(4), InitWigwagPattern@left_side_states(4), NewStage@init_states(4), 
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  i               2    0[BANK0 ] unsigned short 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  1    wreg      void 
  5580 ;; Registers used:
  5581 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5587 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5588 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5589 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5590 ;;      Totals:         7       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5591 ;;Total ram usage:        9 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; Hardware stack levels required when called:    4
  5594 ;; This function calls:
  5595 ;;		Nothing
  5596 ;; This function is called by:
  5597 ;;		_NewStage
  5598 ;;		_ConstructStage
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           
  5603                           ;psect for function _AssignLightStates
  5604  03E9                     _AssignLightStates:	
  5605  03E9                     l1777:	
  5606                           ;incstack = 0
  5607                           ; Regs used in _AssignLightStates: [wreg+fsr1l+fsr1h+status,2+status,0]
  5608                           
  5609                           
  5610                           ;Pattern.c: 13: void AssignLightStates( struct Stage* stage, const _Bool states[ NUM_LIG
      +                          HTS ] );Pattern.c: 14: {;Pattern.c: 15:     for( uint i = 0; i < NUM_LIGHTS; i++ )
  5611  03E9  0020               	movlb	0	; select bank0
  5612  03EA  01A0               	clrf	AssignLightStates@i
  5613  03EB  01A1               	clrf	AssignLightStates@i+1
  5614  03EC                     l1783:	
  5615                           
  5616                           ;Pattern.c: 16:     {;Pattern.c: 17:         stage->light_states[i] = states[i];
  5617  03EC  0820               	movf	AssignLightStates@i,w
  5618  03ED  0774               	addwf	AssignLightStates@states,w
  5619  03EE  00F5               	movwf	??_AssignLightStates
  5620  03EF  0875               	movf	??_AssignLightStates,w
  5621  03F0  0086               	movwf	6
  5622  03F1  0187               	clrf	7
  5623  03F2  0801               	movf	1,w
  5624  03F3  00F6               	movwf	??_AssignLightStates+1
  5625  03F4  0820               	movf	AssignLightStates@i,w
  5626  03F5  0772               	addwf	AssignLightStates@stage,w
  5627  03F6  00F7               	movwf	??_AssignLightStates+2
  5628  03F7  0821               	movf	AssignLightStates@i+1,w
  5629  03F8  3D73               	addwfc	AssignLightStates@stage+1,w
  5630  03F9  00F8               	movwf	??_AssignLightStates+3
  5631  03FA  0877               	movf	??_AssignLightStates+2,w
  5632  03FB  0086               	movwf	6
  5633  03FC  0878               	movf	??_AssignLightStates+3,w
  5634  03FD  0087               	movwf	7
  5635  03FE  0876               	movf	??_AssignLightStates+1,w
  5636  03FF  0081               	movwf	1
  5637  0400                     l1785:	
  5638                           
  5639                           ;Pattern.c: 18:     }
  5640  0400  3001               	movlw	1
  5641  0401  07A0               	addwf	AssignLightStates@i,f
  5642  0402  3000               	movlw	0
  5643  0403  3DA1               	addwfc	AssignLightStates@i+1,f
  5644  0404                     l1787:	
  5645  0404  3000               	movlw	0
  5646  0405  0221               	subwf	AssignLightStates@i+1,w
  5647  0406  3004               	movlw	4
  5648  0407  1903               	skipnz
  5649  0408  0220               	subwf	AssignLightStates@i,w
  5650  0409  1C03               	skipc
  5651  040A  2C0C               	goto	u681
  5652  040B  2C0D               	goto	u680
  5653  040C                     u681:	
  5654  040C  2BEC               	goto	l1783
  5655  040D                     u680:	
  5656  040D                     l356:	
  5657  040D  0008               	return
  5658  040E                     __end_of_AssignLightStates:	
  5659                           
  5660                           	psect	text17
  5661  0284                     __ptext17:	
  5662 ;; *************** function _AppendStage *****************
  5663 ;; Defined at:
  5664 ;;		line 59 in file "Pattern.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;  head            2   21[BANK0 ] PTR struct Stage
  5667 ;;		 -> stage_stash(320), NULL(0), 
  5668 ;;  new_stage       2   23[BANK0 ] PTR struct Stage
  5669 ;;		 -> stage_stash(320), NULL(0), 
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;  last_stage      2   27[BANK0 ] PTR struct Stage
  5672 ;;		 -> stage_stash(320), NULL(0), 
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1    wreg      void 
  5675 ;; Registers used:
  5676 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5682 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5683 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5684 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5685 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5686 ;;Total ram usage:        8 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; Hardware stack levels required when called:    4
  5689 ;; This function calls:
  5690 ;;		Nothing
  5691 ;; This function is called by:
  5692 ;;		_InitWigwagPattern
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           
  5697                           ;psect for function _AppendStage
  5698  0284                     _AppendStage:	
  5699  0284                     l1867:	
  5700                           ;incstack = 0
  5701                           ; Regs used in _AppendStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  5702                           
  5703                           
  5704                           ;Pattern.c: 59: void AppendStage( struct Stage* head, struct Stage* new_stage );Pattern.
      +                          c: 60: {;Pattern.c: 61:     if ( head->next == ((void*)0) )
  5705  0284  0020               	movlb	0	; select bank0
  5706  0285  0835               	movf	AppendStage@head,w
  5707  0286  0086               	movwf	6
  5708  0287  0836               	movf	AppendStage@head+1,w
  5709  0288  0087               	movwf	7
  5710  0289  3146               	addfsr 1,6
  5711  028A  0016               	moviw fsr1++
  5712  028B  0401               	iorwf	1,w
  5713  028C  1D03               	btfss	3,2
  5714  028D  2A8F               	goto	u831
  5715  028E  2A90               	goto	u830
  5716  028F                     u831:	
  5717  028F  2AA3               	goto	l1871
  5718  0290                     u830:	
  5719  0290                     l1869:	
  5720                           
  5721                           ;Pattern.c: 62:     {;Pattern.c: 63:         head->next = new_stage;
  5722  0290  0835               	movf	AppendStage@head,w
  5723  0291  0086               	movwf	6
  5724  0292  0836               	movf	AppendStage@head+1,w
  5725  0293  0087               	movwf	7
  5726  0294  3146               	addfsr 1,6
  5727  0295  0837               	movf	AppendStage@new_stage,w
  5728  0296  3FC0               	movwi [0]fsr1
  5729  0297  0838               	movf	AppendStage@new_stage+1,w
  5730  0298  3FC1               	movwi [1]fsr1
  5731                           
  5732                           ;Pattern.c: 64:         new_stage->next = head;
  5733  0299  0837               	movf	AppendStage@new_stage,w
  5734  029A  0086               	movwf	6
  5735  029B  0838               	movf	AppendStage@new_stage+1,w
  5736  029C  0087               	movwf	7
  5737  029D  3146               	addfsr 1,6
  5738  029E  0835               	movf	AppendStage@head,w
  5739  029F  3FC0               	movwi [0]fsr1
  5740  02A0  0836               	movf	AppendStage@head+1,w
  5741  02A1  3FC1               	movwi [1]fsr1
  5742                           
  5743                           ;Pattern.c: 65:     }
  5744  02A2  2ADB               	goto	l381
  5745  02A3                     l1871:	
  5746                           
  5747                           ;Pattern.c: 67:     {;Pattern.c: 68:         struct Stage* last_stage = head->next;
  5748  02A3  0835               	movf	AppendStage@head,w
  5749  02A4  0086               	movwf	6
  5750  02A5  0836               	movf	AppendStage@head+1,w
  5751  02A6  0087               	movwf	7
  5752  02A7  3146               	addfsr 1,6
  5753  02A8  3F40               	moviw [0]fsr1
  5754  02A9  00BB               	movwf	AppendStage@last_stage
  5755  02AA  3F41               	moviw [1]fsr1
  5756  02AB  00BC               	movwf	AppendStage@last_stage+1
  5757                           
  5758                           ;Pattern.c: 69:         while( last_stage->next != head )
  5759  02AC  2AB6               	goto	l1875
  5760  02AD                     l1873:	
  5761                           
  5762                           ;Pattern.c: 70:             last_stage = last_stage->next;
  5763  02AD  083B               	movf	AppendStage@last_stage,w
  5764  02AE  0086               	movwf	6
  5765  02AF  083C               	movf	AppendStage@last_stage+1,w
  5766  02B0  0087               	movwf	7
  5767  02B1  3146               	addfsr 1,6
  5768  02B2  3F40               	moviw [0]fsr1
  5769  02B3  00BB               	movwf	AppendStage@last_stage
  5770  02B4  3F41               	moviw [1]fsr1
  5771  02B5  00BC               	movwf	AppendStage@last_stage+1
  5772  02B6                     l1875:	
  5773                           
  5774                           ;Pattern.c: 69:         while( last_stage->next != head )
  5775  02B6  083B               	movf	AppendStage@last_stage,w
  5776  02B7  0086               	movwf	6
  5777  02B8  083C               	movf	AppendStage@last_stage+1,w
  5778  02B9  0087               	movwf	7
  5779  02BA  3146               	addfsr 1,6
  5780  02BB  3F40               	moviw [0]fsr1
  5781  02BC  00B9               	movwf	??_AppendStage
  5782  02BD  3F41               	moviw [1]fsr1
  5783  02BE  00BA               	movwf	??_AppendStage+1
  5784  02BF  0836               	movf	AppendStage@head+1,w
  5785  02C0  063A               	xorwf	??_AppendStage+1,w
  5786  02C1  1D03               	skipz
  5787  02C2  2AC5               	goto	u845
  5788  02C3  0835               	movf	AppendStage@head,w
  5789  02C4  0639               	xorwf	??_AppendStage,w
  5790  02C5                     u845:	
  5791  02C5  1D03               	skipz
  5792  02C6  2AC8               	goto	u841
  5793  02C7  2AC9               	goto	u840
  5794  02C8                     u841:	
  5795  02C8  2AAD               	goto	l1873
  5796  02C9                     u840:	
  5797  02C9                     l1877:	
  5798                           
  5799                           ;Pattern.c: 73:         last_stage->next = new_stage;
  5800  02C9  083B               	movf	AppendStage@last_stage,w
  5801  02CA  0086               	movwf	6
  5802  02CB  083C               	movf	AppendStage@last_stage+1,w
  5803  02CC  0087               	movwf	7
  5804  02CD  3146               	addfsr 1,6
  5805  02CE  0837               	movf	AppendStage@new_stage,w
  5806  02CF  3FC0               	movwi [0]fsr1
  5807  02D0  0838               	movf	AppendStage@new_stage+1,w
  5808  02D1  3FC1               	movwi [1]fsr1
  5809                           
  5810                           ;Pattern.c: 74:         new_stage->next = head;
  5811  02D2  0837               	movf	AppendStage@new_stage,w
  5812  02D3  0086               	movwf	6
  5813  02D4  0838               	movf	AppendStage@new_stage+1,w
  5814  02D5  0087               	movwf	7
  5815  02D6  3146               	addfsr 1,6
  5816  02D7  0835               	movf	AppendStage@head,w
  5817  02D8  3FC0               	movwi [0]fsr1
  5818  02D9  0836               	movf	AppendStage@head+1,w
  5819  02DA  3FC1               	movwi [1]fsr1
  5820  02DB                     l381:	
  5821  02DB  0008               	return
  5822  02DC                     __end_of_AppendStage:	
  5823                           
  5824                           	psect	text18
  5825  0391                     __ptext18:	
  5826 ;; *************** function _PatternCycleInputChanged *****************
  5827 ;; Defined at:
  5828 ;;		line 10 in file "PatternSelector.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;		None
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;  delay_count     2    4[COMMON] unsigned short 
  5833 ;; Return value:  Size  Location     Type
  5834 ;;                  1    wreg      _Bool 
  5835 ;; Registers used:
  5836 ;;		wreg, status,2, status,0
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5843 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5844 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5845 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5846 ;;Total ram usage:        4 bytes
  5847 ;; Hardware stack levels used:    1
  5848 ;; Hardware stack levels required when called:    4
  5849 ;; This function calls:
  5850 ;;		Nothing
  5851 ;; This function is called by:
  5852 ;;		_main
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           
  5857                           ;psect for function _PatternCycleInputChanged
  5858  0391                     _PatternCycleInputChanged:	
  5859  0391                     l1685:	
  5860                           ;incstack = 0
  5861                           ; Regs used in _PatternCycleInputChanged: [wreg+status,2+status,0]
  5862                           
  5863                           
  5864                           ;PatternSelector.c: 12:     if ( cur_pc_input_state != last_pc_input_state )
  5865  0391  087B               	movf	_cur_pc_input_state,w
  5866  0392  067A               	xorwf	_last_pc_input_state,w
  5867  0393  1903               	skipnz
  5868  0394  2B96               	goto	u581
  5869  0395  2B97               	goto	u580
  5870  0396                     u581:	
  5871  0396  2BAA               	goto	l1693
  5872  0397                     u580:	
  5873  0397                     l1687:	
  5874                           
  5875                           ;PatternSelector.c: 13:     {;PatternSelector.c: 14:         uint delay_count = 0;
  5876  0397  01F4               	clrf	PatternCycleInputChanged@delay_count
  5877  0398  01F5               	clrf	PatternCycleInputChanged@delay_count+1
  5878                           
  5879                           ;PatternSelector.c: 16:         while ( delay_count++ < 3 )
  5880  0399  2BAC               	goto	l1697
  5881  039A                     l1689:	
  5882                           
  5883                           ;PatternSelector.c: 17:         {;PatternSelector.c: 18:             _delay((unsigned lo
      +                          ng)((10)*(1000000/4000.0)));
  5884  039A  3004               	movlw	4
  5885  039B  00F2               	movwf	??_PatternCycleInputChanged
  5886  039C  303E               	movlw	62
  5887  039D                     u897:	
  5888  039D  0B89               	decfsz	9,f
  5889  039E  2B9D               	goto	u897
  5890  039F  0BF2               	decfsz	??_PatternCycleInputChanged,f
  5891  03A0  2B9D               	goto	u897
  5892  03A1                     l1691:	
  5893                           
  5894                           ;PatternSelector.c: 20:             if( PORTCbits.RC5 != cur_pc_input_state )
  5895  03A1  0020               	movlb	0	; select bank0
  5896  03A2  0E0E               	swapf	14,w	;volatile
  5897  03A3  0C89               	rrf	9,f
  5898  03A4  3901               	andlw	1
  5899  03A5  067B               	xorwf	_cur_pc_input_state,w
  5900  03A6  1903               	skipnz
  5901  03A7  2BA9               	goto	u591
  5902  03A8  2BAA               	goto	u590
  5903  03A9                     u591:	
  5904  03A9  2BAC               	goto	l1697
  5905  03AA                     u590:	
  5906  03AA                     l1693:	
  5907                           
  5908                           ;PatternSelector.c: 21:             {;PatternSelector.c: 22:                 return 0;
  5909  03AA  3000               	movlw	0
  5910  03AB  2BBD               	goto	l303
  5911  03AC                     l1697:	
  5912                           
  5913                           ;PatternSelector.c: 16:         while ( delay_count++ < 3 )
  5914  03AC  0875               	movf	PatternCycleInputChanged@delay_count+1,w
  5915  03AD  00F3               	movwf	??_PatternCycleInputChanged+1
  5916  03AE  0874               	movf	PatternCycleInputChanged@delay_count,w
  5917  03AF  00F2               	movwf	??_PatternCycleInputChanged
  5918  03B0  0AF4               	incf	PatternCycleInputChanged@delay_count,f
  5919  03B1  1903               	skipnz
  5920  03B2  0AF5               	incf	PatternCycleInputChanged@delay_count+1,f
  5921  03B3  3000               	movlw	0
  5922  03B4  0273               	subwf	??_PatternCycleInputChanged+1,w
  5923  03B5  3003               	movlw	3
  5924  03B6  1903               	skipnz
  5925  03B7  0272               	subwf	??_PatternCycleInputChanged,w
  5926  03B8  1C03               	skipc
  5927  03B9  2BBB               	goto	u601
  5928  03BA  2BBC               	goto	u600
  5929  03BB                     u601:	
  5930  03BB  2B9A               	goto	l1689
  5931  03BC                     u600:	
  5932  03BC                     l1703:	
  5933                           
  5934                           ;PatternSelector.c: 29:     return 1;
  5935  03BC  3001               	movlw	1
  5936  03BD                     l303:	
  5937  03BD  0008               	return
  5938  03BE                     __end_of_PatternCycleInputChanged:	
  5939                           
  5940                           	psect	text19
  5941  0219                     __ptext19:	
  5942 ;; *************** function _FlashPattern *****************
  5943 ;; Defined at:
  5944 ;;		line 11 in file "PatternFlasher.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;  pattern         2    6[COMMON] PTR struct Pattern
  5947 ;;		 -> Wigwag(3), 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;  current_time    2    8[COMMON] unsigned short 
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  1    wreg      void 
  5952 ;; Registers used:
  5953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5959 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5960 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5961 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5962 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5963 ;;Total ram usage:        8 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    5
  5966 ;; This function calls:
  5967 ;;		_SetLight
  5968 ;; This function is called by:
  5969 ;;		_main
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           
  5974                           ;psect for function _FlashPattern
  5975  0219                     _FlashPattern:	
  5976  0219                     l1937:	
  5977                           ;incstack = 0
  5978                           ; Regs used in _FlashPattern: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5979                           
  5980                           
  5981                           ;PatternFlasher.c: 11: void FlashPattern( struct Pattern* pattern );PatternFlasher.c: 12
      +                          : {;PatternFlasher.c: 13:     uint current_time = cur_ms;
  5982  0219  0020               	movlb	0	; select bank0
  5983  021A  084C               	movf	_cur_ms+1,w	;volatile
  5984  021B  00F9               	movwf	FlashPattern@current_time+1
  5985  021C  084B               	movf	_cur_ms,w	;volatile
  5986  021D  00F8               	movwf	FlashPattern@current_time
  5987  021E                     l1939:	
  5988                           
  5989                           ;PatternFlasher.c: 15:     if ( current_time - start_time > current_stage->time_ms )
  5990  021E  0841               	movf	_start_time,w
  5991  021F  0278               	subwf	FlashPattern@current_time,w
  5992  0220  00A0               	movwf	??_FlashPattern
  5993  0221  0842               	movf	_start_time+1,w
  5994  0222  3B79               	subwfb	FlashPattern@current_time+1,w
  5995  0223  00A1               	movwf	??_FlashPattern+1
  5996  0224  0843               	movf	_current_stage,w
  5997  0225  0086               	movwf	6
  5998  0226  0844               	movf	_current_stage+1,w
  5999  0227  0087               	movwf	7
  6000  0228  3144               	addfsr 1,4
  6001  0229  3F40               	moviw [0]fsr1
  6002  022A  00A2               	movwf	??_FlashPattern+2
  6003  022B  3F41               	moviw [1]fsr1
  6004  022C  00A3               	movwf	??_FlashPattern+3
  6005  022D  0821               	movf	??_FlashPattern+1,w
  6006  022E  0223               	subwf	??_FlashPattern+3,w
  6007  022F  1D03               	skipz
  6008  0230  2A33               	goto	u875
  6009  0231  0820               	movf	??_FlashPattern,w
  6010  0232  0222               	subwf	??_FlashPattern+2,w
  6011  0233                     u875:	
  6012  0233  1803               	skipnc
  6013  0234  2A36               	goto	u871
  6014  0235  2A37               	goto	u870
  6015  0236                     u871:	
  6016  0236  2A46               	goto	l1947
  6017  0237                     u870:	
  6018  0237                     l1941:	
  6019                           
  6020                           ;PatternFlasher.c: 16:     {;PatternFlasher.c: 17:         current_stage = current_stage
      +                          ->next;
  6021  0237  0843               	movf	_current_stage,w
  6022  0238  0086               	movwf	6
  6023  0239  0844               	movf	_current_stage+1,w
  6024  023A  0087               	movwf	7
  6025  023B  3146               	addfsr 1,6
  6026  023C  3F40               	moviw [0]fsr1
  6027  023D  00C3               	movwf	_current_stage
  6028  023E  3F41               	moviw [1]fsr1
  6029  023F  00C4               	movwf	_current_stage+1
  6030  0240                     l1943:	
  6031                           
  6032                           ;PatternFlasher.c: 18:         start_time = current_time;
  6033  0240  0879               	movf	FlashPattern@current_time+1,w
  6034  0241  00C2               	movwf	_start_time+1
  6035  0242  0878               	movf	FlashPattern@current_time,w
  6036  0243  00C1               	movwf	_start_time
  6037  0244                     l1945:	
  6038                           
  6039                           ;PatternFlasher.c: 19:         update_stage = 1;
  6040  0244  01CF               	clrf	_update_stage
  6041  0245  0ACF               	incf	_update_stage,f
  6042  0246                     l1947:	
  6043                           
  6044                           ;PatternFlasher.c: 23:     if ( update_stage == 1 )
  6045  0246  034F               	decf	_update_stage,w
  6046  0247  1D03               	btfss	3,2
  6047  0248  2A4A               	goto	u881
  6048  0249  2A4B               	goto	u880
  6049  024A                     u881:	
  6050  024A  2A83               	goto	l431
  6051  024B                     u880:	
  6052  024B                     l1949:	
  6053                           
  6054                           ;PatternFlasher.c: 24:     {;PatternFlasher.c: 25:         SetLight( L1, current_stage->
      +                          light_states[L1] );
  6055  024B  0843               	movf	_current_stage,w
  6056  024C  0086               	movwf	6
  6057  024D  0844               	movf	_current_stage+1,w
  6058  024E  0087               	movwf	7
  6059  024F  0801               	movf	1,w
  6060  0250  00A0               	movwf	??_FlashPattern
  6061  0251  0820               	movf	??_FlashPattern,w
  6062  0252  00F2               	movwf	SetLight@state
  6063  0253  3000               	movlw	0
  6064  0254  3181  21A8  3182   	fcall	_SetLight
  6065                           
  6066                           ;PatternFlasher.c: 26:         SetLight( L2, current_stage->light_states[L2] );
  6067  0257  0020               	movlb	0	; select bank0
  6068  0258  0843               	movf	_current_stage,w
  6069  0259  0086               	movwf	6
  6070  025A  0844               	movf	_current_stage+1,w
  6071  025B  0087               	movwf	7
  6072  025C  3141               	addfsr 1,1
  6073  025D  0801               	movf	1,w
  6074  025E  00A0               	movwf	??_FlashPattern
  6075  025F  0820               	movf	??_FlashPattern,w
  6076  0260  00F2               	movwf	SetLight@state
  6077  0261  3001               	movlw	1
  6078  0262  3181  21A8  3182   	fcall	_SetLight
  6079                           
  6080                           ;PatternFlasher.c: 27:         SetLight( L3, current_stage->light_states[L3] );
  6081  0265  0020               	movlb	0	; select bank0
  6082  0266  0843               	movf	_current_stage,w
  6083  0267  0086               	movwf	6
  6084  0268  0844               	movf	_current_stage+1,w
  6085  0269  0087               	movwf	7
  6086  026A  3142               	addfsr 1,2
  6087  026B  0801               	movf	1,w
  6088  026C  00A0               	movwf	??_FlashPattern
  6089  026D  0820               	movf	??_FlashPattern,w
  6090  026E  00F2               	movwf	SetLight@state
  6091  026F  3002               	movlw	2
  6092  0270  3181  21A8  3182   	fcall	_SetLight
  6093                           
  6094                           ;PatternFlasher.c: 28:         SetLight( L4, current_stage->light_states[L4] );
  6095  0273  0020               	movlb	0	; select bank0
  6096  0274  0843               	movf	_current_stage,w
  6097  0275  0086               	movwf	6
  6098  0276  0844               	movf	_current_stage+1,w
  6099  0277  0087               	movwf	7
  6100  0278  3143               	addfsr 1,3
  6101  0279  0801               	movf	1,w
  6102  027A  00A0               	movwf	??_FlashPattern
  6103  027B  0820               	movf	??_FlashPattern,w
  6104  027C  00F2               	movwf	SetLight@state
  6105  027D  3003               	movlw	3
  6106  027E  3181  21A8  3182   	fcall	_SetLight
  6107  0281                     l1951:	
  6108                           
  6109                           ;PatternFlasher.c: 29:         update_stage = 0;
  6110  0281  0020               	movlb	0	; select bank0
  6111  0282  01CF               	clrf	_update_stage
  6112  0283                     l431:	
  6113  0283  0008               	return
  6114  0284                     __end_of_FlashPattern:	
  6115                           
  6116                           	psect	text20
  6117  01A8                     __ptext20:	
  6118 ;; *************** function _SetLight *****************
  6119 ;; Defined at:
  6120 ;;		line 12 in file "Lights.c"
  6121 ;; Parameters:    Size  Location     Type
  6122 ;;  light           1    wreg     const enum E39
  6123 ;;  state           1    2[COMMON] const _Bool 
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;  light           1    5[COMMON] const enum E39
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  1    wreg      void 
  6128 ;; Registers used:
  6129 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6135 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6136 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6137 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6138 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6139 ;;Total ram usage:        4 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:    4
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_SetOutputs
  6146 ;;		_FlashPattern
  6147 ;; This function uses a non-reentrant model
  6148 ;;
  6149                           
  6150                           
  6151                           ;psect for function _SetLight
  6152  01A8                     _SetLight:	
  6153                           
  6154                           ;incstack = 0
  6155                           ; Regs used in _SetLight: [wreg-fsr0h+status,2+status,0]
  6156                           ;SetLight@light stored from wreg
  6157  01A8  00F5               	movwf	SetLight@light
  6158  01A9                     l1811:	
  6159                           
  6160                           ;Lights.c: 12: void SetLight( const enum Light light, const _Bool state );Lights.c: 13: 
      +                          {;Lights.c: 15:     switch ( light )
  6161  01A9  2A02               	goto	l1833
  6162  01AA                     l1813:	
  6163                           
  6164                           ;Lights.c: 18:             if ( PORTCbits.RC1 != state )
  6165  01AA  0020               	movlb	0	; select bank0
  6166  01AB  0C0E               	rrf	14,w	;volatile
  6167  01AC  3901               	andlw	1
  6168  01AD  0672               	xorwf	SetLight@state,w
  6169  01AE  1903               	skipnz
  6170  01AF  29B1               	goto	u701
  6171  01B0  29B2               	goto	u700
  6172  01B1                     u701:	
  6173  01B1  2A18               	goto	l333
  6174  01B2                     u700:	
  6175  01B2                     l1815:	
  6176  01B2  1003               	clrc
  6177  01B3  0022               	movlb	2	; select bank2
  6178  01B4  1C8E               	btfss	14,1	;volatile
  6179  01B5  1403               	setc
  6180  01B6  1803               	btfsc	3,0
  6181  01B7  29B9               	goto	u711
  6182  01B8  29BC               	goto	u710
  6183  01B9                     u711:	
  6184  01B9  0022               	movlb	2	; select bank2
  6185  01BA  148E               	bsf	14,1	;volatile
  6186  01BB  29BE               	goto	u724
  6187  01BC                     u710:	
  6188  01BC  0022               	movlb	2	; select bank2
  6189  01BD  108E               	bcf	14,1	;volatile
  6190  01BE                     u724:	
  6191  01BE  2A18               	goto	l333
  6192  01BF                     l1817:	
  6193                           
  6194                           ;Lights.c: 22:             if ( PORTCbits.RC2 != state )
  6195  01BF  0020               	movlb	0	; select bank0
  6196  01C0  0C0E               	rrf	14,w	;volatile
  6197  01C1  0C89               	rrf	9,f
  6198  01C2  3901               	andlw	1
  6199  01C3  0672               	xorwf	SetLight@state,w
  6200  01C4  1903               	skipnz
  6201  01C5  29C7               	goto	u731
  6202  01C6  29C8               	goto	u730
  6203  01C7                     u731:	
  6204  01C7  2A18               	goto	l333
  6205  01C8                     u730:	
  6206  01C8                     l1819:	
  6207  01C8  1003               	clrc
  6208  01C9  0022               	movlb	2	; select bank2
  6209  01CA  1D0E               	btfss	14,2	;volatile
  6210  01CB  1403               	setc
  6211  01CC  1803               	btfsc	3,0
  6212  01CD  29CF               	goto	u741
  6213  01CE  29D2               	goto	u740
  6214  01CF                     u741:	
  6215  01CF  0022               	movlb	2	; select bank2
  6216  01D0  150E               	bsf	14,2	;volatile
  6217  01D1  29D4               	goto	u754
  6218  01D2                     u740:	
  6219  01D2  0022               	movlb	2	; select bank2
  6220  01D3  110E               	bcf	14,2	;volatile
  6221  01D4                     u754:	
  6222  01D4  2A18               	goto	l333
  6223  01D5                     l1821:	
  6224                           
  6225                           ;Lights.c: 26:             if ( PORTCbits.RC3 != state )
  6226  01D5  0020               	movlb	0	; select bank0
  6227  01D6  0C0E               	rrf	14,w	;volatile
  6228  01D7  00F3               	movwf	??_SetLight
  6229  01D8  0CF3               	rrf	??_SetLight,f
  6230  01D9  0C73               	rrf	??_SetLight,w
  6231  01DA  3901               	andlw	1
  6232  01DB  0672               	xorwf	SetLight@state,w
  6233  01DC  1903               	skipnz
  6234  01DD  29DF               	goto	u761
  6235  01DE  29E0               	goto	u760
  6236  01DF                     u761:	
  6237  01DF  2A18               	goto	l333
  6238  01E0                     u760:	
  6239  01E0                     l1823:	
  6240  01E0  1003               	clrc
  6241  01E1  0022               	movlb	2	; select bank2
  6242  01E2  1D8E               	btfss	14,3	;volatile
  6243  01E3  1403               	setc
  6244  01E4  1803               	btfsc	3,0
  6245  01E5  29E7               	goto	u771
  6246  01E6  29EA               	goto	u770
  6247  01E7                     u771:	
  6248  01E7  0022               	movlb	2	; select bank2
  6249  01E8  158E               	bsf	14,3	;volatile
  6250  01E9  29EC               	goto	u784
  6251  01EA                     u770:	
  6252  01EA  0022               	movlb	2	; select bank2
  6253  01EB  118E               	bcf	14,3	;volatile
  6254  01EC                     u784:	
  6255  01EC  2A18               	goto	l333
  6256  01ED                     l1825:	
  6257                           
  6258                           ;Lights.c: 31:             if ( PORTCbits.RC4 != state )
  6259  01ED  0020               	movlb	0	; select bank0
  6260  01EE  0E0E               	swapf	14,w	;volatile
  6261  01EF  3901               	andlw	1
  6262  01F0  0672               	xorwf	SetLight@state,w
  6263  01F1  1903               	skipnz
  6264  01F2  29F4               	goto	u791
  6265  01F3  29F5               	goto	u790
  6266  01F4                     u791:	
  6267  01F4  2A18               	goto	l333
  6268  01F5                     u790:	
  6269  01F5                     l1827:	
  6270  01F5  1003               	clrc
  6271  01F6  0022               	movlb	2	; select bank2
  6272  01F7  1E0E               	btfss	14,4	;volatile
  6273  01F8  1403               	setc
  6274  01F9  1803               	btfsc	3,0
  6275  01FA  29FC               	goto	u801
  6276  01FB  29FF               	goto	u800
  6277  01FC                     u801:	
  6278  01FC  0022               	movlb	2	; select bank2
  6279  01FD  160E               	bsf	14,4	;volatile
  6280  01FE  2A01               	goto	u814
  6281  01FF                     u800:	
  6282  01FF  0022               	movlb	2	; select bank2
  6283  0200  120E               	bcf	14,4	;volatile
  6284  0201                     u814:	
  6285  0201  2A18               	goto	l333
  6286  0202                     l1833:	
  6287  0202  0875               	movf	SetLight@light,w
  6288  0203  00F3               	movwf	??_SetLight
  6289  0204  01F4               	clrf	??_SetLight+1
  6290                           
  6291                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6292                           ; Switch size 1, requested type "simple"
  6293                           ; Number of cases is 1, Range of values is 0 to 0
  6294                           ; switch strategies available:
  6295                           ; Name         Instructions Cycles
  6296                           ; simple_byte            4     3 (average)
  6297                           ; direct_byte            8     6 (fixed)
  6298                           ; jumptable            260     6 (fixed)
  6299                           ;	Chosen strategy is simple_byte
  6300  0205  0874               	movf	??_SetLight+1,w
  6301  0206  3A00               	xorlw	0	; case 0
  6302  0207  1903               	skipnz
  6303  0208  2A0A               	goto	l1991
  6304  0209  29ED               	goto	l1825
  6305  020A                     l1991:	
  6306                           
  6307                           ; Switch size 1, requested type "simple"
  6308                           ; Number of cases is 4, Range of values is 0 to 3
  6309                           ; switch strategies available:
  6310                           ; Name         Instructions Cycles
  6311                           ; simple_byte           13     7 (average)
  6312                           ; direct_byte           14     6 (fixed)
  6313                           ; jumptable            260     6 (fixed)
  6314                           ;	Chosen strategy is simple_byte
  6315  020A  0873               	movf	??_SetLight,w
  6316  020B  3A00               	xorlw	0	; case 0
  6317  020C  1903               	skipnz
  6318  020D  29AA               	goto	l1813
  6319  020E  3A01               	xorlw	1	; case 1
  6320  020F  1903               	skipnz
  6321  0210  29BF               	goto	l1817
  6322  0211  3A03               	xorlw	3	; case 2
  6323  0212  1903               	skipnz
  6324  0213  29D5               	goto	l1821
  6325  0214  3A01               	xorlw	1	; case 3
  6326  0215  1903               	skipnz
  6327  0216  29ED               	goto	l1825
  6328  0217  29ED               	goto	l1825
  6329  0218                     l333:	
  6330  0218  0008               	return
  6331  0219                     __end_of_SetLight:	
  6332                           
  6333                           	psect	intentry
  6334  0004                     __pintentry:	
  6335 ;; *************** function _INTERRUPT_InterruptManager *****************
  6336 ;; Defined at:
  6337 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;		None
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;		None
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      void 
  6344 ;; Registers used:
  6345 ;;		wreg, status,2, status,0, pclath, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6355 ;;Total ram usage:        0 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:    3
  6358 ;; This function calls:
  6359 ;;		_PIN_MANAGER_IOC
  6360 ;;		_TMR1_ISR
  6361 ;; This function is called by:
  6362 ;;		Interrupt level 1
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366  0004                     _INTERRUPT_InterruptManager:	
  6367                           
  6368                           ;incstack = 0
  6369  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6370                           
  6371                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  6372  0005  3180               	pagesel	$
  6373  0006                     i1l1723:	
  6374                           
  6375                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
  6376  0006  0021               	movlb	1	; select bank1
  6377  0007  1E10               	btfss	16,4	;volatile
  6378  0008  280A               	goto	u63_21
  6379  0009  280B               	goto	u63_20
  6380  000A                     u63_21:	
  6381  000A  2814               	goto	i1l148
  6382  000B                     u63_20:	
  6383  000B                     i1l1725:	
  6384  000B  0020               	movlb	0	; select bank0
  6385  000C  1E10               	btfss	16,4	;volatile
  6386  000D  280F               	goto	u64_21
  6387  000E  2810               	goto	u64_20
  6388  000F                     u64_21:	
  6389  000F  2814               	goto	i1l148
  6390  0010                     u64_20:	
  6391  0010                     i1l1727:	
  6392                           
  6393                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  6394  0010  3184  24D6  3180   	fcall	_PIN_MANAGER_IOC
  6395                           
  6396                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  6397  0013  2826               	goto	i1l154
  6398  0014                     i1l148:	
  6399                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  6400                           
  6401  0014  1F0B               	btfss	11,6	;volatile
  6402  0015  2817               	goto	u65_21
  6403  0016  2818               	goto	u65_20
  6404  0017                     u65_21:	
  6405  0017  2826               	goto	i1l154
  6406  0018                     u65_20:	
  6407  0018                     i1l1729:	
  6408                           
  6409                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  6410  0018  0021               	movlb	1	; select bank1
  6411  0019  1C11               	btfss	17,0	;volatile
  6412  001A  281C               	goto	u66_21
  6413  001B  281D               	goto	u66_20
  6414  001C                     u66_21:	
  6415  001C  2826               	goto	i1l153
  6416  001D                     u66_20:	
  6417  001D                     i1l1731:	
  6418  001D  0020               	movlb	0	; select bank0
  6419  001E  1C11               	btfss	17,0	;volatile
  6420  001F  2821               	goto	u67_21
  6421  0020  2822               	goto	u67_20
  6422  0021                     u67_21:	
  6423  0021  2826               	goto	i1l153
  6424  0022                     u67_20:	
  6425  0022                     i1l1733:	
  6426                           
  6427                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_ISR();
  6428  0022  3184  2467  3180   	fcall	_TMR1_ISR
  6429                           
  6430                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  6431  0025  2826               	goto	i1l154
  6432  0026                     i1l153:	
  6433                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  6434                           
  6435  0026                     i1l154:	
  6436  0026  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6437  0027  0009               	retfie
  6438  0028                     __end_of_INTERRUPT_InterruptManager:	
  6439                           
  6440                           	psect	text22
  6441  0467                     __ptext22:	
  6442 ;; *************** function _TMR1_ISR *****************
  6443 ;; Defined at:
  6444 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;		None
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;		None
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  1    wreg      void 
  6451 ;; Registers used:
  6452 ;;		wreg, status,2, status,0, pclath, cstack
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6462 ;;Total ram usage:        0 bytes
  6463 ;; Hardware stack levels used:    1
  6464 ;; Hardware stack levels required when called:    1
  6465 ;; This function calls:
  6466 ;;		Absolute function
  6467 ;;		_TMR1_DefaultInterruptHandler
  6468 ;;		_TMR1_WriteTimer
  6469 ;; This function is called by:
  6470 ;;		_INTERRUPT_InterruptManager
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           
  6475                           ;psect for function _TMR1_ISR
  6476  0467                     _TMR1_ISR:	
  6477  0467                     i1l1663:	
  6478                           ;incstack = 0
  6479                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  6480                           
  6481                           
  6482                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  6483  0467  0020               	movlb	0	; select bank0
  6484  0468  1011               	bcf	17,0	;volatile
  6485  0469                     i1l1665:	
  6486                           
  6487                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  6488  0469  0857               	movf	_timer1ReloadVal+1,w	;volatile
  6489  046A  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  6490  046B  0856               	movf	_timer1ReloadVal,w	;volatile
  6491  046C  00F0               	movwf	TMR1_WriteTimer@timerVal
  6492  046D  3184  2491  3184   	fcall	_TMR1_WriteTimer
  6493  0470                     i1l1667:	
  6494                           
  6495                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
  6496  0470  0020               	movlb	0	; select bank0
  6497  0471  0854               	movf	_TMR1_InterruptHandler,w
  6498  0472  0455               	iorwf	_TMR1_InterruptHandler+1,w
  6499  0473  1903               	btfsc	3,2
  6500  0474  2C76               	goto	u57_21
  6501  0475  2C77               	goto	u57_20
  6502  0476                     u57_21:	
  6503  0476  2C7C               	goto	i1l214
  6504  0477                     u57_20:	
  6505  0477                     i1l1669:	
  6506                           
  6507                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
  6508  0477  0855               	movf	_TMR1_InterruptHandler+1,w
  6509  0478  008A               	movwf	10
  6510  0479  0854               	movf	_TMR1_InterruptHandler,w
  6511  047A  000A               	callw
  6512  047B  3184               	pagesel	$
  6513  047C                     i1l214:	
  6514  047C  0008               	return
  6515  047D                     __end_of_TMR1_ISR:	
  6516                           
  6517                           	psect	text23
  6518  0491                     __ptext23:	
  6519 ;; *************** function _TMR1_WriteTimer *****************
  6520 ;; Defined at:
  6521 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;  timerVal        2    0[COMMON] unsigned short 
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;		None
  6526 ;; Return value:  Size  Location     Type
  6527 ;;                  1    wreg      void 
  6528 ;; Registers used:
  6529 ;;		wreg, status,2
  6530 ;; Tracked objects:
  6531 ;;		On entry : 0/0
  6532 ;;		On exit  : 0/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6535 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6538 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6539 ;;Total ram usage:        2 bytes
  6540 ;; Hardware stack levels used:    1
  6541 ;; This function calls:
  6542 ;;		Nothing
  6543 ;; This function is called by:
  6544 ;;		_TMR1_ISR
  6545 ;;		_TMR1_Reload
  6546 ;; This function uses a non-reentrant model
  6547 ;;
  6548                           
  6549                           
  6550                           ;psect for function _TMR1_WriteTimer
  6551  0491                     _TMR1_WriteTimer:	
  6552  0491                     i1l1599:	
  6553                           ;incstack = 0
  6554                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  6555                           
  6556                           
  6557                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.T1SYNC == 1)
  6558  0491  0020               	movlb	0	; select bank0
  6559  0492  1D1B               	btfss	27,2	;volatile
  6560  0493  2C95               	goto	u53_21
  6561  0494  2C96               	goto	u53_20
  6562  0495                     u53_21:	
  6563  0495  2C9D               	goto	i1l1609
  6564  0496                     u53_20:	
  6565  0496                     i1l1601:	
  6566                           
  6567                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  6568  0496  101B               	bcf	27,0	;volatile
  6569  0497                     i1l1603:	
  6570                           
  6571                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  6572  0497  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  6573  0498  009A               	movwf	26	;volatile
  6574  0499                     i1l1605:	
  6575                           
  6576                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  6577  0499  0870               	movf	TMR1_WriteTimer@timerVal,w
  6578  049A  0099               	movwf	25	;volatile
  6579  049B                     i1l1607:	
  6580                           
  6581                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  6582  049B  141B               	bsf	27,0	;volatile
  6583                           
  6584                           ;mcc_generated_files/tmr1.c: 133:     }
  6585  049C  2CA1               	goto	i1l201
  6586  049D                     i1l1609:	
  6587                           
  6588                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  6589  049D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  6590  049E  009A               	movwf	26	;volatile
  6591  049F                     i1l1611:	
  6592                           
  6593                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  6594  049F  0870               	movf	TMR1_WriteTimer@timerVal,w
  6595  04A0  0099               	movwf	25	;volatile
  6596  04A1                     i1l201:	
  6597  04A1  0008               	return
  6598  04A2                     __end_of_TMR1_WriteTimer:	
  6599                           
  6600                           	psect	text24
  6601  04F3                     __ptext24:	
  6602 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  6603 ;; Defined at:
  6604 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  6605 ;; Parameters:    Size  Location     Type
  6606 ;;		None
  6607 ;; Auto vars:     Size  Location     Type
  6608 ;;		None
  6609 ;; Return value:  Size  Location     Type
  6610 ;;                  1    wreg      void 
  6611 ;; Registers used:
  6612 ;;		wreg
  6613 ;; Tracked objects:
  6614 ;;		On entry : 0/0
  6615 ;;		On exit  : 0/0
  6616 ;;		Unchanged: 0/0
  6617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6622 ;;Total ram usage:        0 bytes
  6623 ;; Hardware stack levels used:    1
  6624 ;; This function calls:
  6625 ;;		Nothing
  6626 ;; This function is called by:
  6627 ;;		_TMR1_Initialize
  6628 ;;		_TMR1_ISR
  6629 ;; This function uses a non-reentrant model
  6630 ;;
  6631                           
  6632                           
  6633                           ;psect for function _TMR1_DefaultInterruptHandler
  6634  04F3                     _TMR1_DefaultInterruptHandler:	
  6635  04F3                     i1l1613:	
  6636                           ;incstack = 0
  6637                           ; Regs used in _TMR1_DefaultInterruptHandler: [wreg]
  6638                           
  6639                           
  6640                           ;mcc_generated_files/tmr1.c: 177:     cur_ms++;
  6641  04F3  3001               	movlw	1
  6642  04F4  0020               	movlb	0	; select bank0
  6643  04F5  07CB               	addwf	_cur_ms,f	;volatile
  6644  04F6  3000               	movlw	0
  6645  04F7  3DCC               	addwfc	_cur_ms+1,f	;volatile
  6646  04F8                     i1l220:	
  6647  04F8  0008               	return
  6648  04F9                     __end_of_TMR1_DefaultInterruptHandler:	
  6649                           
  6650                           	psect	text25
  6651  04D6                     __ptext25:	
  6652 ;; *************** function _PIN_MANAGER_IOC *****************
  6653 ;; Defined at:
  6654 ;;		line 122 in file "mcc_generated_files/pin_manager.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;		None
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;		None
  6659 ;; Return value:  Size  Location     Type
  6660 ;;                  1    wreg      void 
  6661 ;; Registers used:
  6662 ;;		wreg, status,2, status,0, pclath, cstack
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/0
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6672 ;;Total ram usage:        0 bytes
  6673 ;; Hardware stack levels used:    1
  6674 ;; Hardware stack levels required when called:    2
  6675 ;; This function calls:
  6676 ;;		_IOCCF0_ISR
  6677 ;; This function is called by:
  6678 ;;		_INTERRUPT_InterruptManager
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           
  6683                           ;psect for function _PIN_MANAGER_IOC
  6684  04D6                     _PIN_MANAGER_IOC:	
  6685  04D6                     i1l1659:	
  6686                           ;incstack = 0
  6687                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  6688                           
  6689                           
  6690                           ;mcc_generated_files/pin_manager.c: 125:     if(IOCCFbits.IOCCF0 == 1)
  6691  04D6  0027               	movlb	7	; select bank7
  6692  04D7  1C19               	btfss	25,0	;volatile
  6693  04D8  2CDA               	goto	u56_21
  6694  04D9  2CDB               	goto	u56_20
  6695  04DA                     u56_21:	
  6696  04DA  2CDE               	goto	i1l109
  6697  04DB                     u56_20:	
  6698  04DB                     i1l1661:	
  6699                           
  6700                           ;mcc_generated_files/pin_manager.c: 126:     {;mcc_generated_files/pin_manager.c: 127:  
      +                                 IOCCF0_ISR();
  6701  04DB  3184  24B2  3184   	fcall	_IOCCF0_ISR
  6702  04DE                     i1l109:	
  6703  04DE  0008               	return
  6704  04DF                     __end_of_PIN_MANAGER_IOC:	
  6705                           
  6706                           	psect	text26
  6707  04B2                     __ptext26:	
  6708 ;; *************** function _IOCCF0_ISR *****************
  6709 ;; Defined at:
  6710 ;;		line 134 in file "mcc_generated_files/pin_manager.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;		None
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;		None
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  1    wreg      void 
  6717 ;; Registers used:
  6718 ;;		wreg, status,2, status,0, pclath, cstack
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6728 ;;Total ram usage:        0 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; Hardware stack levels required when called:    1
  6731 ;; This function calls:
  6732 ;;		Absolute function
  6733 ;;		_IOCCF0_DefaultInterruptHandler
  6734 ;; This function is called by:
  6735 ;;		_PIN_MANAGER_IOC
  6736 ;; This function uses a non-reentrant model
  6737 ;;
  6738                           
  6739                           
  6740                           ;psect for function _IOCCF0_ISR
  6741  04B2                     _IOCCF0_ISR:	
  6742  04B2                     i1l1591:	
  6743                           ;incstack = 0
  6744                           ; Regs used in _IOCCF0_ISR: [wreg+status,2+status,0+pclath+cstack]
  6745                           
  6746                           
  6747                           ;mcc_generated_files/pin_manager.c: 139:     if(IOCCF0_InterruptHandler)
  6748  04B2  0020               	movlb	0	; select bank0
  6749  04B3  0858               	movf	_IOCCF0_InterruptHandler,w
  6750  04B4  0459               	iorwf	_IOCCF0_InterruptHandler+1,w
  6751  04B5  1903               	btfsc	3,2
  6752  04B6  2CB8               	goto	u52_21
  6753  04B7  2CB9               	goto	u52_20
  6754  04B8                     u52_21:	
  6755  04B8  2CBE               	goto	i1l1595
  6756  04B9                     u52_20:	
  6757  04B9                     i1l1593:	
  6758                           
  6759                           ;mcc_generated_files/pin_manager.c: 140:     {;mcc_generated_files/pin_manager.c: 141:  
      +                                 IOCCF0_InterruptHandler();
  6760  04B9  0859               	movf	_IOCCF0_InterruptHandler+1,w
  6761  04BA  008A               	movwf	10
  6762  04BB  0858               	movf	_IOCCF0_InterruptHandler,w
  6763  04BC  000A               	callw
  6764  04BD  3184               	pagesel	$
  6765  04BE                     i1l1595:	
  6766                           
  6767                           ;mcc_generated_files/pin_manager.c: 143:     IOCCFbits.IOCCF0 = 0;
  6768  04BE  0027               	movlb	7	; select bank7
  6769  04BF  1019               	bcf	25,0	;volatile
  6770  04C0                     i1l113:	
  6771  04C0  0008               	return
  6772  04C1                     __end_of_IOCCF0_ISR:	
  6773                           
  6774                           	psect	text27
  6775  0508                     __ptext27:	
  6776 ;; *************** function _IOCCF0_DefaultInterruptHandler *****************
  6777 ;; Defined at:
  6778 ;;		line 156 in file "mcc_generated_files/pin_manager.c"
  6779 ;; Parameters:    Size  Location     Type
  6780 ;;		None
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;		None
  6783 ;; Return value:  Size  Location     Type
  6784 ;;                  1    wreg      void 
  6785 ;; Registers used:
  6786 ;;		None
  6787 ;; Tracked objects:
  6788 ;;		On entry : 0/0
  6789 ;;		On exit  : 0/0
  6790 ;;		Unchanged: 0/0
  6791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6796 ;;Total ram usage:        0 bytes
  6797 ;; Hardware stack levels used:    1
  6798 ;; This function calls:
  6799 ;;		Nothing
  6800 ;; This function is called by:
  6801 ;;		_PIN_MANAGER_Initialize
  6802 ;;		_IOCCF0_ISR
  6803 ;; This function uses a non-reentrant model
  6804 ;;
  6805                           
  6806                           
  6807                           ;psect for function _IOCCF0_DefaultInterruptHandler
  6808  0508                     _IOCCF0_DefaultInterruptHandler:	
  6809  0508                     i1l119:	
  6810                           ;incstack = 0
  6811                           ; Regs used in _IOCCF0_DefaultInterruptHandler: []
  6812                           
  6813  0508  0008               	return
  6814  0509                     __end_of_IOCCF0_DefaultInterruptHandler:	
  6815  007E                     btemp	set	126	;btemp
  6816  007E                     int$flags	set	126
  6817  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         25
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     33      62
    BANK1            80     20      28
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            48      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    GetStage@head.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    Wigwag.first_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    stage_stash.next.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    stage_stash.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ?_GetStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ?_CopyStageData.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ?_CopyStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ?_ConstructStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ?_NewStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    FlashPattern@pattern	PTR struct Pattern size(2) Largest target is 3
		 -> Wigwag(BANK0[3]), 

    InitWigwagPattern@head.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@head	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@pattern.first_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@off.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@off	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@right_side_on.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@right_side_on	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@left_side_on.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@left_side_on	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@pattern.first_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@pattern	PTR struct Pattern size(2) Largest target is 3
		 -> Wigwag(BANK0[3]), 

    sp__GetStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__GetStage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    GetStage@get_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@last_stage.next.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@last_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@last_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@new_stage.next.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@new_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@head.next.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@new_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@head.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@head	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__CopyStageData.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    CopyStageData@source.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    CopyStageData@dest.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    CopyStageData@source	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    CopyStageData@dest	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__CopyStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__CopyStage	PTR struct Stage size(1) Largest target is 0

    CopyStage@dest.next.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    CopyStage@source.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    CopyStage@dest.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__CopyStageData	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__ConstructStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__ConstructStage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ConstructStage@new_stage.next.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ConstructStage@next	PTR struct Stage size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    ConstructStage@states	PTR const _Bool  size(1) Largest target is 4
		 -> InitWigwagPattern@right_side_states(BANK1[4]), InitWigwagPattern@left_side_states(BANK1[4]), 

    ConstructStage@new_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ConstructStage@new_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__NewStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    NewStage@new_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    NewStage@new_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), 

    sp__NewStage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AssignLightStates@stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AssignLightStates@states	PTR const _Bool  size(1) Largest target is 4
		 -> InitWigwagPattern@right_side_states(BANK1[4]), InitWigwagPattern@left_side_states(BANK1[4]), NewStage@init_states(BANK0[4]), 

    AssignLightStates@stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    S444Stage$next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    current_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    current_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    S453Pattern$first_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    Wigwag.first_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    IOCCF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF0_DefaultInterruptHandler(), 

    IOCCF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCCF0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_FlashPattern
    _SetOutputs->_SetLight
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF0_SetInterruptHandler
    _InitWigwagPattern->_ConstructStage
    _ConstructStage->_AssignLightStates
    _NewStage->_AssignLightStates
    _FlashPattern->_SetLight

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _setup->_InitWigwagPattern
    _InitWigwagPattern->_AppendStage
    _CopyStageData->_NewStage
    _ConstructStage->_NewStage
    _NewStage->_AssignLightStates
    _AppendStage->_CopyStageData

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _setup->_InitWigwagPattern

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    8352
                                             32 BANK0      1     1      0
                       _FlashPattern
           _PatternCycleInputChanged
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    7299
                  _InitWigwagPattern
                  _SYSTEM_Initialize
                         _SetOutputs
                    _TMR1_Initialize
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SetOutputs                                           2     2      0     999
                                              6 COMMON     2     2      0
                           _SetLight
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     196
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0      98
         _IOCCF0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _IOCCF0_SetInterruptHandler                           2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitWigwagPattern                                   23    21      2    6006
                                             29 BANK0      3     1      2
                                              0 BANK1     20    20      0
                        _AppendStage
                     _ConstructStage
                      _CopyStageData
                           _NewStage
 ---------------------------------------------------------------------------------
 (3) _CopyStageData                                        9     5      4    1365
                                             12 BANK0      9     5      4
                           _NewStage (ARG)
 ---------------------------------------------------------------------------------
 (3) _ConstructStage                                       7     4      3    1920
                                              9 COMMON     1     1      0
                                             12 BANK0      6     3      3
                  _AssignLightStates
                           _NewStage
 ---------------------------------------------------------------------------------
 (3) _NewStage                                            10    10      0     716
                                              2 BANK0     10    10      0
                  _AssignLightStates
 ---------------------------------------------------------------------------------
 (4) _AssignLightStates                                    9     6      3     552
                                              2 COMMON     7     4      3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _AppendStage                                          8     4      4    1309
                                             21 BANK0      8     4      4
                      _CopyStageData (ARG)
                           _NewStage (ARG)
 ---------------------------------------------------------------------------------
 (1) _PatternCycleInputChanged                             4     4      0      23
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _FlashPattern                                         8     6      2    1030
                                              6 COMMON     4     2      2
                                              0 BANK0      4     4      0
                           _SetLight
 ---------------------------------------------------------------------------------
 (3) _SetLight                                             4     3      1     875
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     240
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCCF0_ISR
 ---------------------------------------------------------------------------------
 (8) _IOCCF0_ISR                                           0     0      0       0
                   Absolute function *
     _IOCCF0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _IOCCF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FlashPattern
     _SetLight
   _PatternCycleInputChanged
   _setup
     _InitWigwagPattern
       _AppendStage
         _CopyStageData (ARG)
           _NewStage (ARG)
             _AssignLightStates
         _NewStage (ARG)
           _AssignLightStates
       _ConstructStage
         _AssignLightStates
         _NewStage
           _AssignLightStates
       _CopyStageData
         _NewStage (ARG)
           _AssignLightStates
       _NewStage
         _AssignLightStates
     _SYSTEM_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
         _IOCCF0_SetInterruptHandler
       _PMD_Initialize
       _TMR1_Initialize
         _TMR1_SetInterruptHandler
       _WDT_Initialize
     _SetOutputs
       _SetLight
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR1_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF0_ISR
       Absolute function(Fake) *
       _IOCCF0_DefaultInterruptHandler *
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      3E       5       77.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     14      1C       7       35.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      66      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               30      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      66      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu May 07 11:02:10 2020

                              _update_stage 004F                                 __CFG_CP$OFF 0000  
                                        l50 04D5                                          l53 0504  
                                        l47 04B1                                          l56 04E6  
                        ConstructStage@next 002E                                 __CFG_LVP$ON 0000  
                                       l105 03E8                                         l116 04F2  
                                       l303 03BD                                         l217 04EC  
                                       l333 0218                                         l190 0507  
                                       l431 0283                                         l360 032A  
                                       l336 042F                                         l187 0490  
                                       l267 044C                                         l356 040D  
                                       l381 02DB                                         l365 0390  
                                       l373 0363                                         l398 01A7  
                                       u600 03BC                                         u601 03BB  
                              __CFG_CPD$OFF 0000                                         u700 01B2  
                                       u701 01B1                                         u710 01BC  
                                       u711 01B9                                         u800 01FF  
                                       u801 01FC                                         u730 01C8  
                                       u731 01C7                                         u740 01D2  
                                       u724 01BE                                         u580 0397  
                                       u820 0354                                         u741 01CF  
                                       u581 0396                                         u821 0353  
                                       u814 0201                                         u590 03AA  
                                       u830 0290                                         u591 03A9  
                                       u831 028F                                         u760 01E0  
                                       u840 02C9                                         u680 040D  
                                       u761 01DF                                         u841 02C8  
                                       u681 040C                                         u825 0350  
                                       u770 01EA                                         u754 01D4  
                                       u690 02E6                                         u850 0127  
                                       u771 01E7                                         u691 02E5  
                                       u851 0126                                         u860 01A7  
                                       u845 02C5                                         u861 01A6  
                                       u790 01F5                                         u870 0237  
                                       u791 01F4                                         u871 0236  
                                       u855 0123                                         u784 01EC  
                                       u880 024B                                         u881 024A  
                                       u865 01A3                                         u875 0233  
                                       u897 039D                             _timer1ReloadVal 0056  
                   __size_of_PMD_Initialize 0008                                         wreg 0009  
        __end_of_IOCCF0_SetInterruptHandler 04F3                  _IOCCF0_SetInterruptHandler 04ED  
                                      l1501 047D                                        l1431 04ED  
                                      l1511 0489                                        l1503 047F  
                                      l1433 04E7                                        l1505 0481  
                                      l1507 0482                                        l1461 03C0  
                                      l1509 0487                                        l1703 03BC  
                                      l1471 03CD                                        l1463 03C2  
                                      l1801 0309                                        l1481 03DC  
                                      l1473 03D2                                        l1465 03C5  
                                      l1457 04DF                                        l1811 01A9  
                                      l1803 0314                                        l1491 04CD  
                                      l1483 03DD                                        l1475 03D5  
                                      l1467 03C7                                        l1459 03BE  
                                      l1821 01D5                                        l1813 01AA  
                                      l1805 031E                                        l1493 04D0  
                                      l1485 03DE                                        l1477 03D7  
                                      l1469 03CB                                        l1581 04A2  
                                      l1823 01E0                                        l1815 01B2  
                                      l1807 0326                                        l1911 014A  
                                      l1903 00CD                                        l1495 04D1  
                                      l1487 03DF                                        l1479 03DA  
                                      l1583 04A5                                        l1825 01ED  
                                      l1817 01BF                                        l1833 0202  
                                      l1841 0379                                        l1921 0198  
                                      l1905 0113                                        l1497 04D4  
                                      l1489 03E6                                        l1585 04A8  
                                      l1827 01F5                                        l1819 01C8  
                                      l1691 03A1                                        l1843 0383  
                                      l1907 0118                                        l1499 0501  
                                      l1587 04AB                                        l1931 043B  
                                      l1923 0430                                        l1941 0237  
                                      l1693 03AA                                        l1685 0391  
                                      l1845 038C                                        l1861 0354  
                                      l1917 014D                                        l1909 0127  
                                      l1589 04AE                                        l1597 0505  
                                      l1933 043F                                        l1925 0433  
                                      l1951 0281                                        l1943 0240  
                                      l1687 0397                                        l1871 02A3  
                                      l1783 03EC                                        l1791 02E6  
                                      l1839 0366                                        l1863 0363  
                                      l1855 032E                                        l1919 0193  
                                      l1935 0447                                        l1927 0434  
                                      l1945 0244                                        l1937 0219  
                                      l1689 039A                                        l1697 03AC  
                                      l1873 02AD                                        l1785 0400  
                                      l1777 03E9                                        l1857 0343  
                                      l1849 032B                                        l1881 006B  
                                      l1929 0438                                        l1953 044D  
                                      l1947 0246                                        l1939 021E  
                                      l1875 02B6                                        l1867 0284  
                                      l1787 0404                                        l1795 02E9  
                                      l1859 0347                                        l1891 00AC  
                                      l1883 0071                                        l1963 0458  
                                      l1955 0450                                        l1949 024B  
                                      l1877 02C9                                        l1869 0290  
                                      l1797 02FD                                        l1789 02DC  
                                      l1893 00B4                                        l1885 0080  
                                      l1965 045D                                        l1957 0455  
                                      l1991 020A                                        l1799 0301  
                                      l1895 00C1                                        l1887 0092  
                                      l1879 040F                                        l1897 00CB  
                                      l1889 009A                             ?_ConstructStage 002C  
                                      _LATA 010C                                        _LATC 010E  
                                      _PMD0 0911                                        _PMD1 0912  
                                      _PMD2 0913                                        _PMD3 0914  
                                      _PMD4 0915                                        _PMD5 0916  
                                      _WPUA 020C                                        _WPUC 020E  
                              __CFG_WRT$OFF 0000                               SetLight@light 0075  
                             __CFG_FCMEN$ON 0000                        ConstructStage@states 002F  
                             SetLight@state 0072                                        _main 044D  
                       __end_of_AppendStage 02DC                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        indf1 0001  
                                      fsr1l 0006                                        btemp 007E  
                             __CFG_BOREN$ON 0000                               __CFG_BORV$LOW 0000  
                                      start 0028                  ??_TMR1_SetInterruptHandler 0074  
                             __CFG_CSWEN$ON 0000                               __CFG_MCLRE$ON 0000  
                            CopyStageData@i 0033                             ??_CopyStageData 0030  
            __size_of_OSCILLATOR_Initialize 0009               __end_of_OSCILLATOR_Initialize 04D6  
                       __size_of_IOCCF0_ISR 000F                                       ?_main 0070  
                             __CFG_WDTE$OFF 0000                             _TMR1_StartTimer 0505  
                            __CFG_DEBUG$OFF 0000                                       i1l113 04C0  
                                     i1l201 04A1                                       i1l220 04F8  
                                     i1l109 04DE                                       i1l214 047C  
                                     i1l119 0508                                       i1l153 0026  
                                     i1l154 0026                                       i1l148 0014  
                                     _OSCEN 091D                                       _TMR1H 001A  
                                     _TMR1L 0019                                       u52_20 04B9  
                                     u52_21 04B8                                       u53_20 0496  
                                     u53_21 0495                                       u63_20 000B  
                                     u63_21 000A                                       u56_20 04DB  
                                     u64_20 0010                                       u56_21 04DA  
                                     u64_21 000F                                       u57_20 0477  
                                     u65_20 0018                                       u57_21 0476  
                                     u65_21 0017                                       _TRISA 008C  
                                     _TRISC 008E                                       u66_20 001D  
                                     u66_21 001C                                       u67_20 0022  
                                     u67_21 0021                       ConstructStage@time_ms 002C  
                          __end_of_TMR1_ISR 047D                     __end_of_PIN_MANAGER_IOC 04DF  
                            _WDT_Initialize 0501                                       _setup 0430  
                   __end_of_TMR1_Initialize 0491                                       pclath 000A  
                      __end_of_FlashPattern 0284                                       status 0003  
                                     wtemp0 007E                    FlashPattern@current_time 0078  
                  _PatternCycleInputChanged 0391                             _TMR1_WriteTimer 0491  
                           __initialization 002A                         NewStage@init_states 0026  
                              __end_of_main 0467                 ?_INTERRUPT_InterruptManager 0070  
                          __end_of_NewStage 032B                                      ??_main 0040  
                          __end_of_SetLight 0219                      __end_of_WDT_Initialize 0505  
                        _cur_pc_input_state 007B                                 _AppendStage 0284  
                                    ?_setup 0070                                      _ANSELA 018C  
                                    _ANSELC 018E                          __CFG_RSTOSC$HFINT1 0000  
                                    _T1GCON 001C                     TMR1_WriteTimer@timerVal 0070  
                                    i1l1601 0496                                      _ODCONA 028C  
                                    i1l1611 049F                                      i1l1603 0497  
                                    _ODCONC 028E                                      i1l1613 04F3  
                                    i1l1605 0499                                      i1l1607 049B  
                                    i1l1609 049D                                      i1l1731 001D  
                                    i1l1723 0006                                      i1l1661 04DB  
                                    i1l1733 0022                                      i1l1725 000B  
                                    i1l1591 04B2                                      i1l1663 0467  
                                    i1l1727 0010                                      i1l1593 04B9  
                                    i1l1665 0469                                      i1l1729 0018  
                                    i1l1595 04BE                                      i1l1659 04D6  
                                    i1l1667 0470                                      i1l1669 0477  
                                    i1l1599 0491                                      _INLVLA 038C  
                                    _INLVLC 038E                                      _OSCFRQ 091F  
                                    _WDTCON 0097                                  _SetOutputs 040E  
                            __CFG_PWRTE$OFF 0000        __end_of_TMR1_DefaultInterruptHandler 04F9  
     __size_of_TMR1_DefaultInterruptHandler 0006                _TMR1_DefaultInterruptHandler 04F3  
                           SetOutputs@state 0077                                      _Wigwag 0051  
                   __end_of_TMR1_StartTimer 0508                              __CFG_STVREN$ON 0000  
         InitWigwagPattern@left_side_states 00A0                                      _cur_ms 004B  
                       CopyStageData@source 002E                              _PMD_Initialize 04DF  
                           ?_WDT_Initialize 0070    TMR1_SetInterruptHandler@InterruptHandler 0072  
IOCCF0_SetInterruptHandler@InterruptHandler 0072                            ?_PIN_MANAGER_IOC 0070  
                   __end_of_TMR1_WriteTimer 04A2                                ??_IOCCF0_ISR 0070  
                          ?_TMR1_Initialize 0070                      AssignLightStates@stage 0072  
                         _SYSTEM_Initialize 04A2                     __end_of__initialization 0067  
                        ?_SYSTEM_Initialize 0070                              __pcstackCOMMON 0070  
        InitWigwagPattern@right_side_states 00A4                                __pidataBANK0 04F9  
                              __pidataBANK1 04FD                         ??_SYSTEM_Initialize 0074  
                                 ?_TMR1_ISR 0070               ?_TMR1_DefaultInterruptHandler 0070  
                             __end_of_setup 044D                      __end_of_PMD_Initialize 04E7  
                        __end_of_IOCCF0_ISR 04C1                           NewStage@new_stage 002A  
                          ??_ConstructStage 0079                 ?_IOCCF0_SetInterruptHandler 0072  
                     __size_of_FlashPattern 006B                   __end_of_SYSTEM_Initialize 04B2  
                                   ??_setup 007A                                NewStage@F411 00B4  
                                __pbssBANK0 0041                                  __pbssBANK1 00B4  
                             _current_stage 0043                                   ?_NewStage 0077  
                               ?_SetOutputs 0070                                   ?_SetLight 0072  
                        AssignLightStates@i 0020                        AppendStage@new_stage 0037  
                                __pmaintext 044D                            ?_TMR1_StartTimer 0070  
                                ??_TMR1_ISR 0072                             __CFG_PPS1WAY$ON 0000  
                                __pintentry 0004            ??_IOCCF0_DefaultInterruptHandler 0070  
           ?_IOCCF0_DefaultInterruptHandler 0070                             ?_PMD_Initialize 0070  
                        InitWigwagPattern@i 00AC                                _FlashPattern 0219  
                                   _OSCCON1 0919                                     _OSCCON3 091B  
                                   _OSCTUNE 091E                  ??_PatternCycleInputChanged 0072  
                                   _SLRCONA 030C                                     _SLRCONC 030E  
                          ?_TMR1_WriteTimer 0070                     ConstructStage@new_stage 0030  
                                ??_NewStage 0022                                  ??_SetLight 0073  
       PatternCycleInputChanged@delay_count 0074                       __end_of_CopyStageData 0364  
                      InitWigwagPattern@off 00B0                                     __ptext1 0430  
                                   __ptext2 0505                                     __ptext3 040E  
                                   __ptext4 04A2                                     __ptext5 0501  
                                   __ptext6 047D                                     __ptext7 04E7  
                                   __ptext8 04DF                                     __ptext9 03BE  
            ??_TMR1_DefaultInterruptHandler 0070                                   _T1CONbits 001B  
                                   _cur_sec 0047                       _OSCILLATOR_Initialize 04CD  
                       __size_of_SetOutputs 0022           __size_of_TMR1_SetInterruptHandler 0006  
                  ??_PIN_MANAGER_Initialize 0074                   ?_TMR1_SetInterruptHandler 0072  
                                 _IOCCFbits 0399                                     _temp_ms 004D  
                                 _IOCCNbits 0398                                   _IOCCPbits 0397  
                              ?_AppendStage 0035                  __size_of_SYSTEM_Initialize 0010  
                                   clrloop0 04C2                        end_of_initialization 0067  
                       _last_pc_input_state 007A                            ??_WDT_Initialize 0072  
                                 _PORTCbits 000E                     AssignLightStates@states 0074  
                          __CFG_FEXTOSC$OFF 0000                                  _start_time 0041  
                                _ts_trigger 0050                           __size_of_TMR1_ISR 0016  
                         CopyStageData@dest 002C                      ?_OSCILLATOR_Initialize 0070  
                       start_initialization 002A             __size_of_PIN_MANAGER_Initialize 002B  
                           AppendStage@head 0035                                ??_SetOutputs 0076  
                  __size_of_PIN_MANAGER_IOC 0009                    InitWigwagPattern@pattern 003D  
                         __size_of_NewStage 004F                            __CFG_LPBOREN$OFF 0000  
                  __size_of_TMR1_Initialize 0014                           __size_of_SetLight 0071  
                          ??_PMD_Initialize 0072                                 __pdataBANK0 005A  
                               __pdataBANK1 00B8                                 __pbssBIGRAM 22B0  
                               __pbssCOMMON 007A                       AppendStage@last_stage 003B  
                                 ___latbits 0002                          __end_of_SetOutputs 0430  
                             __pcstackBANK0 0020                               __pcstackBANK1 00A0  
                    InitWigwagPattern@i_770 00AE      __end_of_IOCCF0_DefaultInterruptHandler 0509  
   __size_of_IOCCF0_DefaultInterruptHandler 0001              _IOCCF0_DefaultInterruptHandler 0508  
                      __size_of_AppendStage 0058                                   __pnvBANK0 0054  
                    _PIN_MANAGER_Initialize 03BE            __end_of_TMR1_SetInterruptHandler 04ED  
                         _AssignLightStates 03E9                           _InitWigwagPattern 006B  
                        ?_AssignLightStates 0072                ??_INTERRUPT_InterruptManager 0072  
                        ?_InitWigwagPattern 003D                    __size_of_TMR1_StartTimer 0003  
                       ??_AssignLightStates 0075                         ??_InitWigwagPattern 003F  
                            __size_of_setup 001D                     __size_of_ConstructStage 002D  
                                  _LATCbits 010E                                   clear_ram0 04C1  
                                  _PIE0bits 0090                                    _PIE1bits 0091  
                  __size_of_TMR1_WriteTimer 0011                   __end_of_AssignLightStates 040E  
       __size_of_INTERRUPT_InterruptManager 0024                                    _PIR0bits 0010  
                                  _PIR1bits 0011           __size_of_PatternCycleInputChanged 002D  
                 ?_PatternCycleInputChanged 0070                   __end_of_InitWigwagPattern 01A8  
                                  _TMR1_ISR 0467                           ??_PIN_MANAGER_IOC 0070  
                         ??_TMR1_Initialize 0074                      __size_of_CopyStageData 0039  
                                  _NewStage 02DC                                    _SetLight 01A8  
                           _stage_list_iter 0045                     ??_OSCILLATOR_Initialize 0072  
                     InitWigwagPattern@F436 005A                       InitWigwagPattern@F439 00B8  
                  _TMR1_SetInterruptHandler 04E7                       InitWigwagPattern@head 00B2  
                     _TMR1_InterruptHandler 0054                     _IOCCF0_InterruptHandler 0058  
                                  __ptext10 04ED                                    __ptext11 04CD  
                                  __ptext20 01A8                                    __ptext12 006B  
                                  __ptext13 032B                                  _T1GCONbits 001C  
                                  __ptext22 0467                                    __ptext14 0364  
                                  __ptext23 0491                                    __ptext15 02DC  
                                  __ptext24 04F3                                    __ptext16 03E9  
                                  __ptext25 04D6                                    __ptext17 0284  
                                  __ptext26 04B2                                    __ptext18 0391  
                                  __ptext27 0508                                    __ptext19 0219  
              ??_IOCCF0_SetInterruptHandler 0074              InitWigwagPattern@right_side_on 00AA  
                         ??_TMR1_StartTimer 0072                                  _IOCCF0_ISR 04B2  
                                  _cur_hsec 0049                               __size_of_main 001A  
                __size_of_AssignLightStates 0025               InitWigwagPattern@left_side_on 00A8  
                __size_of_InitWigwagPattern 013D                                    int$flags 007E  
        __end_of_INTERRUPT_InterruptManager 0028                  _INTERRUPT_InterruptManager 0004  
                         ??_TMR1_WriteTimer 0072                               _CopyStageData 032B  
                       FlashPattern@pattern 0076                               ?_FlashPattern 0076  
       __size_of_IOCCF0_SetInterruptHandler 0006                                  _INTCONbits 000B  
                   __size_of_WDT_Initialize 0004                                    intlevel1 0000  
                            _ConstructStage 0364                     ?_PIN_MANAGER_Initialize 0070  
                         __CFG_CLKOUTEN$OFF 0000                              ?_CopyStageData 002C  
                            ??_FlashPattern 0020                               ??_AppendStage 0039  
          __end_of_PatternCycleInputChanged 03BE                      __end_of_ConstructStage 0391  
                               ?_IOCCF0_ISR 0070              __end_of_PIN_MANAGER_Initialize 03E9  
                           _PIN_MANAGER_IOC 04D6                                 _stage_stash 22B0  
                           _TMR1_Initialize 047D  
