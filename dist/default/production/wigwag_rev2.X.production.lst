

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu May 07 11:13:29 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18325
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x620,48
    46                           	dabs	1,0x5A0,80
    47                           	dabs	1,0x520,80
    48                           	dabs	1,0x4A0,80
    49                           	dabs	1,0x420,80
    50                           	dabs	1,0x3A0,80
    51                           	dabs	1,0x320,80
    52                           	dabs	1,0x2A0,80
    53                           	dabs	1,0x220,80
    54                           	dabs	1,0x1A0,80
    55                           	dabs	1,0x20F0,0,_stage_stash
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.10
    59                           ; Generated 31/07/2019 GMT
    60                           ; 
    61                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F18325 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000E                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  008C                     	;# 
   126  008E                     	;# 
   127  0090                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0097                     	;# 
   133  009B                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  010C                     	;# 
   140  010E                     	;# 
   141  0111                     	;# 
   142  0112                     	;# 
   143  0113                     	;# 
   144  0114                     	;# 
   145  0115                     	;# 
   146  0116                     	;# 
   147  0117                     	;# 
   148  0118                     	;# 
   149  0119                     	;# 
   150  018C                     	;# 
   151  018E                     	;# 
   152  0197                     	;# 
   153  0199                     	;# 
   154  0199                     	;# 
   155  0199                     	;# 
   156  019A                     	;# 
   157  019A                     	;# 
   158  019A                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019C                     	;# 
   165  019C                     	;# 
   166  019C                     	;# 
   167  019D                     	;# 
   168  019D                     	;# 
   169  019D                     	;# 
   170  019E                     	;# 
   171  019E                     	;# 
   172  019E                     	;# 
   173  019F                     	;# 
   174  019F                     	;# 
   175  019F                     	;# 
   176  019F                     	;# 
   177  019F                     	;# 
   178  020C                     	;# 
   179  020E                     	;# 
   180  0211                     	;# 
   181  0211                     	;# 
   182  0212                     	;# 
   183  0212                     	;# 
   184  0213                     	;# 
   185  0213                     	;# 
   186  0214                     	;# 
   187  0214                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0215                     	;# 
   191  0215                     	;# 
   192  0216                     	;# 
   193  0216                     	;# 
   194  0217                     	;# 
   195  0217                     	;# 
   196  0219                     	;# 
   197  021A                     	;# 
   198  021B                     	;# 
   199  021C                     	;# 
   200  021D                     	;# 
   201  021D                     	;# 
   202  021E                     	;# 
   203  021F                     	;# 
   204  028C                     	;# 
   205  028E                     	;# 
   206  0291                     	;# 
   207  0291                     	;# 
   208  0292                     	;# 
   209  0293                     	;# 
   210  0294                     	;# 
   211  0295                     	;# 
   212  0295                     	;# 
   213  0296                     	;# 
   214  0297                     	;# 
   215  0298                     	;# 
   216  029F                     	;# 
   217  030C                     	;# 
   218  030E                     	;# 
   219  0311                     	;# 
   220  0311                     	;# 
   221  0312                     	;# 
   222  0313                     	;# 
   223  0314                     	;# 
   224  0315                     	;# 
   225  0315                     	;# 
   226  0316                     	;# 
   227  0317                     	;# 
   228  0318                     	;# 
   229  038C                     	;# 
   230  038E                     	;# 
   231  0391                     	;# 
   232  0392                     	;# 
   233  0393                     	;# 
   234  0397                     	;# 
   235  0398                     	;# 
   236  0399                     	;# 
   237  039A                     	;# 
   238  039C                     	;# 
   239  039D                     	;# 
   240  039E                     	;# 
   241  039F                     	;# 
   242  0411                     	;# 
   243  0411                     	;# 
   244  0412                     	;# 
   245  0413                     	;# 
   246  0414                     	;# 
   247  0415                     	;# 
   248  0416                     	;# 
   249  0417                     	;# 
   250  0418                     	;# 
   251  0418                     	;# 
   252  0419                     	;# 
   253  041A                     	;# 
   254  041B                     	;# 
   255  041C                     	;# 
   256  041D                     	;# 
   257  041E                     	;# 
   258  041F                     	;# 
   259  0498                     	;# 
   260  0498                     	;# 
   261  0499                     	;# 
   262  049A                     	;# 
   263  049B                     	;# 
   264  049B                     	;# 
   265  049C                     	;# 
   266  049D                     	;# 
   267  049E                     	;# 
   268  049F                     	;# 
   269  0617                     	;# 
   270  0618                     	;# 
   271  0619                     	;# 
   272  0619                     	;# 
   273  061A                     	;# 
   274  061B                     	;# 
   275  061C                     	;# 
   276  061C                     	;# 
   277  061F                     	;# 
   278  0691                     	;# 
   279  0692                     	;# 
   280  0693                     	;# 
   281  0694                     	;# 
   282  0695                     	;# 
   283  0696                     	;# 
   284  0697                     	;# 
   285  0698                     	;# 
   286  0699                     	;# 
   287  0711                     	;# 
   288  0712                     	;# 
   289  0713                     	;# 
   290  0714                     	;# 
   291  0715                     	;# 
   292  0716                     	;# 
   293  0717                     	;# 
   294  0718                     	;# 
   295  0719                     	;# 
   296  0891                     	;# 
   297  0891                     	;# 
   298  0891                     	;# 
   299  0891                     	;# 
   300  0891                     	;# 
   301  0891                     	;# 
   302  0892                     	;# 
   303  0892                     	;# 
   304  0892                     	;# 
   305  0893                     	;# 
   306  0893                     	;# 
   307  0893                     	;# 
   308  0893                     	;# 
   309  0893                     	;# 
   310  0893                     	;# 
   311  0894                     	;# 
   312  0894                     	;# 
   313  0894                     	;# 
   314  0895                     	;# 
   315  0895                     	;# 
   316  0895                     	;# 
   317  0896                     	;# 
   318  0896                     	;# 
   319  0896                     	;# 
   320  089B                     	;# 
   321  0911                     	;# 
   322  0912                     	;# 
   323  0913                     	;# 
   324  0914                     	;# 
   325  0915                     	;# 
   326  0916                     	;# 
   327  0918                     	;# 
   328  0919                     	;# 
   329  091A                     	;# 
   330  091B                     	;# 
   331  091C                     	;# 
   332  091D                     	;# 
   333  091E                     	;# 
   334  091F                     	;# 
   335  0E0F                     	;# 
   336  0E10                     	;# 
   337  0E11                     	;# 
   338  0E12                     	;# 
   339  0E13                     	;# 
   340  0E14                     	;# 
   341  0E15                     	;# 
   342  0E16                     	;# 
   343  0E17                     	;# 
   344  0E18                     	;# 
   345  0E19                     	;# 
   346  0E1A                     	;# 
   347  0E1B                     	;# 
   348  0E1C                     	;# 
   349  0E1D                     	;# 
   350  0E1E                     	;# 
   351  0E1F                     	;# 
   352  0E20                     	;# 
   353  0E21                     	;# 
   354  0E22                     	;# 
   355  0E24                     	;# 
   356  0E25                     	;# 
   357  0E28                     	;# 
   358  0E29                     	;# 
   359  0E2A                     	;# 
   360  0E2B                     	;# 
   361  0E2C                     	;# 
   362  0E2D                     	;# 
   363  0E2E                     	;# 
   364  0E2F                     	;# 
   365  0E90                     	;# 
   366  0E91                     	;# 
   367  0E92                     	;# 
   368  0E94                     	;# 
   369  0E95                     	;# 
   370  0EA0                     	;# 
   371  0EA1                     	;# 
   372  0EA2                     	;# 
   373  0EA3                     	;# 
   374  0EA4                     	;# 
   375  0EA5                     	;# 
   376  0F0F                     	;# 
   377  0F10                     	;# 
   378  0F11                     	;# 
   379  0F12                     	;# 
   380  0F13                     	;# 
   381  0F14                     	;# 
   382  0F15                     	;# 
   383  0F16                     	;# 
   384  0F17                     	;# 
   385  0F18                     	;# 
   386  0F19                     	;# 
   387  0F1A                     	;# 
   388  0F1B                     	;# 
   389  0F1C                     	;# 
   390  0F1D                     	;# 
   391  0F1E                     	;# 
   392  0F1F                     	;# 
   393  0F20                     	;# 
   394  0F21                     	;# 
   395  0F22                     	;# 
   396  0F23                     	;# 
   397  0F24                     	;# 
   398  0F25                     	;# 
   399  0F26                     	;# 
   400  0F27                     	;# 
   401  0F28                     	;# 
   402  0F29                     	;# 
   403  0F2A                     	;# 
   404  0F2B                     	;# 
   405  0F2C                     	;# 
   406  0F2D                     	;# 
   407  0F2E                     	;# 
   408  0F2F                     	;# 
   409  0F30                     	;# 
   410  0F31                     	;# 
   411  0F32                     	;# 
   412  0F33                     	;# 
   413  0F34                     	;# 
   414  0F35                     	;# 
   415  0F36                     	;# 
   416  0F37                     	;# 
   417  0FE4                     	;# 
   418  0FE5                     	;# 
   419  0FE6                     	;# 
   420  0FE7                     	;# 
   421  0FE8                     	;# 
   422  0FE9                     	;# 
   423  0FEA                     	;# 
   424  0FEB                     	;# 
   425  0FED                     	;# 
   426  0FEE                     	;# 
   427  0FEF                     	;# 
   428  0000                     	;# 
   429  0001                     	;# 
   430  0002                     	;# 
   431  0003                     	;# 
   432  0004                     	;# 
   433  0005                     	;# 
   434  0006                     	;# 
   435  0007                     	;# 
   436  0008                     	;# 
   437  0009                     	;# 
   438  000A                     	;# 
   439  000B                     	;# 
   440  000C                     	;# 
   441  000E                     	;# 
   442  0010                     	;# 
   443  0011                     	;# 
   444  0012                     	;# 
   445  0013                     	;# 
   446  0014                     	;# 
   447  0015                     	;# 
   448  0015                     	;# 
   449  0016                     	;# 
   450  0016                     	;# 
   451  0017                     	;# 
   452  0018                     	;# 
   453  0019                     	;# 
   454  0019                     	;# 
   455  001A                     	;# 
   456  001B                     	;# 
   457  001C                     	;# 
   458  001D                     	;# 
   459  001E                     	;# 
   460  001F                     	;# 
   461  008C                     	;# 
   462  008E                     	;# 
   463  0090                     	;# 
   464  0091                     	;# 
   465  0092                     	;# 
   466  0093                     	;# 
   467  0094                     	;# 
   468  0097                     	;# 
   469  009B                     	;# 
   470  009B                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  009F                     	;# 
   475  010C                     	;# 
   476  010E                     	;# 
   477  0111                     	;# 
   478  0112                     	;# 
   479  0113                     	;# 
   480  0114                     	;# 
   481  0115                     	;# 
   482  0116                     	;# 
   483  0117                     	;# 
   484  0118                     	;# 
   485  0119                     	;# 
   486  018C                     	;# 
   487  018E                     	;# 
   488  0197                     	;# 
   489  0199                     	;# 
   490  0199                     	;# 
   491  0199                     	;# 
   492  019A                     	;# 
   493  019A                     	;# 
   494  019A                     	;# 
   495  019B                     	;# 
   496  019B                     	;# 
   497  019B                     	;# 
   498  019B                     	;# 
   499  019B                     	;# 
   500  019C                     	;# 
   501  019C                     	;# 
   502  019C                     	;# 
   503  019D                     	;# 
   504  019D                     	;# 
   505  019D                     	;# 
   506  019E                     	;# 
   507  019E                     	;# 
   508  019E                     	;# 
   509  019F                     	;# 
   510  019F                     	;# 
   511  019F                     	;# 
   512  019F                     	;# 
   513  019F                     	;# 
   514  020C                     	;# 
   515  020E                     	;# 
   516  0211                     	;# 
   517  0211                     	;# 
   518  0212                     	;# 
   519  0212                     	;# 
   520  0213                     	;# 
   521  0213                     	;# 
   522  0214                     	;# 
   523  0214                     	;# 
   524  0215                     	;# 
   525  0215                     	;# 
   526  0215                     	;# 
   527  0215                     	;# 
   528  0216                     	;# 
   529  0216                     	;# 
   530  0217                     	;# 
   531  0217                     	;# 
   532  0219                     	;# 
   533  021A                     	;# 
   534  021B                     	;# 
   535  021C                     	;# 
   536  021D                     	;# 
   537  021D                     	;# 
   538  021E                     	;# 
   539  021F                     	;# 
   540  028C                     	;# 
   541  028E                     	;# 
   542  0291                     	;# 
   543  0291                     	;# 
   544  0292                     	;# 
   545  0293                     	;# 
   546  0294                     	;# 
   547  0295                     	;# 
   548  0295                     	;# 
   549  0296                     	;# 
   550  0297                     	;# 
   551  0298                     	;# 
   552  029F                     	;# 
   553  030C                     	;# 
   554  030E                     	;# 
   555  0311                     	;# 
   556  0311                     	;# 
   557  0312                     	;# 
   558  0313                     	;# 
   559  0314                     	;# 
   560  0315                     	;# 
   561  0315                     	;# 
   562  0316                     	;# 
   563  0317                     	;# 
   564  0318                     	;# 
   565  038C                     	;# 
   566  038E                     	;# 
   567  0391                     	;# 
   568  0392                     	;# 
   569  0393                     	;# 
   570  0397                     	;# 
   571  0398                     	;# 
   572  0399                     	;# 
   573  039A                     	;# 
   574  039C                     	;# 
   575  039D                     	;# 
   576  039E                     	;# 
   577  039F                     	;# 
   578  0411                     	;# 
   579  0411                     	;# 
   580  0412                     	;# 
   581  0413                     	;# 
   582  0414                     	;# 
   583  0415                     	;# 
   584  0416                     	;# 
   585  0417                     	;# 
   586  0418                     	;# 
   587  0418                     	;# 
   588  0419                     	;# 
   589  041A                     	;# 
   590  041B                     	;# 
   591  041C                     	;# 
   592  041D                     	;# 
   593  041E                     	;# 
   594  041F                     	;# 
   595  0498                     	;# 
   596  0498                     	;# 
   597  0499                     	;# 
   598  049A                     	;# 
   599  049B                     	;# 
   600  049B                     	;# 
   601  049C                     	;# 
   602  049D                     	;# 
   603  049E                     	;# 
   604  049F                     	;# 
   605  0617                     	;# 
   606  0618                     	;# 
   607  0619                     	;# 
   608  0619                     	;# 
   609  061A                     	;# 
   610  061B                     	;# 
   611  061C                     	;# 
   612  061C                     	;# 
   613  061F                     	;# 
   614  0691                     	;# 
   615  0692                     	;# 
   616  0693                     	;# 
   617  0694                     	;# 
   618  0695                     	;# 
   619  0696                     	;# 
   620  0697                     	;# 
   621  0698                     	;# 
   622  0699                     	;# 
   623  0711                     	;# 
   624  0712                     	;# 
   625  0713                     	;# 
   626  0714                     	;# 
   627  0715                     	;# 
   628  0716                     	;# 
   629  0717                     	;# 
   630  0718                     	;# 
   631  0719                     	;# 
   632  0891                     	;# 
   633  0891                     	;# 
   634  0891                     	;# 
   635  0891                     	;# 
   636  0891                     	;# 
   637  0891                     	;# 
   638  0892                     	;# 
   639  0892                     	;# 
   640  0892                     	;# 
   641  0893                     	;# 
   642  0893                     	;# 
   643  0893                     	;# 
   644  0893                     	;# 
   645  0893                     	;# 
   646  0893                     	;# 
   647  0894                     	;# 
   648  0894                     	;# 
   649  0894                     	;# 
   650  0895                     	;# 
   651  0895                     	;# 
   652  0895                     	;# 
   653  0896                     	;# 
   654  0896                     	;# 
   655  0896                     	;# 
   656  089B                     	;# 
   657  0911                     	;# 
   658  0912                     	;# 
   659  0913                     	;# 
   660  0914                     	;# 
   661  0915                     	;# 
   662  0916                     	;# 
   663  0918                     	;# 
   664  0919                     	;# 
   665  091A                     	;# 
   666  091B                     	;# 
   667  091C                     	;# 
   668  091D                     	;# 
   669  091E                     	;# 
   670  091F                     	;# 
   671  0E0F                     	;# 
   672  0E10                     	;# 
   673  0E11                     	;# 
   674  0E12                     	;# 
   675  0E13                     	;# 
   676  0E14                     	;# 
   677  0E15                     	;# 
   678  0E16                     	;# 
   679  0E17                     	;# 
   680  0E18                     	;# 
   681  0E19                     	;# 
   682  0E1A                     	;# 
   683  0E1B                     	;# 
   684  0E1C                     	;# 
   685  0E1D                     	;# 
   686  0E1E                     	;# 
   687  0E1F                     	;# 
   688  0E20                     	;# 
   689  0E21                     	;# 
   690  0E22                     	;# 
   691  0E24                     	;# 
   692  0E25                     	;# 
   693  0E28                     	;# 
   694  0E29                     	;# 
   695  0E2A                     	;# 
   696  0E2B                     	;# 
   697  0E2C                     	;# 
   698  0E2D                     	;# 
   699  0E2E                     	;# 
   700  0E2F                     	;# 
   701  0E90                     	;# 
   702  0E91                     	;# 
   703  0E92                     	;# 
   704  0E94                     	;# 
   705  0E95                     	;# 
   706  0EA0                     	;# 
   707  0EA1                     	;# 
   708  0EA2                     	;# 
   709  0EA3                     	;# 
   710  0EA4                     	;# 
   711  0EA5                     	;# 
   712  0F0F                     	;# 
   713  0F10                     	;# 
   714  0F11                     	;# 
   715  0F12                     	;# 
   716  0F13                     	;# 
   717  0F14                     	;# 
   718  0F15                     	;# 
   719  0F16                     	;# 
   720  0F17                     	;# 
   721  0F18                     	;# 
   722  0F19                     	;# 
   723  0F1A                     	;# 
   724  0F1B                     	;# 
   725  0F1C                     	;# 
   726  0F1D                     	;# 
   727  0F1E                     	;# 
   728  0F1F                     	;# 
   729  0F20                     	;# 
   730  0F21                     	;# 
   731  0F22                     	;# 
   732  0F23                     	;# 
   733  0F24                     	;# 
   734  0F25                     	;# 
   735  0F26                     	;# 
   736  0F27                     	;# 
   737  0F28                     	;# 
   738  0F29                     	;# 
   739  0F2A                     	;# 
   740  0F2B                     	;# 
   741  0F2C                     	;# 
   742  0F2D                     	;# 
   743  0F2E                     	;# 
   744  0F2F                     	;# 
   745  0F30                     	;# 
   746  0F31                     	;# 
   747  0F32                     	;# 
   748  0F33                     	;# 
   749  0F34                     	;# 
   750  0F35                     	;# 
   751  0F36                     	;# 
   752  0F37                     	;# 
   753  0FE4                     	;# 
   754  0FE5                     	;# 
   755  0FE6                     	;# 
   756  0FE7                     	;# 
   757  0FE8                     	;# 
   758  0FE9                     	;# 
   759  0FEA                     	;# 
   760  0FEB                     	;# 
   761  0FED                     	;# 
   762  0FEE                     	;# 
   763  0FEF                     	;# 
   764  0000                     	;# 
   765  0001                     	;# 
   766  0002                     	;# 
   767  0003                     	;# 
   768  0004                     	;# 
   769  0005                     	;# 
   770  0006                     	;# 
   771  0007                     	;# 
   772  0008                     	;# 
   773  0009                     	;# 
   774  000A                     	;# 
   775  000B                     	;# 
   776  000C                     	;# 
   777  000E                     	;# 
   778  0010                     	;# 
   779  0011                     	;# 
   780  0012                     	;# 
   781  0013                     	;# 
   782  0014                     	;# 
   783  0015                     	;# 
   784  0015                     	;# 
   785  0016                     	;# 
   786  0016                     	;# 
   787  0017                     	;# 
   788  0018                     	;# 
   789  0019                     	;# 
   790  0019                     	;# 
   791  001A                     	;# 
   792  001B                     	;# 
   793  001C                     	;# 
   794  001D                     	;# 
   795  001E                     	;# 
   796  001F                     	;# 
   797  008C                     	;# 
   798  008E                     	;# 
   799  0090                     	;# 
   800  0091                     	;# 
   801  0092                     	;# 
   802  0093                     	;# 
   803  0094                     	;# 
   804  0097                     	;# 
   805  009B                     	;# 
   806  009B                     	;# 
   807  009C                     	;# 
   808  009D                     	;# 
   809  009E                     	;# 
   810  009F                     	;# 
   811  010C                     	;# 
   812  010E                     	;# 
   813  0111                     	;# 
   814  0112                     	;# 
   815  0113                     	;# 
   816  0114                     	;# 
   817  0115                     	;# 
   818  0116                     	;# 
   819  0117                     	;# 
   820  0118                     	;# 
   821  0119                     	;# 
   822  018C                     	;# 
   823  018E                     	;# 
   824  0197                     	;# 
   825  0199                     	;# 
   826  0199                     	;# 
   827  0199                     	;# 
   828  019A                     	;# 
   829  019A                     	;# 
   830  019A                     	;# 
   831  019B                     	;# 
   832  019B                     	;# 
   833  019B                     	;# 
   834  019B                     	;# 
   835  019B                     	;# 
   836  019C                     	;# 
   837  019C                     	;# 
   838  019C                     	;# 
   839  019D                     	;# 
   840  019D                     	;# 
   841  019D                     	;# 
   842  019E                     	;# 
   843  019E                     	;# 
   844  019E                     	;# 
   845  019F                     	;# 
   846  019F                     	;# 
   847  019F                     	;# 
   848  019F                     	;# 
   849  019F                     	;# 
   850  020C                     	;# 
   851  020E                     	;# 
   852  0211                     	;# 
   853  0211                     	;# 
   854  0212                     	;# 
   855  0212                     	;# 
   856  0213                     	;# 
   857  0213                     	;# 
   858  0214                     	;# 
   859  0214                     	;# 
   860  0215                     	;# 
   861  0215                     	;# 
   862  0215                     	;# 
   863  0215                     	;# 
   864  0216                     	;# 
   865  0216                     	;# 
   866  0217                     	;# 
   867  0217                     	;# 
   868  0219                     	;# 
   869  021A                     	;# 
   870  021B                     	;# 
   871  021C                     	;# 
   872  021D                     	;# 
   873  021D                     	;# 
   874  021E                     	;# 
   875  021F                     	;# 
   876  028C                     	;# 
   877  028E                     	;# 
   878  0291                     	;# 
   879  0291                     	;# 
   880  0292                     	;# 
   881  0293                     	;# 
   882  0294                     	;# 
   883  0295                     	;# 
   884  0295                     	;# 
   885  0296                     	;# 
   886  0297                     	;# 
   887  0298                     	;# 
   888  029F                     	;# 
   889  030C                     	;# 
   890  030E                     	;# 
   891  0311                     	;# 
   892  0311                     	;# 
   893  0312                     	;# 
   894  0313                     	;# 
   895  0314                     	;# 
   896  0315                     	;# 
   897  0315                     	;# 
   898  0316                     	;# 
   899  0317                     	;# 
   900  0318                     	;# 
   901  038C                     	;# 
   902  038E                     	;# 
   903  0391                     	;# 
   904  0392                     	;# 
   905  0393                     	;# 
   906  0397                     	;# 
   907  0398                     	;# 
   908  0399                     	;# 
   909  039A                     	;# 
   910  039C                     	;# 
   911  039D                     	;# 
   912  039E                     	;# 
   913  039F                     	;# 
   914  0411                     	;# 
   915  0411                     	;# 
   916  0412                     	;# 
   917  0413                     	;# 
   918  0414                     	;# 
   919  0415                     	;# 
   920  0416                     	;# 
   921  0417                     	;# 
   922  0418                     	;# 
   923  0418                     	;# 
   924  0419                     	;# 
   925  041A                     	;# 
   926  041B                     	;# 
   927  041C                     	;# 
   928  041D                     	;# 
   929  041E                     	;# 
   930  041F                     	;# 
   931  0498                     	;# 
   932  0498                     	;# 
   933  0499                     	;# 
   934  049A                     	;# 
   935  049B                     	;# 
   936  049B                     	;# 
   937  049C                     	;# 
   938  049D                     	;# 
   939  049E                     	;# 
   940  049F                     	;# 
   941  0617                     	;# 
   942  0618                     	;# 
   943  0619                     	;# 
   944  0619                     	;# 
   945  061A                     	;# 
   946  061B                     	;# 
   947  061C                     	;# 
   948  061C                     	;# 
   949  061F                     	;# 
   950  0691                     	;# 
   951  0692                     	;# 
   952  0693                     	;# 
   953  0694                     	;# 
   954  0695                     	;# 
   955  0696                     	;# 
   956  0697                     	;# 
   957  0698                     	;# 
   958  0699                     	;# 
   959  0711                     	;# 
   960  0712                     	;# 
   961  0713                     	;# 
   962  0714                     	;# 
   963  0715                     	;# 
   964  0716                     	;# 
   965  0717                     	;# 
   966  0718                     	;# 
   967  0719                     	;# 
   968  0891                     	;# 
   969  0891                     	;# 
   970  0891                     	;# 
   971  0891                     	;# 
   972  0891                     	;# 
   973  0891                     	;# 
   974  0892                     	;# 
   975  0892                     	;# 
   976  0892                     	;# 
   977  0893                     	;# 
   978  0893                     	;# 
   979  0893                     	;# 
   980  0893                     	;# 
   981  0893                     	;# 
   982  0893                     	;# 
   983  0894                     	;# 
   984  0894                     	;# 
   985  0894                     	;# 
   986  0895                     	;# 
   987  0895                     	;# 
   988  0895                     	;# 
   989  0896                     	;# 
   990  0896                     	;# 
   991  0896                     	;# 
   992  089B                     	;# 
   993  0911                     	;# 
   994  0912                     	;# 
   995  0913                     	;# 
   996  0914                     	;# 
   997  0915                     	;# 
   998  0916                     	;# 
   999  0918                     	;# 
  1000  0919                     	;# 
  1001  091A                     	;# 
  1002  091B                     	;# 
  1003  091C                     	;# 
  1004  091D                     	;# 
  1005  091E                     	;# 
  1006  091F                     	;# 
  1007  0E0F                     	;# 
  1008  0E10                     	;# 
  1009  0E11                     	;# 
  1010  0E12                     	;# 
  1011  0E13                     	;# 
  1012  0E14                     	;# 
  1013  0E15                     	;# 
  1014  0E16                     	;# 
  1015  0E17                     	;# 
  1016  0E18                     	;# 
  1017  0E19                     	;# 
  1018  0E1A                     	;# 
  1019  0E1B                     	;# 
  1020  0E1C                     	;# 
  1021  0E1D                     	;# 
  1022  0E1E                     	;# 
  1023  0E1F                     	;# 
  1024  0E20                     	;# 
  1025  0E21                     	;# 
  1026  0E22                     	;# 
  1027  0E24                     	;# 
  1028  0E25                     	;# 
  1029  0E28                     	;# 
  1030  0E29                     	;# 
  1031  0E2A                     	;# 
  1032  0E2B                     	;# 
  1033  0E2C                     	;# 
  1034  0E2D                     	;# 
  1035  0E2E                     	;# 
  1036  0E2F                     	;# 
  1037  0E90                     	;# 
  1038  0E91                     	;# 
  1039  0E92                     	;# 
  1040  0E94                     	;# 
  1041  0E95                     	;# 
  1042  0EA0                     	;# 
  1043  0EA1                     	;# 
  1044  0EA2                     	;# 
  1045  0EA3                     	;# 
  1046  0EA4                     	;# 
  1047  0EA5                     	;# 
  1048  0F0F                     	;# 
  1049  0F10                     	;# 
  1050  0F11                     	;# 
  1051  0F12                     	;# 
  1052  0F13                     	;# 
  1053  0F14                     	;# 
  1054  0F15                     	;# 
  1055  0F16                     	;# 
  1056  0F17                     	;# 
  1057  0F18                     	;# 
  1058  0F19                     	;# 
  1059  0F1A                     	;# 
  1060  0F1B                     	;# 
  1061  0F1C                     	;# 
  1062  0F1D                     	;# 
  1063  0F1E                     	;# 
  1064  0F1F                     	;# 
  1065  0F20                     	;# 
  1066  0F21                     	;# 
  1067  0F22                     	;# 
  1068  0F23                     	;# 
  1069  0F24                     	;# 
  1070  0F25                     	;# 
  1071  0F26                     	;# 
  1072  0F27                     	;# 
  1073  0F28                     	;# 
  1074  0F29                     	;# 
  1075  0F2A                     	;# 
  1076  0F2B                     	;# 
  1077  0F2C                     	;# 
  1078  0F2D                     	;# 
  1079  0F2E                     	;# 
  1080  0F2F                     	;# 
  1081  0F30                     	;# 
  1082  0F31                     	;# 
  1083  0F32                     	;# 
  1084  0F33                     	;# 
  1085  0F34                     	;# 
  1086  0F35                     	;# 
  1087  0F36                     	;# 
  1088  0F37                     	;# 
  1089  0FE4                     	;# 
  1090  0FE5                     	;# 
  1091  0FE6                     	;# 
  1092  0FE7                     	;# 
  1093  0FE8                     	;# 
  1094  0FE9                     	;# 
  1095  0FEA                     	;# 
  1096  0FEB                     	;# 
  1097  0FED                     	;# 
  1098  0FEE                     	;# 
  1099  0FEF                     	;# 
  1100  0000                     	;# 
  1101  0001                     	;# 
  1102  0002                     	;# 
  1103  0003                     	;# 
  1104  0004                     	;# 
  1105  0005                     	;# 
  1106  0006                     	;# 
  1107  0007                     	;# 
  1108  0008                     	;# 
  1109  0009                     	;# 
  1110  000A                     	;# 
  1111  000B                     	;# 
  1112  000C                     	;# 
  1113  000E                     	;# 
  1114  0010                     	;# 
  1115  0011                     	;# 
  1116  0012                     	;# 
  1117  0013                     	;# 
  1118  0014                     	;# 
  1119  0015                     	;# 
  1120  0015                     	;# 
  1121  0016                     	;# 
  1122  0016                     	;# 
  1123  0017                     	;# 
  1124  0018                     	;# 
  1125  0019                     	;# 
  1126  0019                     	;# 
  1127  001A                     	;# 
  1128  001B                     	;# 
  1129  001C                     	;# 
  1130  001D                     	;# 
  1131  001E                     	;# 
  1132  001F                     	;# 
  1133  008C                     	;# 
  1134  008E                     	;# 
  1135  0090                     	;# 
  1136  0091                     	;# 
  1137  0092                     	;# 
  1138  0093                     	;# 
  1139  0094                     	;# 
  1140  0097                     	;# 
  1141  009B                     	;# 
  1142  009B                     	;# 
  1143  009C                     	;# 
  1144  009D                     	;# 
  1145  009E                     	;# 
  1146  009F                     	;# 
  1147  010C                     	;# 
  1148  010E                     	;# 
  1149  0111                     	;# 
  1150  0112                     	;# 
  1151  0113                     	;# 
  1152  0114                     	;# 
  1153  0115                     	;# 
  1154  0116                     	;# 
  1155  0117                     	;# 
  1156  0118                     	;# 
  1157  0119                     	;# 
  1158  018C                     	;# 
  1159  018E                     	;# 
  1160  0197                     	;# 
  1161  0199                     	;# 
  1162  0199                     	;# 
  1163  0199                     	;# 
  1164  019A                     	;# 
  1165  019A                     	;# 
  1166  019A                     	;# 
  1167  019B                     	;# 
  1168  019B                     	;# 
  1169  019B                     	;# 
  1170  019B                     	;# 
  1171  019B                     	;# 
  1172  019C                     	;# 
  1173  019C                     	;# 
  1174  019C                     	;# 
  1175  019D                     	;# 
  1176  019D                     	;# 
  1177  019D                     	;# 
  1178  019E                     	;# 
  1179  019E                     	;# 
  1180  019E                     	;# 
  1181  019F                     	;# 
  1182  019F                     	;# 
  1183  019F                     	;# 
  1184  019F                     	;# 
  1185  019F                     	;# 
  1186  020C                     	;# 
  1187  020E                     	;# 
  1188  0211                     	;# 
  1189  0211                     	;# 
  1190  0212                     	;# 
  1191  0212                     	;# 
  1192  0213                     	;# 
  1193  0213                     	;# 
  1194  0214                     	;# 
  1195  0214                     	;# 
  1196  0215                     	;# 
  1197  0215                     	;# 
  1198  0215                     	;# 
  1199  0215                     	;# 
  1200  0216                     	;# 
  1201  0216                     	;# 
  1202  0217                     	;# 
  1203  0217                     	;# 
  1204  0219                     	;# 
  1205  021A                     	;# 
  1206  021B                     	;# 
  1207  021C                     	;# 
  1208  021D                     	;# 
  1209  021D                     	;# 
  1210  021E                     	;# 
  1211  021F                     	;# 
  1212  028C                     	;# 
  1213  028E                     	;# 
  1214  0291                     	;# 
  1215  0291                     	;# 
  1216  0292                     	;# 
  1217  0293                     	;# 
  1218  0294                     	;# 
  1219  0295                     	;# 
  1220  0295                     	;# 
  1221  0296                     	;# 
  1222  0297                     	;# 
  1223  0298                     	;# 
  1224  029F                     	;# 
  1225  030C                     	;# 
  1226  030E                     	;# 
  1227  0311                     	;# 
  1228  0311                     	;# 
  1229  0312                     	;# 
  1230  0313                     	;# 
  1231  0314                     	;# 
  1232  0315                     	;# 
  1233  0315                     	;# 
  1234  0316                     	;# 
  1235  0317                     	;# 
  1236  0318                     	;# 
  1237  038C                     	;# 
  1238  038E                     	;# 
  1239  0391                     	;# 
  1240  0392                     	;# 
  1241  0393                     	;# 
  1242  0397                     	;# 
  1243  0398                     	;# 
  1244  0399                     	;# 
  1245  039A                     	;# 
  1246  039C                     	;# 
  1247  039D                     	;# 
  1248  039E                     	;# 
  1249  039F                     	;# 
  1250  0411                     	;# 
  1251  0411                     	;# 
  1252  0412                     	;# 
  1253  0413                     	;# 
  1254  0414                     	;# 
  1255  0415                     	;# 
  1256  0416                     	;# 
  1257  0417                     	;# 
  1258  0418                     	;# 
  1259  0418                     	;# 
  1260  0419                     	;# 
  1261  041A                     	;# 
  1262  041B                     	;# 
  1263  041C                     	;# 
  1264  041D                     	;# 
  1265  041E                     	;# 
  1266  041F                     	;# 
  1267  0498                     	;# 
  1268  0498                     	;# 
  1269  0499                     	;# 
  1270  049A                     	;# 
  1271  049B                     	;# 
  1272  049B                     	;# 
  1273  049C                     	;# 
  1274  049D                     	;# 
  1275  049E                     	;# 
  1276  049F                     	;# 
  1277  0617                     	;# 
  1278  0618                     	;# 
  1279  0619                     	;# 
  1280  0619                     	;# 
  1281  061A                     	;# 
  1282  061B                     	;# 
  1283  061C                     	;# 
  1284  061C                     	;# 
  1285  061F                     	;# 
  1286  0691                     	;# 
  1287  0692                     	;# 
  1288  0693                     	;# 
  1289  0694                     	;# 
  1290  0695                     	;# 
  1291  0696                     	;# 
  1292  0697                     	;# 
  1293  0698                     	;# 
  1294  0699                     	;# 
  1295  0711                     	;# 
  1296  0712                     	;# 
  1297  0713                     	;# 
  1298  0714                     	;# 
  1299  0715                     	;# 
  1300  0716                     	;# 
  1301  0717                     	;# 
  1302  0718                     	;# 
  1303  0719                     	;# 
  1304  0891                     	;# 
  1305  0891                     	;# 
  1306  0891                     	;# 
  1307  0891                     	;# 
  1308  0891                     	;# 
  1309  0891                     	;# 
  1310  0892                     	;# 
  1311  0892                     	;# 
  1312  0892                     	;# 
  1313  0893                     	;# 
  1314  0893                     	;# 
  1315  0893                     	;# 
  1316  0893                     	;# 
  1317  0893                     	;# 
  1318  0893                     	;# 
  1319  0894                     	;# 
  1320  0894                     	;# 
  1321  0894                     	;# 
  1322  0895                     	;# 
  1323  0895                     	;# 
  1324  0895                     	;# 
  1325  0896                     	;# 
  1326  0896                     	;# 
  1327  0896                     	;# 
  1328  089B                     	;# 
  1329  0911                     	;# 
  1330  0912                     	;# 
  1331  0913                     	;# 
  1332  0914                     	;# 
  1333  0915                     	;# 
  1334  0916                     	;# 
  1335  0918                     	;# 
  1336  0919                     	;# 
  1337  091A                     	;# 
  1338  091B                     	;# 
  1339  091C                     	;# 
  1340  091D                     	;# 
  1341  091E                     	;# 
  1342  091F                     	;# 
  1343  0E0F                     	;# 
  1344  0E10                     	;# 
  1345  0E11                     	;# 
  1346  0E12                     	;# 
  1347  0E13                     	;# 
  1348  0E14                     	;# 
  1349  0E15                     	;# 
  1350  0E16                     	;# 
  1351  0E17                     	;# 
  1352  0E18                     	;# 
  1353  0E19                     	;# 
  1354  0E1A                     	;# 
  1355  0E1B                     	;# 
  1356  0E1C                     	;# 
  1357  0E1D                     	;# 
  1358  0E1E                     	;# 
  1359  0E1F                     	;# 
  1360  0E20                     	;# 
  1361  0E21                     	;# 
  1362  0E22                     	;# 
  1363  0E24                     	;# 
  1364  0E25                     	;# 
  1365  0E28                     	;# 
  1366  0E29                     	;# 
  1367  0E2A                     	;# 
  1368  0E2B                     	;# 
  1369  0E2C                     	;# 
  1370  0E2D                     	;# 
  1371  0E2E                     	;# 
  1372  0E2F                     	;# 
  1373  0E90                     	;# 
  1374  0E91                     	;# 
  1375  0E92                     	;# 
  1376  0E94                     	;# 
  1377  0E95                     	;# 
  1378  0EA0                     	;# 
  1379  0EA1                     	;# 
  1380  0EA2                     	;# 
  1381  0EA3                     	;# 
  1382  0EA4                     	;# 
  1383  0EA5                     	;# 
  1384  0F0F                     	;# 
  1385  0F10                     	;# 
  1386  0F11                     	;# 
  1387  0F12                     	;# 
  1388  0F13                     	;# 
  1389  0F14                     	;# 
  1390  0F15                     	;# 
  1391  0F16                     	;# 
  1392  0F17                     	;# 
  1393  0F18                     	;# 
  1394  0F19                     	;# 
  1395  0F1A                     	;# 
  1396  0F1B                     	;# 
  1397  0F1C                     	;# 
  1398  0F1D                     	;# 
  1399  0F1E                     	;# 
  1400  0F1F                     	;# 
  1401  0F20                     	;# 
  1402  0F21                     	;# 
  1403  0F22                     	;# 
  1404  0F23                     	;# 
  1405  0F24                     	;# 
  1406  0F25                     	;# 
  1407  0F26                     	;# 
  1408  0F27                     	;# 
  1409  0F28                     	;# 
  1410  0F29                     	;# 
  1411  0F2A                     	;# 
  1412  0F2B                     	;# 
  1413  0F2C                     	;# 
  1414  0F2D                     	;# 
  1415  0F2E                     	;# 
  1416  0F2F                     	;# 
  1417  0F30                     	;# 
  1418  0F31                     	;# 
  1419  0F32                     	;# 
  1420  0F33                     	;# 
  1421  0F34                     	;# 
  1422  0F35                     	;# 
  1423  0F36                     	;# 
  1424  0F37                     	;# 
  1425  0FE4                     	;# 
  1426  0FE5                     	;# 
  1427  0FE6                     	;# 
  1428  0FE7                     	;# 
  1429  0FE8                     	;# 
  1430  0FE9                     	;# 
  1431  0FEA                     	;# 
  1432  0FEB                     	;# 
  1433  0FED                     	;# 
  1434  0FEE                     	;# 
  1435  0FEF                     	;# 
  1436  0000                     	;# 
  1437  0001                     	;# 
  1438  0002                     	;# 
  1439  0003                     	;# 
  1440  0004                     	;# 
  1441  0005                     	;# 
  1442  0006                     	;# 
  1443  0007                     	;# 
  1444  0008                     	;# 
  1445  0009                     	;# 
  1446  000A                     	;# 
  1447  000B                     	;# 
  1448  000C                     	;# 
  1449  000E                     	;# 
  1450  0010                     	;# 
  1451  0011                     	;# 
  1452  0012                     	;# 
  1453  0013                     	;# 
  1454  0014                     	;# 
  1455  0015                     	;# 
  1456  0015                     	;# 
  1457  0016                     	;# 
  1458  0016                     	;# 
  1459  0017                     	;# 
  1460  0018                     	;# 
  1461  0019                     	;# 
  1462  0019                     	;# 
  1463  001A                     	;# 
  1464  001B                     	;# 
  1465  001C                     	;# 
  1466  001D                     	;# 
  1467  001E                     	;# 
  1468  001F                     	;# 
  1469  008C                     	;# 
  1470  008E                     	;# 
  1471  0090                     	;# 
  1472  0091                     	;# 
  1473  0092                     	;# 
  1474  0093                     	;# 
  1475  0094                     	;# 
  1476  0097                     	;# 
  1477  009B                     	;# 
  1478  009B                     	;# 
  1479  009C                     	;# 
  1480  009D                     	;# 
  1481  009E                     	;# 
  1482  009F                     	;# 
  1483  010C                     	;# 
  1484  010E                     	;# 
  1485  0111                     	;# 
  1486  0112                     	;# 
  1487  0113                     	;# 
  1488  0114                     	;# 
  1489  0115                     	;# 
  1490  0116                     	;# 
  1491  0117                     	;# 
  1492  0118                     	;# 
  1493  0119                     	;# 
  1494  018C                     	;# 
  1495  018E                     	;# 
  1496  0197                     	;# 
  1497  0199                     	;# 
  1498  0199                     	;# 
  1499  0199                     	;# 
  1500  019A                     	;# 
  1501  019A                     	;# 
  1502  019A                     	;# 
  1503  019B                     	;# 
  1504  019B                     	;# 
  1505  019B                     	;# 
  1506  019B                     	;# 
  1507  019B                     	;# 
  1508  019C                     	;# 
  1509  019C                     	;# 
  1510  019C                     	;# 
  1511  019D                     	;# 
  1512  019D                     	;# 
  1513  019D                     	;# 
  1514  019E                     	;# 
  1515  019E                     	;# 
  1516  019E                     	;# 
  1517  019F                     	;# 
  1518  019F                     	;# 
  1519  019F                     	;# 
  1520  019F                     	;# 
  1521  019F                     	;# 
  1522  020C                     	;# 
  1523  020E                     	;# 
  1524  0211                     	;# 
  1525  0211                     	;# 
  1526  0212                     	;# 
  1527  0212                     	;# 
  1528  0213                     	;# 
  1529  0213                     	;# 
  1530  0214                     	;# 
  1531  0214                     	;# 
  1532  0215                     	;# 
  1533  0215                     	;# 
  1534  0215                     	;# 
  1535  0215                     	;# 
  1536  0216                     	;# 
  1537  0216                     	;# 
  1538  0217                     	;# 
  1539  0217                     	;# 
  1540  0219                     	;# 
  1541  021A                     	;# 
  1542  021B                     	;# 
  1543  021C                     	;# 
  1544  021D                     	;# 
  1545  021D                     	;# 
  1546  021E                     	;# 
  1547  021F                     	;# 
  1548  028C                     	;# 
  1549  028E                     	;# 
  1550  0291                     	;# 
  1551  0291                     	;# 
  1552  0292                     	;# 
  1553  0293                     	;# 
  1554  0294                     	;# 
  1555  0295                     	;# 
  1556  0295                     	;# 
  1557  0296                     	;# 
  1558  0297                     	;# 
  1559  0298                     	;# 
  1560  029F                     	;# 
  1561  030C                     	;# 
  1562  030E                     	;# 
  1563  0311                     	;# 
  1564  0311                     	;# 
  1565  0312                     	;# 
  1566  0313                     	;# 
  1567  0314                     	;# 
  1568  0315                     	;# 
  1569  0315                     	;# 
  1570  0316                     	;# 
  1571  0317                     	;# 
  1572  0318                     	;# 
  1573  038C                     	;# 
  1574  038E                     	;# 
  1575  0391                     	;# 
  1576  0392                     	;# 
  1577  0393                     	;# 
  1578  0397                     	;# 
  1579  0398                     	;# 
  1580  0399                     	;# 
  1581  039A                     	;# 
  1582  039C                     	;# 
  1583  039D                     	;# 
  1584  039E                     	;# 
  1585  039F                     	;# 
  1586  0411                     	;# 
  1587  0411                     	;# 
  1588  0412                     	;# 
  1589  0413                     	;# 
  1590  0414                     	;# 
  1591  0415                     	;# 
  1592  0416                     	;# 
  1593  0417                     	;# 
  1594  0418                     	;# 
  1595  0418                     	;# 
  1596  0419                     	;# 
  1597  041A                     	;# 
  1598  041B                     	;# 
  1599  041C                     	;# 
  1600  041D                     	;# 
  1601  041E                     	;# 
  1602  041F                     	;# 
  1603  0498                     	;# 
  1604  0498                     	;# 
  1605  0499                     	;# 
  1606  049A                     	;# 
  1607  049B                     	;# 
  1608  049B                     	;# 
  1609  049C                     	;# 
  1610  049D                     	;# 
  1611  049E                     	;# 
  1612  049F                     	;# 
  1613  0617                     	;# 
  1614  0618                     	;# 
  1615  0619                     	;# 
  1616  0619                     	;# 
  1617  061A                     	;# 
  1618  061B                     	;# 
  1619  061C                     	;# 
  1620  061C                     	;# 
  1621  061F                     	;# 
  1622  0691                     	;# 
  1623  0692                     	;# 
  1624  0693                     	;# 
  1625  0694                     	;# 
  1626  0695                     	;# 
  1627  0696                     	;# 
  1628  0697                     	;# 
  1629  0698                     	;# 
  1630  0699                     	;# 
  1631  0711                     	;# 
  1632  0712                     	;# 
  1633  0713                     	;# 
  1634  0714                     	;# 
  1635  0715                     	;# 
  1636  0716                     	;# 
  1637  0717                     	;# 
  1638  0718                     	;# 
  1639  0719                     	;# 
  1640  0891                     	;# 
  1641  0891                     	;# 
  1642  0891                     	;# 
  1643  0891                     	;# 
  1644  0891                     	;# 
  1645  0891                     	;# 
  1646  0892                     	;# 
  1647  0892                     	;# 
  1648  0892                     	;# 
  1649  0893                     	;# 
  1650  0893                     	;# 
  1651  0893                     	;# 
  1652  0893                     	;# 
  1653  0893                     	;# 
  1654  0893                     	;# 
  1655  0894                     	;# 
  1656  0894                     	;# 
  1657  0894                     	;# 
  1658  0895                     	;# 
  1659  0895                     	;# 
  1660  0895                     	;# 
  1661  0896                     	;# 
  1662  0896                     	;# 
  1663  0896                     	;# 
  1664  089B                     	;# 
  1665  0911                     	;# 
  1666  0912                     	;# 
  1667  0913                     	;# 
  1668  0914                     	;# 
  1669  0915                     	;# 
  1670  0916                     	;# 
  1671  0918                     	;# 
  1672  0919                     	;# 
  1673  091A                     	;# 
  1674  091B                     	;# 
  1675  091C                     	;# 
  1676  091D                     	;# 
  1677  091E                     	;# 
  1678  091F                     	;# 
  1679  0E0F                     	;# 
  1680  0E10                     	;# 
  1681  0E11                     	;# 
  1682  0E12                     	;# 
  1683  0E13                     	;# 
  1684  0E14                     	;# 
  1685  0E15                     	;# 
  1686  0E16                     	;# 
  1687  0E17                     	;# 
  1688  0E18                     	;# 
  1689  0E19                     	;# 
  1690  0E1A                     	;# 
  1691  0E1B                     	;# 
  1692  0E1C                     	;# 
  1693  0E1D                     	;# 
  1694  0E1E                     	;# 
  1695  0E1F                     	;# 
  1696  0E20                     	;# 
  1697  0E21                     	;# 
  1698  0E22                     	;# 
  1699  0E24                     	;# 
  1700  0E25                     	;# 
  1701  0E28                     	;# 
  1702  0E29                     	;# 
  1703  0E2A                     	;# 
  1704  0E2B                     	;# 
  1705  0E2C                     	;# 
  1706  0E2D                     	;# 
  1707  0E2E                     	;# 
  1708  0E2F                     	;# 
  1709  0E90                     	;# 
  1710  0E91                     	;# 
  1711  0E92                     	;# 
  1712  0E94                     	;# 
  1713  0E95                     	;# 
  1714  0EA0                     	;# 
  1715  0EA1                     	;# 
  1716  0EA2                     	;# 
  1717  0EA3                     	;# 
  1718  0EA4                     	;# 
  1719  0EA5                     	;# 
  1720  0F0F                     	;# 
  1721  0F10                     	;# 
  1722  0F11                     	;# 
  1723  0F12                     	;# 
  1724  0F13                     	;# 
  1725  0F14                     	;# 
  1726  0F15                     	;# 
  1727  0F16                     	;# 
  1728  0F17                     	;# 
  1729  0F18                     	;# 
  1730  0F19                     	;# 
  1731  0F1A                     	;# 
  1732  0F1B                     	;# 
  1733  0F1C                     	;# 
  1734  0F1D                     	;# 
  1735  0F1E                     	;# 
  1736  0F1F                     	;# 
  1737  0F20                     	;# 
  1738  0F21                     	;# 
  1739  0F22                     	;# 
  1740  0F23                     	;# 
  1741  0F24                     	;# 
  1742  0F25                     	;# 
  1743  0F26                     	;# 
  1744  0F27                     	;# 
  1745  0F28                     	;# 
  1746  0F29                     	;# 
  1747  0F2A                     	;# 
  1748  0F2B                     	;# 
  1749  0F2C                     	;# 
  1750  0F2D                     	;# 
  1751  0F2E                     	;# 
  1752  0F2F                     	;# 
  1753  0F30                     	;# 
  1754  0F31                     	;# 
  1755  0F32                     	;# 
  1756  0F33                     	;# 
  1757  0F34                     	;# 
  1758  0F35                     	;# 
  1759  0F36                     	;# 
  1760  0F37                     	;# 
  1761  0FE4                     	;# 
  1762  0FE5                     	;# 
  1763  0FE6                     	;# 
  1764  0FE7                     	;# 
  1765  0FE8                     	;# 
  1766  0FE9                     	;# 
  1767  0FEA                     	;# 
  1768  0FEB                     	;# 
  1769  0FED                     	;# 
  1770  0FEE                     	;# 
  1771  0FEF                     	;# 
  1772  0000                     	;# 
  1773  0001                     	;# 
  1774  0002                     	;# 
  1775  0003                     	;# 
  1776  0004                     	;# 
  1777  0005                     	;# 
  1778  0006                     	;# 
  1779  0007                     	;# 
  1780  0008                     	;# 
  1781  0009                     	;# 
  1782  000A                     	;# 
  1783  000B                     	;# 
  1784  000C                     	;# 
  1785  000E                     	;# 
  1786  0010                     	;# 
  1787  0011                     	;# 
  1788  0012                     	;# 
  1789  0013                     	;# 
  1790  0014                     	;# 
  1791  0015                     	;# 
  1792  0015                     	;# 
  1793  0016                     	;# 
  1794  0016                     	;# 
  1795  0017                     	;# 
  1796  0018                     	;# 
  1797  0019                     	;# 
  1798  0019                     	;# 
  1799  001A                     	;# 
  1800  001B                     	;# 
  1801  001C                     	;# 
  1802  001D                     	;# 
  1803  001E                     	;# 
  1804  001F                     	;# 
  1805  008C                     	;# 
  1806  008E                     	;# 
  1807  0090                     	;# 
  1808  0091                     	;# 
  1809  0092                     	;# 
  1810  0093                     	;# 
  1811  0094                     	;# 
  1812  0097                     	;# 
  1813  009B                     	;# 
  1814  009B                     	;# 
  1815  009C                     	;# 
  1816  009D                     	;# 
  1817  009E                     	;# 
  1818  009F                     	;# 
  1819  010C                     	;# 
  1820  010E                     	;# 
  1821  0111                     	;# 
  1822  0112                     	;# 
  1823  0113                     	;# 
  1824  0114                     	;# 
  1825  0115                     	;# 
  1826  0116                     	;# 
  1827  0117                     	;# 
  1828  0118                     	;# 
  1829  0119                     	;# 
  1830  018C                     	;# 
  1831  018E                     	;# 
  1832  0197                     	;# 
  1833  0199                     	;# 
  1834  0199                     	;# 
  1835  0199                     	;# 
  1836  019A                     	;# 
  1837  019A                     	;# 
  1838  019A                     	;# 
  1839  019B                     	;# 
  1840  019B                     	;# 
  1841  019B                     	;# 
  1842  019B                     	;# 
  1843  019B                     	;# 
  1844  019C                     	;# 
  1845  019C                     	;# 
  1846  019C                     	;# 
  1847  019D                     	;# 
  1848  019D                     	;# 
  1849  019D                     	;# 
  1850  019E                     	;# 
  1851  019E                     	;# 
  1852  019E                     	;# 
  1853  019F                     	;# 
  1854  019F                     	;# 
  1855  019F                     	;# 
  1856  019F                     	;# 
  1857  019F                     	;# 
  1858  020C                     	;# 
  1859  020E                     	;# 
  1860  0211                     	;# 
  1861  0211                     	;# 
  1862  0212                     	;# 
  1863  0212                     	;# 
  1864  0213                     	;# 
  1865  0213                     	;# 
  1866  0214                     	;# 
  1867  0214                     	;# 
  1868  0215                     	;# 
  1869  0215                     	;# 
  1870  0215                     	;# 
  1871  0215                     	;# 
  1872  0216                     	;# 
  1873  0216                     	;# 
  1874  0217                     	;# 
  1875  0217                     	;# 
  1876  0219                     	;# 
  1877  021A                     	;# 
  1878  021B                     	;# 
  1879  021C                     	;# 
  1880  021D                     	;# 
  1881  021D                     	;# 
  1882  021E                     	;# 
  1883  021F                     	;# 
  1884  028C                     	;# 
  1885  028E                     	;# 
  1886  0291                     	;# 
  1887  0291                     	;# 
  1888  0292                     	;# 
  1889  0293                     	;# 
  1890  0294                     	;# 
  1891  0295                     	;# 
  1892  0295                     	;# 
  1893  0296                     	;# 
  1894  0297                     	;# 
  1895  0298                     	;# 
  1896  029F                     	;# 
  1897  030C                     	;# 
  1898  030E                     	;# 
  1899  0311                     	;# 
  1900  0311                     	;# 
  1901  0312                     	;# 
  1902  0313                     	;# 
  1903  0314                     	;# 
  1904  0315                     	;# 
  1905  0315                     	;# 
  1906  0316                     	;# 
  1907  0317                     	;# 
  1908  0318                     	;# 
  1909  038C                     	;# 
  1910  038E                     	;# 
  1911  0391                     	;# 
  1912  0392                     	;# 
  1913  0393                     	;# 
  1914  0397                     	;# 
  1915  0398                     	;# 
  1916  0399                     	;# 
  1917  039A                     	;# 
  1918  039C                     	;# 
  1919  039D                     	;# 
  1920  039E                     	;# 
  1921  039F                     	;# 
  1922  0411                     	;# 
  1923  0411                     	;# 
  1924  0412                     	;# 
  1925  0413                     	;# 
  1926  0414                     	;# 
  1927  0415                     	;# 
  1928  0416                     	;# 
  1929  0417                     	;# 
  1930  0418                     	;# 
  1931  0418                     	;# 
  1932  0419                     	;# 
  1933  041A                     	;# 
  1934  041B                     	;# 
  1935  041C                     	;# 
  1936  041D                     	;# 
  1937  041E                     	;# 
  1938  041F                     	;# 
  1939  0498                     	;# 
  1940  0498                     	;# 
  1941  0499                     	;# 
  1942  049A                     	;# 
  1943  049B                     	;# 
  1944  049B                     	;# 
  1945  049C                     	;# 
  1946  049D                     	;# 
  1947  049E                     	;# 
  1948  049F                     	;# 
  1949  0617                     	;# 
  1950  0618                     	;# 
  1951  0619                     	;# 
  1952  0619                     	;# 
  1953  061A                     	;# 
  1954  061B                     	;# 
  1955  061C                     	;# 
  1956  061C                     	;# 
  1957  061F                     	;# 
  1958  0691                     	;# 
  1959  0692                     	;# 
  1960  0693                     	;# 
  1961  0694                     	;# 
  1962  0695                     	;# 
  1963  0696                     	;# 
  1964  0697                     	;# 
  1965  0698                     	;# 
  1966  0699                     	;# 
  1967  0711                     	;# 
  1968  0712                     	;# 
  1969  0713                     	;# 
  1970  0714                     	;# 
  1971  0715                     	;# 
  1972  0716                     	;# 
  1973  0717                     	;# 
  1974  0718                     	;# 
  1975  0719                     	;# 
  1976  0891                     	;# 
  1977  0891                     	;# 
  1978  0891                     	;# 
  1979  0891                     	;# 
  1980  0891                     	;# 
  1981  0891                     	;# 
  1982  0892                     	;# 
  1983  0892                     	;# 
  1984  0892                     	;# 
  1985  0893                     	;# 
  1986  0893                     	;# 
  1987  0893                     	;# 
  1988  0893                     	;# 
  1989  0893                     	;# 
  1990  0893                     	;# 
  1991  0894                     	;# 
  1992  0894                     	;# 
  1993  0894                     	;# 
  1994  0895                     	;# 
  1995  0895                     	;# 
  1996  0895                     	;# 
  1997  0896                     	;# 
  1998  0896                     	;# 
  1999  0896                     	;# 
  2000  089B                     	;# 
  2001  0911                     	;# 
  2002  0912                     	;# 
  2003  0913                     	;# 
  2004  0914                     	;# 
  2005  0915                     	;# 
  2006  0916                     	;# 
  2007  0918                     	;# 
  2008  0919                     	;# 
  2009  091A                     	;# 
  2010  091B                     	;# 
  2011  091C                     	;# 
  2012  091D                     	;# 
  2013  091E                     	;# 
  2014  091F                     	;# 
  2015  0E0F                     	;# 
  2016  0E10                     	;# 
  2017  0E11                     	;# 
  2018  0E12                     	;# 
  2019  0E13                     	;# 
  2020  0E14                     	;# 
  2021  0E15                     	;# 
  2022  0E16                     	;# 
  2023  0E17                     	;# 
  2024  0E18                     	;# 
  2025  0E19                     	;# 
  2026  0E1A                     	;# 
  2027  0E1B                     	;# 
  2028  0E1C                     	;# 
  2029  0E1D                     	;# 
  2030  0E1E                     	;# 
  2031  0E1F                     	;# 
  2032  0E20                     	;# 
  2033  0E21                     	;# 
  2034  0E22                     	;# 
  2035  0E24                     	;# 
  2036  0E25                     	;# 
  2037  0E28                     	;# 
  2038  0E29                     	;# 
  2039  0E2A                     	;# 
  2040  0E2B                     	;# 
  2041  0E2C                     	;# 
  2042  0E2D                     	;# 
  2043  0E2E                     	;# 
  2044  0E2F                     	;# 
  2045  0E90                     	;# 
  2046  0E91                     	;# 
  2047  0E92                     	;# 
  2048  0E94                     	;# 
  2049  0E95                     	;# 
  2050  0EA0                     	;# 
  2051  0EA1                     	;# 
  2052  0EA2                     	;# 
  2053  0EA3                     	;# 
  2054  0EA4                     	;# 
  2055  0EA5                     	;# 
  2056  0F0F                     	;# 
  2057  0F10                     	;# 
  2058  0F11                     	;# 
  2059  0F12                     	;# 
  2060  0F13                     	;# 
  2061  0F14                     	;# 
  2062  0F15                     	;# 
  2063  0F16                     	;# 
  2064  0F17                     	;# 
  2065  0F18                     	;# 
  2066  0F19                     	;# 
  2067  0F1A                     	;# 
  2068  0F1B                     	;# 
  2069  0F1C                     	;# 
  2070  0F1D                     	;# 
  2071  0F1E                     	;# 
  2072  0F1F                     	;# 
  2073  0F20                     	;# 
  2074  0F21                     	;# 
  2075  0F22                     	;# 
  2076  0F23                     	;# 
  2077  0F24                     	;# 
  2078  0F25                     	;# 
  2079  0F26                     	;# 
  2080  0F27                     	;# 
  2081  0F28                     	;# 
  2082  0F29                     	;# 
  2083  0F2A                     	;# 
  2084  0F2B                     	;# 
  2085  0F2C                     	;# 
  2086  0F2D                     	;# 
  2087  0F2E                     	;# 
  2088  0F2F                     	;# 
  2089  0F30                     	;# 
  2090  0F31                     	;# 
  2091  0F32                     	;# 
  2092  0F33                     	;# 
  2093  0F34                     	;# 
  2094  0F35                     	;# 
  2095  0F36                     	;# 
  2096  0F37                     	;# 
  2097  0FE4                     	;# 
  2098  0FE5                     	;# 
  2099  0FE6                     	;# 
  2100  0FE7                     	;# 
  2101  0FE8                     	;# 
  2102  0FE9                     	;# 
  2103  0FEA                     	;# 
  2104  0FEB                     	;# 
  2105  0FED                     	;# 
  2106  0FEE                     	;# 
  2107  0FEF                     	;# 
  2108  0000                     	;# 
  2109  0001                     	;# 
  2110  0002                     	;# 
  2111  0003                     	;# 
  2112  0004                     	;# 
  2113  0005                     	;# 
  2114  0006                     	;# 
  2115  0007                     	;# 
  2116  0008                     	;# 
  2117  0009                     	;# 
  2118  000A                     	;# 
  2119  000B                     	;# 
  2120  000C                     	;# 
  2121  000E                     	;# 
  2122  0010                     	;# 
  2123  0011                     	;# 
  2124  0012                     	;# 
  2125  0013                     	;# 
  2126  0014                     	;# 
  2127  0015                     	;# 
  2128  0015                     	;# 
  2129  0016                     	;# 
  2130  0016                     	;# 
  2131  0017                     	;# 
  2132  0018                     	;# 
  2133  0019                     	;# 
  2134  0019                     	;# 
  2135  001A                     	;# 
  2136  001B                     	;# 
  2137  001C                     	;# 
  2138  001D                     	;# 
  2139  001E                     	;# 
  2140  001F                     	;# 
  2141  008C                     	;# 
  2142  008E                     	;# 
  2143  0090                     	;# 
  2144  0091                     	;# 
  2145  0092                     	;# 
  2146  0093                     	;# 
  2147  0094                     	;# 
  2148  0097                     	;# 
  2149  009B                     	;# 
  2150  009B                     	;# 
  2151  009C                     	;# 
  2152  009D                     	;# 
  2153  009E                     	;# 
  2154  009F                     	;# 
  2155  010C                     	;# 
  2156  010E                     	;# 
  2157  0111                     	;# 
  2158  0112                     	;# 
  2159  0113                     	;# 
  2160  0114                     	;# 
  2161  0115                     	;# 
  2162  0116                     	;# 
  2163  0117                     	;# 
  2164  0118                     	;# 
  2165  0119                     	;# 
  2166  018C                     	;# 
  2167  018E                     	;# 
  2168  0197                     	;# 
  2169  0199                     	;# 
  2170  0199                     	;# 
  2171  0199                     	;# 
  2172  019A                     	;# 
  2173  019A                     	;# 
  2174  019A                     	;# 
  2175  019B                     	;# 
  2176  019B                     	;# 
  2177  019B                     	;# 
  2178  019B                     	;# 
  2179  019B                     	;# 
  2180  019C                     	;# 
  2181  019C                     	;# 
  2182  019C                     	;# 
  2183  019D                     	;# 
  2184  019D                     	;# 
  2185  019D                     	;# 
  2186  019E                     	;# 
  2187  019E                     	;# 
  2188  019E                     	;# 
  2189  019F                     	;# 
  2190  019F                     	;# 
  2191  019F                     	;# 
  2192  019F                     	;# 
  2193  019F                     	;# 
  2194  020C                     	;# 
  2195  020E                     	;# 
  2196  0211                     	;# 
  2197  0211                     	;# 
  2198  0212                     	;# 
  2199  0212                     	;# 
  2200  0213                     	;# 
  2201  0213                     	;# 
  2202  0214                     	;# 
  2203  0214                     	;# 
  2204  0215                     	;# 
  2205  0215                     	;# 
  2206  0215                     	;# 
  2207  0215                     	;# 
  2208  0216                     	;# 
  2209  0216                     	;# 
  2210  0217                     	;# 
  2211  0217                     	;# 
  2212  0219                     	;# 
  2213  021A                     	;# 
  2214  021B                     	;# 
  2215  021C                     	;# 
  2216  021D                     	;# 
  2217  021D                     	;# 
  2218  021E                     	;# 
  2219  021F                     	;# 
  2220  028C                     	;# 
  2221  028E                     	;# 
  2222  0291                     	;# 
  2223  0291                     	;# 
  2224  0292                     	;# 
  2225  0293                     	;# 
  2226  0294                     	;# 
  2227  0295                     	;# 
  2228  0295                     	;# 
  2229  0296                     	;# 
  2230  0297                     	;# 
  2231  0298                     	;# 
  2232  029F                     	;# 
  2233  030C                     	;# 
  2234  030E                     	;# 
  2235  0311                     	;# 
  2236  0311                     	;# 
  2237  0312                     	;# 
  2238  0313                     	;# 
  2239  0314                     	;# 
  2240  0315                     	;# 
  2241  0315                     	;# 
  2242  0316                     	;# 
  2243  0317                     	;# 
  2244  0318                     	;# 
  2245  038C                     	;# 
  2246  038E                     	;# 
  2247  0391                     	;# 
  2248  0392                     	;# 
  2249  0393                     	;# 
  2250  0397                     	;# 
  2251  0398                     	;# 
  2252  0399                     	;# 
  2253  039A                     	;# 
  2254  039C                     	;# 
  2255  039D                     	;# 
  2256  039E                     	;# 
  2257  039F                     	;# 
  2258  0411                     	;# 
  2259  0411                     	;# 
  2260  0412                     	;# 
  2261  0413                     	;# 
  2262  0414                     	;# 
  2263  0415                     	;# 
  2264  0416                     	;# 
  2265  0417                     	;# 
  2266  0418                     	;# 
  2267  0418                     	;# 
  2268  0419                     	;# 
  2269  041A                     	;# 
  2270  041B                     	;# 
  2271  041C                     	;# 
  2272  041D                     	;# 
  2273  041E                     	;# 
  2274  041F                     	;# 
  2275  0498                     	;# 
  2276  0498                     	;# 
  2277  0499                     	;# 
  2278  049A                     	;# 
  2279  049B                     	;# 
  2280  049B                     	;# 
  2281  049C                     	;# 
  2282  049D                     	;# 
  2283  049E                     	;# 
  2284  049F                     	;# 
  2285  0617                     	;# 
  2286  0618                     	;# 
  2287  0619                     	;# 
  2288  0619                     	;# 
  2289  061A                     	;# 
  2290  061B                     	;# 
  2291  061C                     	;# 
  2292  061C                     	;# 
  2293  061F                     	;# 
  2294  0691                     	;# 
  2295  0692                     	;# 
  2296  0693                     	;# 
  2297  0694                     	;# 
  2298  0695                     	;# 
  2299  0696                     	;# 
  2300  0697                     	;# 
  2301  0698                     	;# 
  2302  0699                     	;# 
  2303  0711                     	;# 
  2304  0712                     	;# 
  2305  0713                     	;# 
  2306  0714                     	;# 
  2307  0715                     	;# 
  2308  0716                     	;# 
  2309  0717                     	;# 
  2310  0718                     	;# 
  2311  0719                     	;# 
  2312  0891                     	;# 
  2313  0891                     	;# 
  2314  0891                     	;# 
  2315  0891                     	;# 
  2316  0891                     	;# 
  2317  0891                     	;# 
  2318  0892                     	;# 
  2319  0892                     	;# 
  2320  0892                     	;# 
  2321  0893                     	;# 
  2322  0893                     	;# 
  2323  0893                     	;# 
  2324  0893                     	;# 
  2325  0893                     	;# 
  2326  0893                     	;# 
  2327  0894                     	;# 
  2328  0894                     	;# 
  2329  0894                     	;# 
  2330  0895                     	;# 
  2331  0895                     	;# 
  2332  0895                     	;# 
  2333  0896                     	;# 
  2334  0896                     	;# 
  2335  0896                     	;# 
  2336  089B                     	;# 
  2337  0911                     	;# 
  2338  0912                     	;# 
  2339  0913                     	;# 
  2340  0914                     	;# 
  2341  0915                     	;# 
  2342  0916                     	;# 
  2343  0918                     	;# 
  2344  0919                     	;# 
  2345  091A                     	;# 
  2346  091B                     	;# 
  2347  091C                     	;# 
  2348  091D                     	;# 
  2349  091E                     	;# 
  2350  091F                     	;# 
  2351  0E0F                     	;# 
  2352  0E10                     	;# 
  2353  0E11                     	;# 
  2354  0E12                     	;# 
  2355  0E13                     	;# 
  2356  0E14                     	;# 
  2357  0E15                     	;# 
  2358  0E16                     	;# 
  2359  0E17                     	;# 
  2360  0E18                     	;# 
  2361  0E19                     	;# 
  2362  0E1A                     	;# 
  2363  0E1B                     	;# 
  2364  0E1C                     	;# 
  2365  0E1D                     	;# 
  2366  0E1E                     	;# 
  2367  0E1F                     	;# 
  2368  0E20                     	;# 
  2369  0E21                     	;# 
  2370  0E22                     	;# 
  2371  0E24                     	;# 
  2372  0E25                     	;# 
  2373  0E28                     	;# 
  2374  0E29                     	;# 
  2375  0E2A                     	;# 
  2376  0E2B                     	;# 
  2377  0E2C                     	;# 
  2378  0E2D                     	;# 
  2379  0E2E                     	;# 
  2380  0E2F                     	;# 
  2381  0E90                     	;# 
  2382  0E91                     	;# 
  2383  0E92                     	;# 
  2384  0E94                     	;# 
  2385  0E95                     	;# 
  2386  0EA0                     	;# 
  2387  0EA1                     	;# 
  2388  0EA2                     	;# 
  2389  0EA3                     	;# 
  2390  0EA4                     	;# 
  2391  0EA5                     	;# 
  2392  0F0F                     	;# 
  2393  0F10                     	;# 
  2394  0F11                     	;# 
  2395  0F12                     	;# 
  2396  0F13                     	;# 
  2397  0F14                     	;# 
  2398  0F15                     	;# 
  2399  0F16                     	;# 
  2400  0F17                     	;# 
  2401  0F18                     	;# 
  2402  0F19                     	;# 
  2403  0F1A                     	;# 
  2404  0F1B                     	;# 
  2405  0F1C                     	;# 
  2406  0F1D                     	;# 
  2407  0F1E                     	;# 
  2408  0F1F                     	;# 
  2409  0F20                     	;# 
  2410  0F21                     	;# 
  2411  0F22                     	;# 
  2412  0F23                     	;# 
  2413  0F24                     	;# 
  2414  0F25                     	;# 
  2415  0F26                     	;# 
  2416  0F27                     	;# 
  2417  0F28                     	;# 
  2418  0F29                     	;# 
  2419  0F2A                     	;# 
  2420  0F2B                     	;# 
  2421  0F2C                     	;# 
  2422  0F2D                     	;# 
  2423  0F2E                     	;# 
  2424  0F2F                     	;# 
  2425  0F30                     	;# 
  2426  0F31                     	;# 
  2427  0F32                     	;# 
  2428  0F33                     	;# 
  2429  0F34                     	;# 
  2430  0F35                     	;# 
  2431  0F36                     	;# 
  2432  0F37                     	;# 
  2433  0FE4                     	;# 
  2434  0FE5                     	;# 
  2435  0FE6                     	;# 
  2436  0FE7                     	;# 
  2437  0FE8                     	;# 
  2438  0FE9                     	;# 
  2439  0FEA                     	;# 
  2440  0FEB                     	;# 
  2441  0FED                     	;# 
  2442  0FEE                     	;# 
  2443  0FEF                     	;# 
  2444  0000                     	;# 
  2445  0001                     	;# 
  2446  0002                     	;# 
  2447  0003                     	;# 
  2448  0004                     	;# 
  2449  0005                     	;# 
  2450  0006                     	;# 
  2451  0007                     	;# 
  2452  0008                     	;# 
  2453  0009                     	;# 
  2454  000A                     	;# 
  2455  000B                     	;# 
  2456  000C                     	;# 
  2457  000E                     	;# 
  2458  0010                     	;# 
  2459  0011                     	;# 
  2460  0012                     	;# 
  2461  0013                     	;# 
  2462  0014                     	;# 
  2463  0015                     	;# 
  2464  0015                     	;# 
  2465  0016                     	;# 
  2466  0016                     	;# 
  2467  0017                     	;# 
  2468  0018                     	;# 
  2469  0019                     	;# 
  2470  0019                     	;# 
  2471  001A                     	;# 
  2472  001B                     	;# 
  2473  001C                     	;# 
  2474  001D                     	;# 
  2475  001E                     	;# 
  2476  001F                     	;# 
  2477  008C                     	;# 
  2478  008E                     	;# 
  2479  0090                     	;# 
  2480  0091                     	;# 
  2481  0092                     	;# 
  2482  0093                     	;# 
  2483  0094                     	;# 
  2484  0097                     	;# 
  2485  009B                     	;# 
  2486  009B                     	;# 
  2487  009C                     	;# 
  2488  009D                     	;# 
  2489  009E                     	;# 
  2490  009F                     	;# 
  2491  010C                     	;# 
  2492  010E                     	;# 
  2493  0111                     	;# 
  2494  0112                     	;# 
  2495  0113                     	;# 
  2496  0114                     	;# 
  2497  0115                     	;# 
  2498  0116                     	;# 
  2499  0117                     	;# 
  2500  0118                     	;# 
  2501  0119                     	;# 
  2502  018C                     	;# 
  2503  018E                     	;# 
  2504  0197                     	;# 
  2505  0199                     	;# 
  2506  0199                     	;# 
  2507  0199                     	;# 
  2508  019A                     	;# 
  2509  019A                     	;# 
  2510  019A                     	;# 
  2511  019B                     	;# 
  2512  019B                     	;# 
  2513  019B                     	;# 
  2514  019B                     	;# 
  2515  019B                     	;# 
  2516  019C                     	;# 
  2517  019C                     	;# 
  2518  019C                     	;# 
  2519  019D                     	;# 
  2520  019D                     	;# 
  2521  019D                     	;# 
  2522  019E                     	;# 
  2523  019E                     	;# 
  2524  019E                     	;# 
  2525  019F                     	;# 
  2526  019F                     	;# 
  2527  019F                     	;# 
  2528  019F                     	;# 
  2529  019F                     	;# 
  2530  020C                     	;# 
  2531  020E                     	;# 
  2532  0211                     	;# 
  2533  0211                     	;# 
  2534  0212                     	;# 
  2535  0212                     	;# 
  2536  0213                     	;# 
  2537  0213                     	;# 
  2538  0214                     	;# 
  2539  0214                     	;# 
  2540  0215                     	;# 
  2541  0215                     	;# 
  2542  0215                     	;# 
  2543  0215                     	;# 
  2544  0216                     	;# 
  2545  0216                     	;# 
  2546  0217                     	;# 
  2547  0217                     	;# 
  2548  0219                     	;# 
  2549  021A                     	;# 
  2550  021B                     	;# 
  2551  021C                     	;# 
  2552  021D                     	;# 
  2553  021D                     	;# 
  2554  021E                     	;# 
  2555  021F                     	;# 
  2556  028C                     	;# 
  2557  028E                     	;# 
  2558  0291                     	;# 
  2559  0291                     	;# 
  2560  0292                     	;# 
  2561  0293                     	;# 
  2562  0294                     	;# 
  2563  0295                     	;# 
  2564  0295                     	;# 
  2565  0296                     	;# 
  2566  0297                     	;# 
  2567  0298                     	;# 
  2568  029F                     	;# 
  2569  030C                     	;# 
  2570  030E                     	;# 
  2571  0311                     	;# 
  2572  0311                     	;# 
  2573  0312                     	;# 
  2574  0313                     	;# 
  2575  0314                     	;# 
  2576  0315                     	;# 
  2577  0315                     	;# 
  2578  0316                     	;# 
  2579  0317                     	;# 
  2580  0318                     	;# 
  2581  038C                     	;# 
  2582  038E                     	;# 
  2583  0391                     	;# 
  2584  0392                     	;# 
  2585  0393                     	;# 
  2586  0397                     	;# 
  2587  0398                     	;# 
  2588  0399                     	;# 
  2589  039A                     	;# 
  2590  039C                     	;# 
  2591  039D                     	;# 
  2592  039E                     	;# 
  2593  039F                     	;# 
  2594  0411                     	;# 
  2595  0411                     	;# 
  2596  0412                     	;# 
  2597  0413                     	;# 
  2598  0414                     	;# 
  2599  0415                     	;# 
  2600  0416                     	;# 
  2601  0417                     	;# 
  2602  0418                     	;# 
  2603  0418                     	;# 
  2604  0419                     	;# 
  2605  041A                     	;# 
  2606  041B                     	;# 
  2607  041C                     	;# 
  2608  041D                     	;# 
  2609  041E                     	;# 
  2610  041F                     	;# 
  2611  0498                     	;# 
  2612  0498                     	;# 
  2613  0499                     	;# 
  2614  049A                     	;# 
  2615  049B                     	;# 
  2616  049B                     	;# 
  2617  049C                     	;# 
  2618  049D                     	;# 
  2619  049E                     	;# 
  2620  049F                     	;# 
  2621  0617                     	;# 
  2622  0618                     	;# 
  2623  0619                     	;# 
  2624  0619                     	;# 
  2625  061A                     	;# 
  2626  061B                     	;# 
  2627  061C                     	;# 
  2628  061C                     	;# 
  2629  061F                     	;# 
  2630  0691                     	;# 
  2631  0692                     	;# 
  2632  0693                     	;# 
  2633  0694                     	;# 
  2634  0695                     	;# 
  2635  0696                     	;# 
  2636  0697                     	;# 
  2637  0698                     	;# 
  2638  0699                     	;# 
  2639  0711                     	;# 
  2640  0712                     	;# 
  2641  0713                     	;# 
  2642  0714                     	;# 
  2643  0715                     	;# 
  2644  0716                     	;# 
  2645  0717                     	;# 
  2646  0718                     	;# 
  2647  0719                     	;# 
  2648  0891                     	;# 
  2649  0891                     	;# 
  2650  0891                     	;# 
  2651  0891                     	;# 
  2652  0891                     	;# 
  2653  0891                     	;# 
  2654  0892                     	;# 
  2655  0892                     	;# 
  2656  0892                     	;# 
  2657  0893                     	;# 
  2658  0893                     	;# 
  2659  0893                     	;# 
  2660  0893                     	;# 
  2661  0893                     	;# 
  2662  0893                     	;# 
  2663  0894                     	;# 
  2664  0894                     	;# 
  2665  0894                     	;# 
  2666  0895                     	;# 
  2667  0895                     	;# 
  2668  0895                     	;# 
  2669  0896                     	;# 
  2670  0896                     	;# 
  2671  0896                     	;# 
  2672  089B                     	;# 
  2673  0911                     	;# 
  2674  0912                     	;# 
  2675  0913                     	;# 
  2676  0914                     	;# 
  2677  0915                     	;# 
  2678  0916                     	;# 
  2679  0918                     	;# 
  2680  0919                     	;# 
  2681  091A                     	;# 
  2682  091B                     	;# 
  2683  091C                     	;# 
  2684  091D                     	;# 
  2685  091E                     	;# 
  2686  091F                     	;# 
  2687  0E0F                     	;# 
  2688  0E10                     	;# 
  2689  0E11                     	;# 
  2690  0E12                     	;# 
  2691  0E13                     	;# 
  2692  0E14                     	;# 
  2693  0E15                     	;# 
  2694  0E16                     	;# 
  2695  0E17                     	;# 
  2696  0E18                     	;# 
  2697  0E19                     	;# 
  2698  0E1A                     	;# 
  2699  0E1B                     	;# 
  2700  0E1C                     	;# 
  2701  0E1D                     	;# 
  2702  0E1E                     	;# 
  2703  0E1F                     	;# 
  2704  0E20                     	;# 
  2705  0E21                     	;# 
  2706  0E22                     	;# 
  2707  0E24                     	;# 
  2708  0E25                     	;# 
  2709  0E28                     	;# 
  2710  0E29                     	;# 
  2711  0E2A                     	;# 
  2712  0E2B                     	;# 
  2713  0E2C                     	;# 
  2714  0E2D                     	;# 
  2715  0E2E                     	;# 
  2716  0E2F                     	;# 
  2717  0E90                     	;# 
  2718  0E91                     	;# 
  2719  0E92                     	;# 
  2720  0E94                     	;# 
  2721  0E95                     	;# 
  2722  0EA0                     	;# 
  2723  0EA1                     	;# 
  2724  0EA2                     	;# 
  2725  0EA3                     	;# 
  2726  0EA4                     	;# 
  2727  0EA5                     	;# 
  2728  0F0F                     	;# 
  2729  0F10                     	;# 
  2730  0F11                     	;# 
  2731  0F12                     	;# 
  2732  0F13                     	;# 
  2733  0F14                     	;# 
  2734  0F15                     	;# 
  2735  0F16                     	;# 
  2736  0F17                     	;# 
  2737  0F18                     	;# 
  2738  0F19                     	;# 
  2739  0F1A                     	;# 
  2740  0F1B                     	;# 
  2741  0F1C                     	;# 
  2742  0F1D                     	;# 
  2743  0F1E                     	;# 
  2744  0F1F                     	;# 
  2745  0F20                     	;# 
  2746  0F21                     	;# 
  2747  0F22                     	;# 
  2748  0F23                     	;# 
  2749  0F24                     	;# 
  2750  0F25                     	;# 
  2751  0F26                     	;# 
  2752  0F27                     	;# 
  2753  0F28                     	;# 
  2754  0F29                     	;# 
  2755  0F2A                     	;# 
  2756  0F2B                     	;# 
  2757  0F2C                     	;# 
  2758  0F2D                     	;# 
  2759  0F2E                     	;# 
  2760  0F2F                     	;# 
  2761  0F30                     	;# 
  2762  0F31                     	;# 
  2763  0F32                     	;# 
  2764  0F33                     	;# 
  2765  0F34                     	;# 
  2766  0F35                     	;# 
  2767  0F36                     	;# 
  2768  0F37                     	;# 
  2769  0FE4                     	;# 
  2770  0FE5                     	;# 
  2771  0FE6                     	;# 
  2772  0FE7                     	;# 
  2773  0FE8                     	;# 
  2774  0FE9                     	;# 
  2775  0FEA                     	;# 
  2776  0FEB                     	;# 
  2777  0FED                     	;# 
  2778  0FEE                     	;# 
  2779  0FEF                     	;# 
  2780  0000                     	;# 
  2781  0001                     	;# 
  2782  0002                     	;# 
  2783  0003                     	;# 
  2784  0004                     	;# 
  2785  0005                     	;# 
  2786  0006                     	;# 
  2787  0007                     	;# 
  2788  0008                     	;# 
  2789  0009                     	;# 
  2790  000A                     	;# 
  2791  000B                     	;# 
  2792  000C                     	;# 
  2793  000E                     	;# 
  2794  0010                     	;# 
  2795  0011                     	;# 
  2796  0012                     	;# 
  2797  0013                     	;# 
  2798  0014                     	;# 
  2799  0015                     	;# 
  2800  0015                     	;# 
  2801  0016                     	;# 
  2802  0016                     	;# 
  2803  0017                     	;# 
  2804  0018                     	;# 
  2805  0019                     	;# 
  2806  0019                     	;# 
  2807  001A                     	;# 
  2808  001B                     	;# 
  2809  001C                     	;# 
  2810  001D                     	;# 
  2811  001E                     	;# 
  2812  001F                     	;# 
  2813  008C                     	;# 
  2814  008E                     	;# 
  2815  0090                     	;# 
  2816  0091                     	;# 
  2817  0092                     	;# 
  2818  0093                     	;# 
  2819  0094                     	;# 
  2820  0097                     	;# 
  2821  009B                     	;# 
  2822  009B                     	;# 
  2823  009C                     	;# 
  2824  009D                     	;# 
  2825  009E                     	;# 
  2826  009F                     	;# 
  2827  010C                     	;# 
  2828  010E                     	;# 
  2829  0111                     	;# 
  2830  0112                     	;# 
  2831  0113                     	;# 
  2832  0114                     	;# 
  2833  0115                     	;# 
  2834  0116                     	;# 
  2835  0117                     	;# 
  2836  0118                     	;# 
  2837  0119                     	;# 
  2838  018C                     	;# 
  2839  018E                     	;# 
  2840  0197                     	;# 
  2841  0199                     	;# 
  2842  0199                     	;# 
  2843  0199                     	;# 
  2844  019A                     	;# 
  2845  019A                     	;# 
  2846  019A                     	;# 
  2847  019B                     	;# 
  2848  019B                     	;# 
  2849  019B                     	;# 
  2850  019B                     	;# 
  2851  019B                     	;# 
  2852  019C                     	;# 
  2853  019C                     	;# 
  2854  019C                     	;# 
  2855  019D                     	;# 
  2856  019D                     	;# 
  2857  019D                     	;# 
  2858  019E                     	;# 
  2859  019E                     	;# 
  2860  019E                     	;# 
  2861  019F                     	;# 
  2862  019F                     	;# 
  2863  019F                     	;# 
  2864  019F                     	;# 
  2865  019F                     	;# 
  2866  020C                     	;# 
  2867  020E                     	;# 
  2868  0211                     	;# 
  2869  0211                     	;# 
  2870  0212                     	;# 
  2871  0212                     	;# 
  2872  0213                     	;# 
  2873  0213                     	;# 
  2874  0214                     	;# 
  2875  0214                     	;# 
  2876  0215                     	;# 
  2877  0215                     	;# 
  2878  0215                     	;# 
  2879  0215                     	;# 
  2880  0216                     	;# 
  2881  0216                     	;# 
  2882  0217                     	;# 
  2883  0217                     	;# 
  2884  0219                     	;# 
  2885  021A                     	;# 
  2886  021B                     	;# 
  2887  021C                     	;# 
  2888  021D                     	;# 
  2889  021D                     	;# 
  2890  021E                     	;# 
  2891  021F                     	;# 
  2892  028C                     	;# 
  2893  028E                     	;# 
  2894  0291                     	;# 
  2895  0291                     	;# 
  2896  0292                     	;# 
  2897  0293                     	;# 
  2898  0294                     	;# 
  2899  0295                     	;# 
  2900  0295                     	;# 
  2901  0296                     	;# 
  2902  0297                     	;# 
  2903  0298                     	;# 
  2904  029F                     	;# 
  2905  030C                     	;# 
  2906  030E                     	;# 
  2907  0311                     	;# 
  2908  0311                     	;# 
  2909  0312                     	;# 
  2910  0313                     	;# 
  2911  0314                     	;# 
  2912  0315                     	;# 
  2913  0315                     	;# 
  2914  0316                     	;# 
  2915  0317                     	;# 
  2916  0318                     	;# 
  2917  038C                     	;# 
  2918  038E                     	;# 
  2919  0391                     	;# 
  2920  0392                     	;# 
  2921  0393                     	;# 
  2922  0397                     	;# 
  2923  0398                     	;# 
  2924  0399                     	;# 
  2925  039A                     	;# 
  2926  039C                     	;# 
  2927  039D                     	;# 
  2928  039E                     	;# 
  2929  039F                     	;# 
  2930  0411                     	;# 
  2931  0411                     	;# 
  2932  0412                     	;# 
  2933  0413                     	;# 
  2934  0414                     	;# 
  2935  0415                     	;# 
  2936  0416                     	;# 
  2937  0417                     	;# 
  2938  0418                     	;# 
  2939  0418                     	;# 
  2940  0419                     	;# 
  2941  041A                     	;# 
  2942  041B                     	;# 
  2943  041C                     	;# 
  2944  041D                     	;# 
  2945  041E                     	;# 
  2946  041F                     	;# 
  2947  0498                     	;# 
  2948  0498                     	;# 
  2949  0499                     	;# 
  2950  049A                     	;# 
  2951  049B                     	;# 
  2952  049B                     	;# 
  2953  049C                     	;# 
  2954  049D                     	;# 
  2955  049E                     	;# 
  2956  049F                     	;# 
  2957  0617                     	;# 
  2958  0618                     	;# 
  2959  0619                     	;# 
  2960  0619                     	;# 
  2961  061A                     	;# 
  2962  061B                     	;# 
  2963  061C                     	;# 
  2964  061C                     	;# 
  2965  061F                     	;# 
  2966  0691                     	;# 
  2967  0692                     	;# 
  2968  0693                     	;# 
  2969  0694                     	;# 
  2970  0695                     	;# 
  2971  0696                     	;# 
  2972  0697                     	;# 
  2973  0698                     	;# 
  2974  0699                     	;# 
  2975  0711                     	;# 
  2976  0712                     	;# 
  2977  0713                     	;# 
  2978  0714                     	;# 
  2979  0715                     	;# 
  2980  0716                     	;# 
  2981  0717                     	;# 
  2982  0718                     	;# 
  2983  0719                     	;# 
  2984  0891                     	;# 
  2985  0891                     	;# 
  2986  0891                     	;# 
  2987  0891                     	;# 
  2988  0891                     	;# 
  2989  0891                     	;# 
  2990  0892                     	;# 
  2991  0892                     	;# 
  2992  0892                     	;# 
  2993  0893                     	;# 
  2994  0893                     	;# 
  2995  0893                     	;# 
  2996  0893                     	;# 
  2997  0893                     	;# 
  2998  0893                     	;# 
  2999  0894                     	;# 
  3000  0894                     	;# 
  3001  0894                     	;# 
  3002  0895                     	;# 
  3003  0895                     	;# 
  3004  0895                     	;# 
  3005  0896                     	;# 
  3006  0896                     	;# 
  3007  0896                     	;# 
  3008  089B                     	;# 
  3009  0911                     	;# 
  3010  0912                     	;# 
  3011  0913                     	;# 
  3012  0914                     	;# 
  3013  0915                     	;# 
  3014  0916                     	;# 
  3015  0918                     	;# 
  3016  0919                     	;# 
  3017  091A                     	;# 
  3018  091B                     	;# 
  3019  091C                     	;# 
  3020  091D                     	;# 
  3021  091E                     	;# 
  3022  091F                     	;# 
  3023  0E0F                     	;# 
  3024  0E10                     	;# 
  3025  0E11                     	;# 
  3026  0E12                     	;# 
  3027  0E13                     	;# 
  3028  0E14                     	;# 
  3029  0E15                     	;# 
  3030  0E16                     	;# 
  3031  0E17                     	;# 
  3032  0E18                     	;# 
  3033  0E19                     	;# 
  3034  0E1A                     	;# 
  3035  0E1B                     	;# 
  3036  0E1C                     	;# 
  3037  0E1D                     	;# 
  3038  0E1E                     	;# 
  3039  0E1F                     	;# 
  3040  0E20                     	;# 
  3041  0E21                     	;# 
  3042  0E22                     	;# 
  3043  0E24                     	;# 
  3044  0E25                     	;# 
  3045  0E28                     	;# 
  3046  0E29                     	;# 
  3047  0E2A                     	;# 
  3048  0E2B                     	;# 
  3049  0E2C                     	;# 
  3050  0E2D                     	;# 
  3051  0E2E                     	;# 
  3052  0E2F                     	;# 
  3053  0E90                     	;# 
  3054  0E91                     	;# 
  3055  0E92                     	;# 
  3056  0E94                     	;# 
  3057  0E95                     	;# 
  3058  0EA0                     	;# 
  3059  0EA1                     	;# 
  3060  0EA2                     	;# 
  3061  0EA3                     	;# 
  3062  0EA4                     	;# 
  3063  0EA5                     	;# 
  3064  0F0F                     	;# 
  3065  0F10                     	;# 
  3066  0F11                     	;# 
  3067  0F12                     	;# 
  3068  0F13                     	;# 
  3069  0F14                     	;# 
  3070  0F15                     	;# 
  3071  0F16                     	;# 
  3072  0F17                     	;# 
  3073  0F18                     	;# 
  3074  0F19                     	;# 
  3075  0F1A                     	;# 
  3076  0F1B                     	;# 
  3077  0F1C                     	;# 
  3078  0F1D                     	;# 
  3079  0F1E                     	;# 
  3080  0F1F                     	;# 
  3081  0F20                     	;# 
  3082  0F21                     	;# 
  3083  0F22                     	;# 
  3084  0F23                     	;# 
  3085  0F24                     	;# 
  3086  0F25                     	;# 
  3087  0F26                     	;# 
  3088  0F27                     	;# 
  3089  0F28                     	;# 
  3090  0F29                     	;# 
  3091  0F2A                     	;# 
  3092  0F2B                     	;# 
  3093  0F2C                     	;# 
  3094  0F2D                     	;# 
  3095  0F2E                     	;# 
  3096  0F2F                     	;# 
  3097  0F30                     	;# 
  3098  0F31                     	;# 
  3099  0F32                     	;# 
  3100  0F33                     	;# 
  3101  0F34                     	;# 
  3102  0F35                     	;# 
  3103  0F36                     	;# 
  3104  0F37                     	;# 
  3105  0FE4                     	;# 
  3106  0FE5                     	;# 
  3107  0FE6                     	;# 
  3108  0FE7                     	;# 
  3109  0FE8                     	;# 
  3110  0FE9                     	;# 
  3111  0FEA                     	;# 
  3112  0FEB                     	;# 
  3113  0FED                     	;# 
  3114  0FEE                     	;# 
  3115  0FEF                     	;# 
  3116  0000                     	;# 
  3117  0001                     	;# 
  3118  0002                     	;# 
  3119  0003                     	;# 
  3120  0004                     	;# 
  3121  0005                     	;# 
  3122  0006                     	;# 
  3123  0007                     	;# 
  3124  0008                     	;# 
  3125  0009                     	;# 
  3126  000A                     	;# 
  3127  000B                     	;# 
  3128  000C                     	;# 
  3129  000E                     	;# 
  3130  0010                     	;# 
  3131  0011                     	;# 
  3132  0012                     	;# 
  3133  0013                     	;# 
  3134  0014                     	;# 
  3135  0015                     	;# 
  3136  0015                     	;# 
  3137  0016                     	;# 
  3138  0016                     	;# 
  3139  0017                     	;# 
  3140  0018                     	;# 
  3141  0019                     	;# 
  3142  0019                     	;# 
  3143  001A                     	;# 
  3144  001B                     	;# 
  3145  001C                     	;# 
  3146  001D                     	;# 
  3147  001E                     	;# 
  3148  001F                     	;# 
  3149  008C                     	;# 
  3150  008E                     	;# 
  3151  0090                     	;# 
  3152  0091                     	;# 
  3153  0092                     	;# 
  3154  0093                     	;# 
  3155  0094                     	;# 
  3156  0097                     	;# 
  3157  009B                     	;# 
  3158  009B                     	;# 
  3159  009C                     	;# 
  3160  009D                     	;# 
  3161  009E                     	;# 
  3162  009F                     	;# 
  3163  010C                     	;# 
  3164  010E                     	;# 
  3165  0111                     	;# 
  3166  0112                     	;# 
  3167  0113                     	;# 
  3168  0114                     	;# 
  3169  0115                     	;# 
  3170  0116                     	;# 
  3171  0117                     	;# 
  3172  0118                     	;# 
  3173  0119                     	;# 
  3174  018C                     	;# 
  3175  018E                     	;# 
  3176  0197                     	;# 
  3177  0199                     	;# 
  3178  0199                     	;# 
  3179  0199                     	;# 
  3180  019A                     	;# 
  3181  019A                     	;# 
  3182  019A                     	;# 
  3183  019B                     	;# 
  3184  019B                     	;# 
  3185  019B                     	;# 
  3186  019B                     	;# 
  3187  019B                     	;# 
  3188  019C                     	;# 
  3189  019C                     	;# 
  3190  019C                     	;# 
  3191  019D                     	;# 
  3192  019D                     	;# 
  3193  019D                     	;# 
  3194  019E                     	;# 
  3195  019E                     	;# 
  3196  019E                     	;# 
  3197  019F                     	;# 
  3198  019F                     	;# 
  3199  019F                     	;# 
  3200  019F                     	;# 
  3201  019F                     	;# 
  3202  020C                     	;# 
  3203  020E                     	;# 
  3204  0211                     	;# 
  3205  0211                     	;# 
  3206  0212                     	;# 
  3207  0212                     	;# 
  3208  0213                     	;# 
  3209  0213                     	;# 
  3210  0214                     	;# 
  3211  0214                     	;# 
  3212  0215                     	;# 
  3213  0215                     	;# 
  3214  0215                     	;# 
  3215  0215                     	;# 
  3216  0216                     	;# 
  3217  0216                     	;# 
  3218  0217                     	;# 
  3219  0217                     	;# 
  3220  0219                     	;# 
  3221  021A                     	;# 
  3222  021B                     	;# 
  3223  021C                     	;# 
  3224  021D                     	;# 
  3225  021D                     	;# 
  3226  021E                     	;# 
  3227  021F                     	;# 
  3228  028C                     	;# 
  3229  028E                     	;# 
  3230  0291                     	;# 
  3231  0291                     	;# 
  3232  0292                     	;# 
  3233  0293                     	;# 
  3234  0294                     	;# 
  3235  0295                     	;# 
  3236  0295                     	;# 
  3237  0296                     	;# 
  3238  0297                     	;# 
  3239  0298                     	;# 
  3240  029F                     	;# 
  3241  030C                     	;# 
  3242  030E                     	;# 
  3243  0311                     	;# 
  3244  0311                     	;# 
  3245  0312                     	;# 
  3246  0313                     	;# 
  3247  0314                     	;# 
  3248  0315                     	;# 
  3249  0315                     	;# 
  3250  0316                     	;# 
  3251  0317                     	;# 
  3252  0318                     	;# 
  3253  038C                     	;# 
  3254  038E                     	;# 
  3255  0391                     	;# 
  3256  0392                     	;# 
  3257  0393                     	;# 
  3258  0397                     	;# 
  3259  0398                     	;# 
  3260  0399                     	;# 
  3261  039A                     	;# 
  3262  039C                     	;# 
  3263  039D                     	;# 
  3264  039E                     	;# 
  3265  039F                     	;# 
  3266  0411                     	;# 
  3267  0411                     	;# 
  3268  0412                     	;# 
  3269  0413                     	;# 
  3270  0414                     	;# 
  3271  0415                     	;# 
  3272  0416                     	;# 
  3273  0417                     	;# 
  3274  0418                     	;# 
  3275  0418                     	;# 
  3276  0419                     	;# 
  3277  041A                     	;# 
  3278  041B                     	;# 
  3279  041C                     	;# 
  3280  041D                     	;# 
  3281  041E                     	;# 
  3282  041F                     	;# 
  3283  0498                     	;# 
  3284  0498                     	;# 
  3285  0499                     	;# 
  3286  049A                     	;# 
  3287  049B                     	;# 
  3288  049B                     	;# 
  3289  049C                     	;# 
  3290  049D                     	;# 
  3291  049E                     	;# 
  3292  049F                     	;# 
  3293  0617                     	;# 
  3294  0618                     	;# 
  3295  0619                     	;# 
  3296  0619                     	;# 
  3297  061A                     	;# 
  3298  061B                     	;# 
  3299  061C                     	;# 
  3300  061C                     	;# 
  3301  061F                     	;# 
  3302  0691                     	;# 
  3303  0692                     	;# 
  3304  0693                     	;# 
  3305  0694                     	;# 
  3306  0695                     	;# 
  3307  0696                     	;# 
  3308  0697                     	;# 
  3309  0698                     	;# 
  3310  0699                     	;# 
  3311  0711                     	;# 
  3312  0712                     	;# 
  3313  0713                     	;# 
  3314  0714                     	;# 
  3315  0715                     	;# 
  3316  0716                     	;# 
  3317  0717                     	;# 
  3318  0718                     	;# 
  3319  0719                     	;# 
  3320  0891                     	;# 
  3321  0891                     	;# 
  3322  0891                     	;# 
  3323  0891                     	;# 
  3324  0891                     	;# 
  3325  0891                     	;# 
  3326  0892                     	;# 
  3327  0892                     	;# 
  3328  0892                     	;# 
  3329  0893                     	;# 
  3330  0893                     	;# 
  3331  0893                     	;# 
  3332  0893                     	;# 
  3333  0893                     	;# 
  3334  0893                     	;# 
  3335  0894                     	;# 
  3336  0894                     	;# 
  3337  0894                     	;# 
  3338  0895                     	;# 
  3339  0895                     	;# 
  3340  0895                     	;# 
  3341  0896                     	;# 
  3342  0896                     	;# 
  3343  0896                     	;# 
  3344  089B                     	;# 
  3345  0911                     	;# 
  3346  0912                     	;# 
  3347  0913                     	;# 
  3348  0914                     	;# 
  3349  0915                     	;# 
  3350  0916                     	;# 
  3351  0918                     	;# 
  3352  0919                     	;# 
  3353  091A                     	;# 
  3354  091B                     	;# 
  3355  091C                     	;# 
  3356  091D                     	;# 
  3357  091E                     	;# 
  3358  091F                     	;# 
  3359  0E0F                     	;# 
  3360  0E10                     	;# 
  3361  0E11                     	;# 
  3362  0E12                     	;# 
  3363  0E13                     	;# 
  3364  0E14                     	;# 
  3365  0E15                     	;# 
  3366  0E16                     	;# 
  3367  0E17                     	;# 
  3368  0E18                     	;# 
  3369  0E19                     	;# 
  3370  0E1A                     	;# 
  3371  0E1B                     	;# 
  3372  0E1C                     	;# 
  3373  0E1D                     	;# 
  3374  0E1E                     	;# 
  3375  0E1F                     	;# 
  3376  0E20                     	;# 
  3377  0E21                     	;# 
  3378  0E22                     	;# 
  3379  0E24                     	;# 
  3380  0E25                     	;# 
  3381  0E28                     	;# 
  3382  0E29                     	;# 
  3383  0E2A                     	;# 
  3384  0E2B                     	;# 
  3385  0E2C                     	;# 
  3386  0E2D                     	;# 
  3387  0E2E                     	;# 
  3388  0E2F                     	;# 
  3389  0E90                     	;# 
  3390  0E91                     	;# 
  3391  0E92                     	;# 
  3392  0E94                     	;# 
  3393  0E95                     	;# 
  3394  0EA0                     	;# 
  3395  0EA1                     	;# 
  3396  0EA2                     	;# 
  3397  0EA3                     	;# 
  3398  0EA4                     	;# 
  3399  0EA5                     	;# 
  3400  0F0F                     	;# 
  3401  0F10                     	;# 
  3402  0F11                     	;# 
  3403  0F12                     	;# 
  3404  0F13                     	;# 
  3405  0F14                     	;# 
  3406  0F15                     	;# 
  3407  0F16                     	;# 
  3408  0F17                     	;# 
  3409  0F18                     	;# 
  3410  0F19                     	;# 
  3411  0F1A                     	;# 
  3412  0F1B                     	;# 
  3413  0F1C                     	;# 
  3414  0F1D                     	;# 
  3415  0F1E                     	;# 
  3416  0F1F                     	;# 
  3417  0F20                     	;# 
  3418  0F21                     	;# 
  3419  0F22                     	;# 
  3420  0F23                     	;# 
  3421  0F24                     	;# 
  3422  0F25                     	;# 
  3423  0F26                     	;# 
  3424  0F27                     	;# 
  3425  0F28                     	;# 
  3426  0F29                     	;# 
  3427  0F2A                     	;# 
  3428  0F2B                     	;# 
  3429  0F2C                     	;# 
  3430  0F2D                     	;# 
  3431  0F2E                     	;# 
  3432  0F2F                     	;# 
  3433  0F30                     	;# 
  3434  0F31                     	;# 
  3435  0F32                     	;# 
  3436  0F33                     	;# 
  3437  0F34                     	;# 
  3438  0F35                     	;# 
  3439  0F36                     	;# 
  3440  0F37                     	;# 
  3441  0FE4                     	;# 
  3442  0FE5                     	;# 
  3443  0FE6                     	;# 
  3444  0FE7                     	;# 
  3445  0FE8                     	;# 
  3446  0FE9                     	;# 
  3447  0FEA                     	;# 
  3448  0FEB                     	;# 
  3449  0FED                     	;# 
  3450  0FEE                     	;# 
  3451  0FEF                     	;_stage_stash
  3452                           
  3453                           	psect	idataBANK0
  3454  04F9                     __pidataBANK0:	
  3455                           
  3456                           ;initializer for InitWigwagPattern@F436
  3457  04F9  3401               	retlw	1
  3458  04FA  3400               	retlw	0
  3459  04FB  3401               	retlw	1
  3460  04FC  3400               	retlw	0
  3461                           
  3462                           	psect	idataBANK1
  3463  04FD                     __pidataBANK1:	
  3464                           
  3465                           ;initializer for InitWigwagPattern@F439
  3466  04FD  3400               	retlw	0
  3467  04FE  3401               	retlw	1
  3468  04FF  3400               	retlw	0
  3469  0500  3401               	retlw	1
  3470                           
  3471                           	psect	nvBANK0
  3472  0054                     __pnvBANK0:	
  3473  0054                     _TMR1_InterruptHandler:	
  3474  0054                     	ds	2
  3475  0056                     _timer1ReloadVal:	
  3476  0056                     	ds	2
  3477  0058                     _IOCCF0_InterruptHandler:	
  3478  0058                     	ds	2
  3479  000E                     _PORTCbits	set	14
  3480  001C                     _T1GCONbits	set	28
  3481  001B                     _T1CONbits	set	27
  3482  0019                     _TMR1L	set	25
  3483  001A                     _TMR1H	set	26
  3484  001C                     _T1GCON	set	28
  3485  0011                     _PIR1bits	set	17
  3486  000B                     _INTCONbits	set	11
  3487  0010                     _PIR0bits	set	16
  3488  0091                     _PIE1bits	set	145
  3489  0090                     _PIE0bits	set	144
  3490  008E                     _TRISC	set	142
  3491  008C                     _TRISA	set	140
  3492  0097                     _WDTCON	set	151
  3493  010E                     _LATCbits	set	270
  3494  010E                     _LATC	set	270
  3495  010C                     _LATA	set	268
  3496  018C                     _ANSELA	set	396
  3497  018E                     _ANSELC	set	398
  3498  020E                     _WPUC	set	526
  3499  020C                     _WPUA	set	524
  3500  028E                     _ODCONC	set	654
  3501  028C                     _ODCONA	set	652
  3502  030E                     _SLRCONC	set	782
  3503  030C                     _SLRCONA	set	780
  3504  0397                     _IOCCPbits	set	919
  3505  0398                     _IOCCNbits	set	920
  3506  0399                     _IOCCFbits	set	921
  3507  038E                     _INLVLC	set	910
  3508  038C                     _INLVLA	set	908
  3509  0916                     _PMD5	set	2326
  3510  0915                     _PMD4	set	2325
  3511  0914                     _PMD3	set	2324
  3512  0913                     _PMD2	set	2323
  3513  0912                     _PMD1	set	2322
  3514  0911                     _PMD0	set	2321
  3515  091E                     _OSCTUNE	set	2334
  3516  091F                     _OSCFRQ	set	2335
  3517  091D                     _OSCEN	set	2333
  3518  091B                     _OSCCON3	set	2331
  3519  0919                     _OSCCON1	set	2329
  3520                           
  3521                           ; #config settings
  3522  0000                     
  3523                           	psect	cinit
  3524  002A                     start_initialization:	
  3525  002A                     __initialization:		;BIGRAM
  3526                           
  3527                           ; Initialize objects allocated to BANK0
  3528  002A  3184  24F9  3180   	fcall	__pidataBANK0	;fetch initializer
  3529  002D  00DA               	movwf	__pdataBANK0& (0+127)
  3530  002E  3184  24FA  3180   	fcall	__pidataBANK0+1	;fetch initializer
  3531  0031  00DB               	movwf	(__pdataBANK0+1)& (0+127)
  3532  0032  3184  24FB  3180   	fcall	__pidataBANK0+2	;fetch initializer
  3533  0035  00DC               	movwf	(__pdataBANK0+2)& (0+127)
  3534  0036  3184  24FC  3180   	fcall	__pidataBANK0+3	;fetch initializer
  3535  0039  00DD               	movwf	(__pdataBANK0+3)& (0+127)
  3536                           
  3537                           ; Initialize objects allocated to BANK1
  3538  003A  0021               	movlb	1	; select bank1
  3539  003B  3184  24FD  3180   	fcall	__pidataBANK1	;fetch initializer
  3540  003E  00B8               	movwf	__pdataBANK1& (0+127)
  3541  003F  3184  24FE  3180   	fcall	__pidataBANK1+1	;fetch initializer
  3542  0042  00B9               	movwf	(__pdataBANK1+1)& (0+127)
  3543  0043  3184  24FF  3180   	fcall	__pidataBANK1+2	;fetch initializer
  3544  0046  00BA               	movwf	(__pdataBANK1+2)& (0+127)
  3545  0047  3185  2500  3180   	fcall	__pidataBANK1+3	;fetch initializer
  3546  004A  00BB               	movwf	(__pdataBANK1+3)& (0+127)
  3547                           
  3548                           ; Clear objects allocated to BIGRAM
  3549  004B  30F0               	movlw	low (0+8432)
  3550  004C  0084               	movwf	4
  3551  004D  3020               	movlw	high (0+8432)
  3552  004E  0085               	movwf	5
  3553  004F  3000               	movlw	0
  3554  0050  00FE               	movwf	btemp
  3555  0051  3003               	movlw	3
  3556  0052  00FF               	movwf	btemp+1
  3557  0053  3184  24C1  3180   	fcall	clear_ram0
  3558                           
  3559                           ; Clear objects allocated to COMMON
  3560  0056  01FA               	clrf	__pbssCOMMON& (0+127)
  3561  0057  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  3562                           
  3563                           ; Clear objects allocated to BANK0
  3564  0058  3041               	movlw	low __pbssBANK0
  3565  0059  0084               	movwf	4
  3566  005A  3000               	movlw	high __pbssBANK0
  3567  005B  0085               	movwf	5
  3568  005C  3013               	movlw	19
  3569  005D  00FE               	movwf	btemp
  3570  005E  3000               	movlw	0
  3571  005F  00FF               	movwf	btemp+1
  3572  0060  3184  24C1  3180   	fcall	clear_ram0
  3573                           
  3574                           ; Clear objects allocated to BANK1
  3575  0063  01B4               	clrf	__pbssBANK1& (0+127)
  3576  0064  01B5               	clrf	(__pbssBANK1+1)& (0+127)
  3577  0065  01B6               	clrf	(__pbssBANK1+2)& (0+127)
  3578  0066  01B7               	clrf	(__pbssBANK1+3)& (0+127)
  3579  0067                     end_of_initialization:	
  3580                           ;End of C runtime variable initialization code
  3581                           
  3582  0067                     __end_of__initialization:	
  3583  0067  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3584  0068  0020               	movlb	0
  3585  0069  3184  2C4D         	ljmp	_main	;jump to C main() function
  3586                           
  3587                           	psect	bssCOMMON
  3588  007A                     __pbssCOMMON:	
  3589  007A                     _last_pc_input_state:	
  3590  007A                     	ds	1
  3591  007B                     _cur_pc_input_state:	
  3592  007B                     	ds	1
  3593                           
  3594                           	psect	bssBANK0
  3595  0041                     __pbssBANK0:	
  3596  0041                     _start_time:	
  3597  0041                     	ds	2
  3598  0043                     _current_stage:	
  3599  0043                     	ds	2
  3600  0045                     _stage_list_iter:	
  3601  0045                     	ds	2
  3602  0047                     _cur_sec:	
  3603  0047                     	ds	2
  3604  0049                     _cur_hsec:	
  3605  0049                     	ds	2
  3606  004B                     _cur_ms:	
  3607  004B                     	ds	2
  3608  004D                     _temp_ms:	
  3609  004D                     	ds	2
  3610  004F                     _update_stage:	
  3611  004F                     	ds	1
  3612  0050                     _ts_trigger:	
  3613  0050                     	ds	1
  3614  0051                     _Wigwag:	
  3615  0051                     	ds	3
  3616                           
  3617                           	psect	dataBANK0
  3618  005A                     __pdataBANK0:	
  3619  005A                     InitWigwagPattern@F436:	
  3620  005A                     	ds	4
  3621                           
  3622                           	psect	bssBANK1
  3623  00B4                     __pbssBANK1:	
  3624  00B4                     NewStage@F411:	
  3625  00B4                     	ds	4
  3626                           
  3627                           	psect	dataBANK1
  3628  00B8                     __pdataBANK1:	
  3629  00B8                     InitWigwagPattern@F439:	
  3630  00B8                     	ds	4
  3631                           
  3632                           	psect	clrtext
  3633  04C1                     clear_ram0:	
  3634                           ;	Called with FSR0 containing the base address, and
  3635                           ;	btemp/btemp+1 has the size to clear
  3636                           
  3637  04C1  0064               	clrwdt	;clear the watchdog before getting into this loop
  3638  04C2                     clrloop0:	
  3639  04C2  0180               	clrf	0	;clear RAM location pointed to by FSR
  3640  04C3  3101               	addfsr 0,1
  3641  04C4  3001               	movlw	1
  3642  04C5  02FE               	subwf	btemp,f
  3643  04C6  3000               	movlw	0
  3644  04C7  3BFF               	subwfb	btemp+1,f
  3645  04C8  087F               	movf	btemp+1,w
  3646  04C9  047E               	iorwf	btemp,w
  3647  04CA  1D03               	skipz
  3648  04CB  2CC2               	goto	clrloop0	;have we reached the end yet?
  3649  04CC  3400               	retlw	0	;all done for this memory range, return
  3650                           
  3651                           	psect	cstackBANK1
  3652  00A0                     __pcstackBANK1:	
  3653  00A0                     InitWigwagPattern@left_side_states:	
  3654                           
  3655                           ; 4 bytes @ 0x0
  3656  00A0                     	ds	4
  3657  00A4                     InitWigwagPattern@right_side_states:	
  3658                           
  3659                           ; 4 bytes @ 0x4
  3660  00A4                     	ds	4
  3661  00A8                     InitWigwagPattern@left_side_on:	
  3662                           
  3663                           ; 2 bytes @ 0x8
  3664  00A8                     	ds	2
  3665  00AA                     InitWigwagPattern@right_side_on:	
  3666                           
  3667                           ; 2 bytes @ 0xA
  3668  00AA                     	ds	2
  3669  00AC                     InitWigwagPattern@i:	
  3670                           
  3671                           ; 2 bytes @ 0xC
  3672  00AC                     	ds	2
  3673  00AE                     InitWigwagPattern@i_770:	
  3674                           
  3675                           ; 2 bytes @ 0xE
  3676  00AE                     	ds	2
  3677  00B0                     InitWigwagPattern@off:	
  3678                           
  3679                           ; 2 bytes @ 0x10
  3680  00B0                     	ds	2
  3681  00B2                     InitWigwagPattern@head:	
  3682                           
  3683                           ; 2 bytes @ 0x12
  3684  00B2                     	ds	2
  3685                           
  3686                           	psect	cstackCOMMON
  3687  0070                     __pcstackCOMMON:	
  3688  0070                     ?_PMD_Initialize:	
  3689  0070                     ?_PIN_MANAGER_Initialize:	
  3690                           ; 1 bytes @ 0x0
  3691                           
  3692  0070                     ?_OSCILLATOR_Initialize:	
  3693                           ; 1 bytes @ 0x0
  3694                           
  3695  0070                     ?_WDT_Initialize:	
  3696                           ; 1 bytes @ 0x0
  3697                           
  3698  0070                     ?_TMR1_Initialize:	
  3699                           ; 1 bytes @ 0x0
  3700                           
  3701  0070                     ?_IOCCF0_DefaultInterruptHandler:	
  3702                           ; 1 bytes @ 0x0
  3703                           
  3704  0070                     ??_IOCCF0_DefaultInterruptHandler:	
  3705                           ; 1 bytes @ 0x0
  3706                           
  3707  0070                     ?_IOCCF0_ISR:	
  3708                           ; 1 bytes @ 0x0
  3709                           
  3710  0070                     ??_IOCCF0_ISR:	
  3711                           ; 1 bytes @ 0x0
  3712                           
  3713  0070                     ?_TMR1_ISR:	
  3714                           ; 1 bytes @ 0x0
  3715                           
  3716  0070                     ?_TMR1_DefaultInterruptHandler:	
  3717                           ; 1 bytes @ 0x0
  3718                           
  3719  0070                     ??_TMR1_DefaultInterruptHandler:	
  3720                           ; 1 bytes @ 0x0
  3721                           
  3722  0070                     ?_SetOutputs:	
  3723                           ; 1 bytes @ 0x0
  3724                           
  3725  0070                     ?_PatternCycleInputChanged:	
  3726                           ; 1 bytes @ 0x0
  3727                           
  3728  0070                     ?_SYSTEM_Initialize:	
  3729                           ; 1 bytes @ 0x0
  3730                           
  3731  0070                     ?_PIN_MANAGER_IOC:	
  3732                           ; 1 bytes @ 0x0
  3733                           
  3734  0070                     ??_PIN_MANAGER_IOC:	
  3735                           ; 1 bytes @ 0x0
  3736                           
  3737  0070                     ?_INTERRUPT_InterruptManager:	
  3738                           ; 1 bytes @ 0x0
  3739                           
  3740  0070                     ?_TMR1_StartTimer:	
  3741                           ; 1 bytes @ 0x0
  3742                           
  3743  0070                     ?_TMR1_WriteTimer:	
  3744                           ; 1 bytes @ 0x0
  3745                           
  3746  0070                     ?_setup:	
  3747                           ; 1 bytes @ 0x0
  3748                           
  3749  0070                     ?_main:	
  3750                           ; 1 bytes @ 0x0
  3751                           
  3752  0070                     TMR1_WriteTimer@timerVal:	
  3753                           ; 1 bytes @ 0x0
  3754                           
  3755                           
  3756                           ; 2 bytes @ 0x0
  3757  0070                     	ds	2
  3758  0072                     ??_PMD_Initialize:	
  3759  0072                     ??_OSCILLATOR_Initialize:	
  3760                           ; 1 bytes @ 0x2
  3761                           
  3762  0072                     ??_WDT_Initialize:	
  3763                           ; 1 bytes @ 0x2
  3764                           
  3765  0072                     ?_IOCCF0_SetInterruptHandler:	
  3766                           ; 1 bytes @ 0x2
  3767                           
  3768  0072                     ??_TMR1_ISR:	
  3769                           ; 1 bytes @ 0x2
  3770                           
  3771  0072                     ?_TMR1_SetInterruptHandler:	
  3772                           ; 1 bytes @ 0x2
  3773                           
  3774  0072                     ??_PatternCycleInputChanged:	
  3775                           ; 1 bytes @ 0x2
  3776                           
  3777  0072                     ??_INTERRUPT_InterruptManager:	
  3778                           ; 1 bytes @ 0x2
  3779                           
  3780  0072                     ??_TMR1_StartTimer:	
  3781                           ; 1 bytes @ 0x2
  3782                           
  3783  0072                     ??_TMR1_WriteTimer:	
  3784                           ; 1 bytes @ 0x2
  3785                           
  3786  0072                     ?_SetLight:	
  3787                           ; 1 bytes @ 0x2
  3788                           
  3789  0072                     ?_AssignLightStates:	
  3790                           ; 1 bytes @ 0x2
  3791                           
  3792  0072                     SetLight@state:	
  3793                           ; 1 bytes @ 0x2
  3794                           
  3795  0072                     IOCCF0_SetInterruptHandler@InterruptHandler:	
  3796                           ; 1 bytes @ 0x2
  3797                           
  3798  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  3799                           ; 2 bytes @ 0x2
  3800                           
  3801  0072                     AssignLightStates@stage:	
  3802                           ; 2 bytes @ 0x2
  3803                           
  3804                           
  3805                           ; 2 bytes @ 0x2
  3806  0072                     	ds	1
  3807  0073                     ??_SetLight:	
  3808                           
  3809                           ; 1 bytes @ 0x3
  3810  0073                     	ds	1
  3811  0074                     ??_PIN_MANAGER_Initialize:	
  3812  0074                     ??_TMR1_Initialize:	
  3813                           ; 1 bytes @ 0x4
  3814                           
  3815  0074                     ??_IOCCF0_SetInterruptHandler:	
  3816                           ; 1 bytes @ 0x4
  3817                           
  3818  0074                     ??_TMR1_SetInterruptHandler:	
  3819                           ; 1 bytes @ 0x4
  3820                           
  3821  0074                     ??_SYSTEM_Initialize:	
  3822                           ; 1 bytes @ 0x4
  3823                           
  3824  0074                     AssignLightStates@states:	
  3825                           ; 1 bytes @ 0x4
  3826                           
  3827  0074                     PatternCycleInputChanged@delay_count:	
  3828                           ; 1 bytes @ 0x4
  3829                           
  3830                           
  3831                           ; 2 bytes @ 0x4
  3832  0074                     	ds	1
  3833  0075                     ??_AssignLightStates:	
  3834  0075                     SetLight@light:	
  3835                           ; 1 bytes @ 0x5
  3836                           
  3837                           
  3838                           ; 1 bytes @ 0x5
  3839  0075                     	ds	1
  3840  0076                     ??_SetOutputs:	
  3841  0076                     ?_FlashPattern:	
  3842                           ; 1 bytes @ 0x6
  3843                           
  3844  0076                     FlashPattern@pattern:	
  3845                           ; 1 bytes @ 0x6
  3846                           
  3847                           
  3848                           ; 2 bytes @ 0x6
  3849  0076                     	ds	1
  3850  0077                     ?_NewStage:	
  3851  0077                     SetOutputs@state:	
  3852                           ; 2 bytes @ 0x7
  3853                           
  3854                           
  3855                           ; 1 bytes @ 0x7
  3856  0077                     	ds	1
  3857  0078                     FlashPattern@current_time:	
  3858                           
  3859                           ; 2 bytes @ 0x8
  3860  0078                     	ds	1
  3861  0079                     ??_ConstructStage:	
  3862                           
  3863                           ; 1 bytes @ 0x9
  3864  0079                     	ds	1
  3865  007A                     ??_setup:	
  3866                           
  3867                           	psect	cstackBANK0
  3868  0020                     __pcstackBANK0:	
  3869                           ; 1 bytes @ 0xA
  3870                           
  3871  0020                     ??_FlashPattern:	
  3872  0020                     AssignLightStates@i:	
  3873                           ; 1 bytes @ 0x0
  3874                           
  3875                           
  3876                           ; 2 bytes @ 0x0
  3877  0020                     	ds	2
  3878  0022                     ??_NewStage:	
  3879                           
  3880                           ; 1 bytes @ 0x2
  3881  0022                     	ds	4
  3882  0026                     NewStage@init_states:	
  3883                           
  3884                           ; 4 bytes @ 0x6
  3885  0026                     	ds	4
  3886  002A                     NewStage@new_stage:	
  3887                           
  3888                           ; 2 bytes @ 0xA
  3889  002A                     	ds	2
  3890  002C                     ?_CopyStageData:	
  3891  002C                     ?_ConstructStage:	
  3892                           ; 2 bytes @ 0xC
  3893                           
  3894  002C                     ConstructStage@time_ms:	
  3895                           ; 2 bytes @ 0xC
  3896                           
  3897  002C                     CopyStageData@dest:	
  3898                           ; 2 bytes @ 0xC
  3899                           
  3900                           
  3901                           ; 2 bytes @ 0xC
  3902  002C                     	ds	2
  3903  002E                     ConstructStage@next:	
  3904  002E                     CopyStageData@source:	
  3905                           ; 1 bytes @ 0xE
  3906                           
  3907                           
  3908                           ; 2 bytes @ 0xE
  3909  002E                     	ds	1
  3910  002F                     ConstructStage@states:	
  3911                           
  3912                           ; 1 bytes @ 0xF
  3913  002F                     	ds	1
  3914  0030                     ??_CopyStageData:	
  3915  0030                     ConstructStage@new_stage:	
  3916                           ; 1 bytes @ 0x10
  3917                           
  3918                           
  3919                           ; 2 bytes @ 0x10
  3920  0030                     	ds	3
  3921  0033                     CopyStageData@i:	
  3922                           
  3923                           ; 2 bytes @ 0x13
  3924  0033                     	ds	2
  3925  0035                     ?_AppendStage:	
  3926  0035                     AppendStage@head:	
  3927                           ; 1 bytes @ 0x15
  3928                           
  3929                           
  3930                           ; 2 bytes @ 0x15
  3931  0035                     	ds	2
  3932  0037                     AppendStage@new_stage:	
  3933                           
  3934                           ; 2 bytes @ 0x17
  3935  0037                     	ds	2
  3936  0039                     ??_AppendStage:	
  3937                           
  3938                           ; 1 bytes @ 0x19
  3939  0039                     	ds	2
  3940  003B                     AppendStage@last_stage:	
  3941                           
  3942                           ; 2 bytes @ 0x1B
  3943  003B                     	ds	2
  3944  003D                     ?_InitWigwagPattern:	
  3945  003D                     InitWigwagPattern@pattern:	
  3946                           ; 1 bytes @ 0x1D
  3947                           
  3948                           
  3949                           ; 2 bytes @ 0x1D
  3950  003D                     	ds	2
  3951  003F                     ??_InitWigwagPattern:	
  3952                           
  3953                           ; 1 bytes @ 0x1F
  3954  003F                     	ds	1
  3955  0040                     ??_main:	
  3956                           
  3957                           ; 1 bytes @ 0x20
  3958  0040                     	ds	1
  3959                           
  3960                           	psect	maintext
  3961  044D                     __pmaintext:	
  3962 ;;
  3963 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3964 ;;
  3965 ;; *************** function _main *****************
  3966 ;; Defined at:
  3967 ;;		line 34 in file "main.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;		None
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;		None
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1    wreg      void 
  3974 ;; Registers used:
  3975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3976 ;; Tracked objects:
  3977 ;;		On entry : B1F/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3983 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3984 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3985 ;;Total ram usage:        1 bytes
  3986 ;; Hardware stack levels required when called:    9
  3987 ;; This function calls:
  3988 ;;		_FlashPattern
  3989 ;;		_PatternCycleInputChanged
  3990 ;;		_setup
  3991 ;; This function is called by:
  3992 ;;		Startup code after reset
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           
  3997                           ;psect for function _main
  3998  044D                     _main:	
  3999  044D                     l1953:	
  4000                           ;incstack = 0
  4001                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4002                           
  4003                           
  4004                           ;main.c: 36:     setup();
  4005  044D  3184  2430  3184   	fcall	_setup
  4006  0450                     l1955:	
  4007                           
  4008                           ;main.c: 39:     {;main.c: 40:         cur_pc_input_state = PORTCbits.RC5;
  4009  0450  3000               	movlw	0
  4010  0451  0020               	movlb	0	; select bank0
  4011  0452  1A8E               	btfsc	14,5	;volatile
  4012  0453  3001               	movlw	1
  4013  0454  00FB               	movwf	_cur_pc_input_state
  4014  0455                     l1957:	
  4015                           
  4016                           ;main.c: 45:         if ( PatternCycleInputChanged() )
  4017  0455  3183  2391  3184   	fcall	_PatternCycleInputChanged
  4018  0458                     l1963:	
  4019                           
  4020                           ;main.c: 65:         last_pc_input_state = cur_pc_input_state;
  4021  0458  087B               	movf	_cur_pc_input_state,w
  4022  0459  0020               	movlb	0	; select bank0
  4023  045A  00C0               	movwf	??_main
  4024  045B  0840               	movf	??_main,w
  4025  045C  00FA               	movwf	_last_pc_input_state
  4026  045D                     l1965:	
  4027                           
  4028                           ;main.c: 67:         FlashPattern( &Wigwag );
  4029  045D  3051               	movlw	low _Wigwag
  4030  045E  00F6               	movwf	FlashPattern@pattern
  4031  045F  3000               	movlw	high _Wigwag
  4032  0460  00F7               	movwf	FlashPattern@pattern+1
  4033  0461  3182  2219  3184   	fcall	_FlashPattern
  4034  0464  2C50               	goto	l1955
  4035  0465  3180  2828         	ljmp	start
  4036  0467                     __end_of_main:	
  4037                           
  4038                           	psect	text1
  4039  0430                     __ptext1:	
  4040 ;; *************** function _setup *****************
  4041 ;; Defined at:
  4042 ;;		line 13 in file "main.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;		None
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;		None
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  1    wreg      void 
  4049 ;; Registers used:
  4050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4060 ;;Total ram usage:        0 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; Hardware stack levels required when called:    8
  4063 ;; This function calls:
  4064 ;;		_InitWigwagPattern
  4065 ;;		_SYSTEM_Initialize
  4066 ;;		_SetOutputs
  4067 ;;		_TMR1_Initialize
  4068 ;;		_TMR1_StartTimer
  4069 ;; This function is called by:
  4070 ;;		_main
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           
  4075                           ;psect for function _setup
  4076  0430                     _setup:	
  4077  0430                     l1923:	
  4078                           ;incstack = 0
  4079                           ; Regs used in _setup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4080                           
  4081                           
  4082                           ;main.c: 16:     SYSTEM_Initialize();
  4083  0430  3184  24A2  3184   	fcall	_SYSTEM_Initialize
  4084  0433                     l1925:	
  4085                           
  4086                           ;main.c: 18:     (INTCONbits.GIE = 1);
  4087  0433  178B               	bsf	11,7	;volatile
  4088  0434                     l1927:	
  4089                           
  4090                           ;main.c: 21:     (INTCONbits.PEIE = 1);
  4091  0434  170B               	bsf	11,6	;volatile
  4092                           
  4093                           ;main.c: 24:     TMR1_Initialize();
  4094  0435  3184  247D  3184   	fcall	_TMR1_Initialize
  4095  0438                     l1929:	
  4096                           
  4097                           ;main.c: 25:     TMR1_StartTimer();
  4098  0438  3185  2505  3184   	fcall	_TMR1_StartTimer
  4099  043B                     l1931:	
  4100                           
  4101                           ;main.c: 28:     SetOutputs( 0 );
  4102  043B  3000               	movlw	0
  4103  043C  3184  240E  3184   	fcall	_SetOutputs
  4104  043F                     l1933:	
  4105                           
  4106                           ;main.c: 30:     InitWigwagPattern( &Wigwag );
  4107  043F  3051               	movlw	low _Wigwag
  4108  0440  0020               	movlb	0	; select bank0
  4109  0441  00BD               	movwf	InitWigwagPattern@pattern
  4110  0442  3000               	movlw	high _Wigwag
  4111  0443  00BE               	movwf	InitWigwagPattern@pattern+1
  4112  0444  3180  206B  3184   	fcall	_InitWigwagPattern
  4113  0447                     l1935:	
  4114                           
  4115                           ;main.c: 31:     current_stage = Wigwag.first_stage;
  4116  0447  0020               	movlb	0	; select bank0
  4117  0448  0853               	movf	_Wigwag+2,w
  4118  0449  00C4               	movwf	_current_stage+1
  4119  044A  0852               	movf	_Wigwag+1,w
  4120  044B  00C3               	movwf	_current_stage
  4121  044C                     l267:	
  4122  044C  0008               	return
  4123  044D                     __end_of_setup:	
  4124                           
  4125                           	psect	text2
  4126  0505                     __ptext2:	
  4127 ;; *************** function _TMR1_StartTimer *****************
  4128 ;; Defined at:
  4129 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;		None
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;		None
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  1    wreg      void 
  4136 ;; Registers used:
  4137 ;;		None
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4147 ;;Total ram usage:        0 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; Hardware stack levels required when called:    4
  4150 ;; This function calls:
  4151 ;;		Nothing
  4152 ;; This function is called by:
  4153 ;;		_setup
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           
  4158                           ;psect for function _TMR1_StartTimer
  4159  0505                     _TMR1_StartTimer:	
  4160  0505                     l1597:	
  4161                           ;incstack = 0
  4162                           ; Regs used in _TMR1_StartTimer: []
  4163                           
  4164                           
  4165                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  4166  0505  0020               	movlb	0	; select bank0
  4167  0506  141B               	bsf	27,0	;volatile
  4168  0507                     l190:	
  4169  0507  0008               	return
  4170  0508                     __end_of_TMR1_StartTimer:	
  4171                           
  4172                           	psect	text3
  4173  040E                     __ptext3:	
  4174 ;; *************** function _SetOutputs *****************
  4175 ;; Defined at:
  4176 ;;		line 38 in file "Lights.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  state           1    wreg     const _Bool 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;  state           1    7[COMMON] const _Bool 
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      void 
  4183 ;; Registers used:
  4184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4191 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4192 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4193 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4194 ;;Total ram usage:        2 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; Hardware stack levels required when called:    5
  4197 ;; This function calls:
  4198 ;;		_SetLight
  4199 ;; This function is called by:
  4200 ;;		_setup
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           
  4205                           ;psect for function _SetOutputs
  4206  040E                     _SetOutputs:	
  4207                           
  4208                           ;incstack = 0
  4209                           ; Regs used in _SetOutputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4210                           ;SetOutputs@state stored from wreg
  4211  040E  00F7               	movwf	SetOutputs@state
  4212  040F                     l1879:	
  4213                           
  4214                           ;Lights.c: 38: void SetOutputs( const _Bool state );Lights.c: 39: {;Lights.c: 40:     Se
      +                          tLight( L1, state );
  4215  040F  0877               	movf	SetOutputs@state,w
  4216  0410  00F6               	movwf	??_SetOutputs
  4217  0411  0876               	movf	??_SetOutputs,w
  4218  0412  00F2               	movwf	SetLight@state
  4219  0413  3000               	movlw	0
  4220  0414  3181  21A8  3184   	fcall	_SetLight
  4221                           
  4222                           ;Lights.c: 41:     SetLight( L2, state );
  4223  0417  0877               	movf	SetOutputs@state,w
  4224  0418  00F6               	movwf	??_SetOutputs
  4225  0419  0876               	movf	??_SetOutputs,w
  4226  041A  00F2               	movwf	SetLight@state
  4227  041B  3001               	movlw	1
  4228  041C  3181  21A8  3184   	fcall	_SetLight
  4229                           
  4230                           ;Lights.c: 42:     SetLight( L3, state );
  4231  041F  0877               	movf	SetOutputs@state,w
  4232  0420  00F6               	movwf	??_SetOutputs
  4233  0421  0876               	movf	??_SetOutputs,w
  4234  0422  00F2               	movwf	SetLight@state
  4235  0423  3002               	movlw	2
  4236  0424  3181  21A8  3184   	fcall	_SetLight
  4237                           
  4238                           ;Lights.c: 43:     SetLight( L4, state );
  4239  0427  0877               	movf	SetOutputs@state,w
  4240  0428  00F6               	movwf	??_SetOutputs
  4241  0429  0876               	movf	??_SetOutputs,w
  4242  042A  00F2               	movwf	SetLight@state
  4243  042B  3003               	movlw	3
  4244  042C  3181  21A8  3184   	fcall	_SetLight
  4245  042F                     l336:	
  4246  042F  0008               	return
  4247  0430                     __end_of_SetOutputs:	
  4248                           
  4249                           	psect	text4
  4250  04A2                     __ptext4:	
  4251 ;; *************** function _SYSTEM_Initialize *****************
  4252 ;; Defined at:
  4253 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;		None
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;		None
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  1    wreg      void 
  4260 ;; Registers used:
  4261 ;;		wreg, status,2, status,0, pclath, cstack
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4271 ;;Total ram usage:        0 bytes
  4272 ;; Hardware stack levels used:    1
  4273 ;; Hardware stack levels required when called:    6
  4274 ;; This function calls:
  4275 ;;		_OSCILLATOR_Initialize
  4276 ;;		_PIN_MANAGER_Initialize
  4277 ;;		_PMD_Initialize
  4278 ;;		_TMR1_Initialize
  4279 ;;		_WDT_Initialize
  4280 ;; This function is called by:
  4281 ;;		_setup
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           
  4286                           ;psect for function _SYSTEM_Initialize
  4287  04A2                     _SYSTEM_Initialize:	
  4288  04A2                     l1581:	
  4289                           ;incstack = 0
  4290                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4291                           
  4292                           
  4293                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  4294  04A2  3184  24DF  3184   	fcall	_PMD_Initialize
  4295  04A5                     l1583:	
  4296                           
  4297                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4298  04A5  3183  23BE  3184   	fcall	_PIN_MANAGER_Initialize
  4299  04A8                     l1585:	
  4300                           
  4301                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4302  04A8  3184  24CD  3184   	fcall	_OSCILLATOR_Initialize
  4303  04AB                     l1587:	
  4304                           
  4305                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4306  04AB  3185  2501  3184   	fcall	_WDT_Initialize
  4307  04AE                     l1589:	
  4308                           
  4309                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  4310  04AE  3184  247D  3184   	fcall	_TMR1_Initialize
  4311  04B1                     l47:	
  4312  04B1  0008               	return
  4313  04B2                     __end_of_SYSTEM_Initialize:	
  4314                           
  4315                           	psect	text5
  4316  0501                     __ptext5:	
  4317 ;; *************** function _WDT_Initialize *****************
  4318 ;; Defined at:
  4319 ;;		line 74 in file "mcc_generated_files/mcc.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;		None
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;		None
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  1    wreg      void 
  4326 ;; Registers used:
  4327 ;;		wreg
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4337 ;;Total ram usage:        0 bytes
  4338 ;; Hardware stack levels used:    1
  4339 ;; Hardware stack levels required when called:    4
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_SYSTEM_Initialize
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           
  4348                           ;psect for function _WDT_Initialize
  4349  0501                     _WDT_Initialize:	
  4350  0501                     l1499:	
  4351                           ;incstack = 0
  4352                           ; Regs used in _WDT_Initialize: [wreg]
  4353                           
  4354                           
  4355                           ;mcc_generated_files/mcc.c: 77:     WDTCON = 0x16;
  4356  0501  3016               	movlw	22
  4357  0502  0021               	movlb	1	; select bank1
  4358  0503  0097               	movwf	23	;volatile
  4359  0504                     l53:	
  4360  0504  0008               	return
  4361  0505                     __end_of_WDT_Initialize:	
  4362                           
  4363                           	psect	text6
  4364  047D                     __ptext6:	
  4365 ;; *************** function _TMR1_Initialize *****************
  4366 ;; Defined at:
  4367 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;		None
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;		None
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg, status,2, status,0, pclath, cstack
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4385 ;;Total ram usage:        0 bytes
  4386 ;; Hardware stack levels used:    1
  4387 ;; Hardware stack levels required when called:    5
  4388 ;; This function calls:
  4389 ;;		_TMR1_SetInterruptHandler
  4390 ;; This function is called by:
  4391 ;;		_SYSTEM_Initialize
  4392 ;;		_setup
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396                           
  4397                           ;psect for function _TMR1_Initialize
  4398  047D                     _TMR1_Initialize:	
  4399  047D                     l1501:	
  4400                           ;incstack = 0
  4401                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4402                           
  4403                           
  4404                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4405  047D  0020               	movlb	0	; select bank0
  4406  047E  019C               	clrf	28	;volatile
  4407  047F                     l1503:	
  4408                           
  4409                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xFF;
  4410  047F  30FF               	movlw	255
  4411  0480  009A               	movwf	26	;volatile
  4412  0481                     l1505:	
  4413                           
  4414                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x00;
  4415  0481  0199               	clrf	25	;volatile
  4416  0482                     l1507:	
  4417                           
  4418                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  4419  0482  1011               	bcf	17,0	;volatile
  4420                           
  4421                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4422  0483  081A               	movf	26,w	;volatile
  4423  0484  00D7               	movwf	_timer1ReloadVal+1	;volatile
  4424  0485  0819               	movf	25,w	;volatile
  4425  0486  00D6               	movwf	_timer1ReloadVal	;volatile
  4426  0487                     l1509:	
  4427                           
  4428                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  4429  0487  0021               	movlb	1	; select bank1
  4430  0488  1411               	bsf	17,0	;volatile
  4431  0489                     l1511:	
  4432                           
  4433                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4434  0489  30F3               	movlw	low _TMR1_DefaultInterruptHandler
  4435  048A  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  4436  048B  3004               	movlw	high _TMR1_DefaultInterruptHandler
  4437  048C  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  4438  048D  3184  24E7  3184   	fcall	_TMR1_SetInterruptHandler
  4439  0490                     l187:	
  4440  0490  0008               	return
  4441  0491                     __end_of_TMR1_Initialize:	
  4442                           
  4443                           	psect	text7
  4444  04E7                     __ptext7:	
  4445 ;; *************** function _TMR1_SetInterruptHandler *****************
  4446 ;; Defined at:
  4447 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4450 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;		None
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      void 
  4455 ;; Registers used:
  4456 ;;		wreg
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4465 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4466 ;;Total ram usage:        2 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; Hardware stack levels required when called:    4
  4469 ;; This function calls:
  4470 ;;		Nothing
  4471 ;; This function is called by:
  4472 ;;		_TMR1_Initialize
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           
  4477                           ;psect for function _TMR1_SetInterruptHandler
  4478  04E7                     _TMR1_SetInterruptHandler:	
  4479  04E7                     l1433:	
  4480                           ;incstack = 0
  4481                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  4482                           
  4483                           
  4484                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
  4485  04E7  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  4486  04E8  0020               	movlb	0	; select bank0
  4487  04E9  00D5               	movwf	_TMR1_InterruptHandler+1
  4488  04EA  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  4489  04EB  00D4               	movwf	_TMR1_InterruptHandler
  4490  04EC                     l217:	
  4491  04EC  0008               	return
  4492  04ED                     __end_of_TMR1_SetInterruptHandler:	
  4493                           
  4494                           	psect	text8
  4495  04DF                     __ptext8:	
  4496 ;; *************** function _PMD_Initialize *****************
  4497 ;; Defined at:
  4498 ;;		line 80 in file "mcc_generated_files/mcc.c"
  4499 ;; Parameters:    Size  Location     Type
  4500 ;;		None
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;		None
  4503 ;; Return value:  Size  Location     Type
  4504 ;;                  1    wreg      void 
  4505 ;; Registers used:
  4506 ;;		status,2
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4516 ;;Total ram usage:        0 bytes
  4517 ;; Hardware stack levels used:    1
  4518 ;; Hardware stack levels required when called:    4
  4519 ;; This function calls:
  4520 ;;		Nothing
  4521 ;; This function is called by:
  4522 ;;		_SYSTEM_Initialize
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           
  4526                           
  4527                           ;psect for function _PMD_Initialize
  4528  04DF                     _PMD_Initialize:	
  4529  04DF                     l1457:	
  4530                           ;incstack = 0
  4531                           ; Regs used in _PMD_Initialize: [status,2]
  4532                           
  4533                           
  4534                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
  4535  04DF  0032               	movlb	18	; select bank18
  4536  04E0  0191               	clrf	17	;volatile
  4537                           
  4538                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
  4539  04E1  0192               	clrf	18	;volatile
  4540                           
  4541                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
  4542  04E2  0193               	clrf	19	;volatile
  4543                           
  4544                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
  4545  04E3  0194               	clrf	20	;volatile
  4546                           
  4547                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
  4548  04E4  0195               	clrf	21	;volatile
  4549                           
  4550                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
  4551  04E5  0196               	clrf	22	;volatile
  4552  04E6                     l56:	
  4553  04E6  0008               	return
  4554  04E7                     __end_of_PMD_Initialize:	
  4555                           
  4556                           	psect	text9
  4557  03BE                     __ptext9:	
  4558 ;; *************** function _PIN_MANAGER_Initialize *****************
  4559 ;; Defined at:
  4560 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;		None
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;		None
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0, pclath, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4578 ;;Total ram usage:        0 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    5
  4581 ;; This function calls:
  4582 ;;		_IOCCF0_SetInterruptHandler
  4583 ;; This function is called by:
  4584 ;;		_SYSTEM_Initialize
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           
  4589                           ;psect for function _PIN_MANAGER_Initialize
  4590  03BE                     _PIN_MANAGER_Initialize:	
  4591  03BE                     l1459:	
  4592                           ;incstack = 0
  4593                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4594                           
  4595                           
  4596                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4597  03BE  0022               	movlb	2	; select bank2
  4598  03BF  018C               	clrf	12	;volatile
  4599  03C0                     l1461:	
  4600                           
  4601                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x20;
  4602  03C0  3020               	movlw	32
  4603  03C1  008E               	movwf	14	;volatile
  4604  03C2                     l1463:	
  4605                           
  4606                           ;mcc_generated_files/pin_manager.c: 68:     TRISA = 0x37;
  4607  03C2  3037               	movlw	55
  4608  03C3  0021               	movlb	1	; select bank1
  4609  03C4  008C               	movwf	12	;volatile
  4610  03C5                     l1465:	
  4611                           
  4612                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x21;
  4613  03C5  3021               	movlw	33
  4614  03C6  008E               	movwf	14	;volatile
  4615  03C7                     l1467:	
  4616                           
  4617                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  4618  03C7  0023               	movlb	3	; select bank3
  4619  03C8  018E               	clrf	14	;volatile
  4620                           
  4621                           ;mcc_generated_files/pin_manager.c: 75:     ANSELA = 0x33;
  4622  03C9  3033               	movlw	51
  4623  03CA  008C               	movwf	12	;volatile
  4624  03CB                     l1469:	
  4625                           
  4626                           ;mcc_generated_files/pin_manager.c: 80:     WPUA = 0x00;
  4627  03CB  0024               	movlb	4	; select bank4
  4628  03CC  018C               	clrf	12	;volatile
  4629  03CD                     l1471:	
  4630                           
  4631                           ;mcc_generated_files/pin_manager.c: 81:     WPUC = 0x1E;
  4632  03CD  301E               	movlw	30
  4633  03CE  008E               	movwf	14	;volatile
  4634                           
  4635                           ;mcc_generated_files/pin_manager.c: 86:     ODCONA = 0x00;
  4636  03CF  0025               	movlb	5	; select bank5
  4637  03D0  018C               	clrf	12	;volatile
  4638                           
  4639                           ;mcc_generated_files/pin_manager.c: 87:     ODCONC = 0x00;
  4640  03D1  018E               	clrf	14	;volatile
  4641  03D2                     l1473:	
  4642                           
  4643                           ;mcc_generated_files/pin_manager.c: 92:     SLRCONA = 0x37;
  4644  03D2  3037               	movlw	55
  4645  03D3  0026               	movlb	6	; select bank6
  4646  03D4  008C               	movwf	12	;volatile
  4647  03D5                     l1475:	
  4648                           
  4649                           ;mcc_generated_files/pin_manager.c: 93:     SLRCONC = 0x3F;
  4650  03D5  303F               	movlw	63
  4651  03D6  008E               	movwf	14	;volatile
  4652  03D7                     l1477:	
  4653                           
  4654                           ;mcc_generated_files/pin_manager.c: 98:     INLVLA = 0x3F;
  4655  03D7  303F               	movlw	63
  4656  03D8  0027               	movlb	7	; select bank7
  4657  03D9  008C               	movwf	12	;volatile
  4658  03DA                     l1479:	
  4659                           
  4660                           ;mcc_generated_files/pin_manager.c: 99:     INLVLC = 0x3F;
  4661  03DA  303F               	movlw	63
  4662  03DB  008E               	movwf	14	;volatile
  4663  03DC                     l1481:	
  4664                           
  4665                           ;mcc_generated_files/pin_manager.c: 106:     IOCCFbits.IOCCF0 = 0;
  4666  03DC  1019               	bcf	25,0	;volatile
  4667  03DD                     l1483:	
  4668                           
  4669                           ;mcc_generated_files/pin_manager.c: 108:     IOCCNbits.IOCCN0 = 0;
  4670  03DD  1018               	bcf	24,0	;volatile
  4671  03DE                     l1485:	
  4672                           
  4673                           ;mcc_generated_files/pin_manager.c: 110:     IOCCPbits.IOCCP0 = 1;
  4674  03DE  1417               	bsf	23,0	;volatile
  4675  03DF                     l1487:	
  4676                           
  4677                           ;mcc_generated_files/pin_manager.c: 115:     IOCCF0_SetInterruptHandler(IOCCF0_DefaultIn
      +                          terruptHandler);
  4678  03DF  3008               	movlw	low _IOCCF0_DefaultInterruptHandler
  4679  03E0  00F2               	movwf	IOCCF0_SetInterruptHandler@InterruptHandler
  4680  03E1  3005               	movlw	high _IOCCF0_DefaultInterruptHandler
  4681  03E2  00F3               	movwf	IOCCF0_SetInterruptHandler@InterruptHandler+1
  4682  03E3  3184  24ED  3183   	fcall	_IOCCF0_SetInterruptHandler
  4683  03E6                     l1489:	
  4684                           
  4685                           ;mcc_generated_files/pin_manager.c: 118:     PIE0bits.IOCIE = 1;
  4686  03E6  0021               	movlb	1	; select bank1
  4687  03E7  1610               	bsf	16,4	;volatile
  4688  03E8                     l105:	
  4689  03E8  0008               	return
  4690  03E9                     __end_of_PIN_MANAGER_Initialize:	
  4691                           
  4692                           	psect	text10
  4693  04ED                     __ptext10:	
  4694 ;; *************** function _IOCCF0_SetInterruptHandler *****************
  4695 ;; Defined at:
  4696 ;;		line 149 in file "mcc_generated_files/pin_manager.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4699 ;;		 -> IOCCF0_DefaultInterruptHandler(1), 
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;		None
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  1    wreg      void 
  4704 ;; Registers used:
  4705 ;;		wreg
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4715 ;;Total ram usage:        2 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:    4
  4718 ;; This function calls:
  4719 ;;		Nothing
  4720 ;; This function is called by:
  4721 ;;		_PIN_MANAGER_Initialize
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           
  4726                           ;psect for function _IOCCF0_SetInterruptHandler
  4727  04ED                     _IOCCF0_SetInterruptHandler:	
  4728  04ED                     l1431:	
  4729                           ;incstack = 0
  4730                           ; Regs used in _IOCCF0_SetInterruptHandler: [wreg]
  4731                           
  4732                           
  4733                           ;mcc_generated_files/pin_manager.c: 150:     IOCCF0_InterruptHandler = InterruptHandler;
  4734  04ED  0873               	movf	IOCCF0_SetInterruptHandler@InterruptHandler+1,w
  4735  04EE  0020               	movlb	0	; select bank0
  4736  04EF  00D9               	movwf	_IOCCF0_InterruptHandler+1
  4737  04F0  0872               	movf	IOCCF0_SetInterruptHandler@InterruptHandler,w
  4738  04F1  00D8               	movwf	_IOCCF0_InterruptHandler
  4739  04F2                     l116:	
  4740  04F2  0008               	return
  4741  04F3                     __end_of_IOCCF0_SetInterruptHandler:	
  4742                           
  4743                           	psect	text11
  4744  04CD                     __ptext11:	
  4745 ;; *************** function _OSCILLATOR_Initialize *****************
  4746 ;; Defined at:
  4747 ;;		line 60 in file "mcc_generated_files/mcc.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;		None
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;		None
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  1    wreg      void 
  4754 ;; Registers used:
  4755 ;;		wreg, status,2
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4765 ;;Total ram usage:        0 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; Hardware stack levels required when called:    4
  4768 ;; This function calls:
  4769 ;;		Nothing
  4770 ;; This function is called by:
  4771 ;;		_SYSTEM_Initialize
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           
  4776                           ;psect for function _OSCILLATOR_Initialize
  4777  04CD                     _OSCILLATOR_Initialize:	
  4778  04CD                     l1491:	
  4779                           ;incstack = 0
  4780                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4781                           
  4782                           
  4783                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
  4784  04CD  3062               	movlw	98
  4785  04CE  0032               	movlb	18	; select bank18
  4786  04CF  0099               	movwf	25	;volatile
  4787  04D0                     l1493:	
  4788                           
  4789                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  4790  04D0  019B               	clrf	27	;volatile
  4791  04D1                     l1495:	
  4792                           
  4793                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  4794  04D1  019D               	clrf	29	;volatile
  4795                           
  4796                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x03;
  4797  04D2  3003               	movlw	3
  4798  04D3  009F               	movwf	31	;volatile
  4799  04D4                     l1497:	
  4800                           
  4801                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  4802  04D4  019E               	clrf	30	;volatile
  4803  04D5                     l50:	
  4804  04D5  0008               	return
  4805  04D6                     __end_of_OSCILLATOR_Initialize:	
  4806                           
  4807                           	psect	text12
  4808  006B                     __ptext12:	
  4809 ;; *************** function _InitWigwagPattern *****************
  4810 ;; Defined at:
  4811 ;;		line 87 in file "Pattern.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;  pattern         2   29[BANK0 ] PTR struct Pattern
  4814 ;;		 -> Wigwag(3), 
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;  i               2   14[BANK1 ] int 
  4817 ;;  i               2   12[BANK1 ] int 
  4818 ;;  right_side_s    4    4[BANK1 ] _Bool [4]
  4819 ;;  left_side_st    4    0[BANK1 ] _Bool [4]
  4820 ;;  head            2   18[BANK1 ] PTR struct Stage
  4821 ;;		 -> stage_stash(768), NULL(0), 
  4822 ;;  off             2   16[BANK1 ] PTR struct Stage
  4823 ;;		 -> stage_stash(768), NULL(0), 
  4824 ;;  right_side_o    2   10[BANK1 ] PTR struct Stage
  4825 ;;		 -> stage_stash(768), NULL(0), 
  4826 ;;  left_side_on    2    8[BANK1 ] PTR struct Stage
  4827 ;;		 -> stage_stash(768), NULL(0), 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4837 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4838 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  4839 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4840 ;;      Totals:         0       3      20       0       0       0       0       0       0       0       0       0       
      +0       0
  4841 ;;Total ram usage:       23 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; Hardware stack levels required when called:    7
  4844 ;; This function calls:
  4845 ;;		_AppendStage
  4846 ;;		_ConstructStage
  4847 ;;		_CopyStageData
  4848 ;;		_NewStage
  4849 ;; This function is called by:
  4850 ;;		_setup
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           
  4855                           ;psect for function _InitWigwagPattern
  4856  006B                     _InitWigwagPattern:	
  4857  006B                     l1881:	
  4858                           ;incstack = 0
  4859                           ; Regs used in _InitWigwagPattern: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4860                           
  4861                           
  4862                           ;Pattern.c: 87: void InitWigwagPattern( struct Pattern* pattern );Pattern.c: 88: {;Patte
      +                          rn.c: 89:     pattern->name = WIGWAG;
  4863  006B  0020               	movlb	0	; select bank0
  4864  006C  083D               	movf	InitWigwagPattern@pattern,w
  4865  006D  0086               	movwf	6
  4866  006E  083E               	movf	InitWigwagPattern@pattern+1,w
  4867  006F  0087               	movwf	7
  4868  0070  0181               	clrf	1
  4869  0071                     l1883:	
  4870                           
  4871                           ;Pattern.c: 92:     _Bool left_side_states[NUM_LIGHTS] = { 1, 0, 1, 0 };
  4872  0071  085D               	movf	InitWigwagPattern@F436+3,w
  4873  0072  0021               	movlb	1	; select bank1
  4874  0073  00A3               	movwf	(InitWigwagPattern@left_side_states+3)^(0+128)
  4875  0074  0020               	movlb	0	; select bank0
  4876  0075  085C               	movf	InitWigwagPattern@F436+2,w
  4877  0076  0021               	movlb	1	; select bank1
  4878  0077  00A2               	movwf	(InitWigwagPattern@left_side_states+2)^(0+128)
  4879  0078  0020               	movlb	0	; select bank0
  4880  0079  085B               	movf	InitWigwagPattern@F436+1,w
  4881  007A  0021               	movlb	1	; select bank1
  4882  007B  00A1               	movwf	(InitWigwagPattern@left_side_states+1)^(0+128)
  4883  007C  0020               	movlb	0	; select bank0
  4884  007D  085A               	movf	InitWigwagPattern@F436,w
  4885  007E  0021               	movlb	1	; select bank1
  4886  007F  00A0               	movwf	InitWigwagPattern@left_side_states^(0+128)
  4887  0080                     l1885:	
  4888                           
  4889                           ;Pattern.c: 93:     struct Stage* left_side_on = ConstructStage( left_side_states, 160UL
      +                          , ((void*)0) );
  4890  0080  30A0               	movlw	160
  4891  0081  0020               	movlb	0	; select bank0
  4892  0082  00AC               	movwf	ConstructStage@time_ms
  4893  0083  3000               	movlw	0
  4894  0084  00AD               	movwf	ConstructStage@time_ms+1
  4895  0085  01AE               	clrf	ConstructStage@next
  4896  0086  30A0               	movlw	(low (InitWigwagPattern@left_side_states| 0))& (0+255)
  4897  0087  3183  2364  3180   	fcall	_ConstructStage
  4898  008A  0020               	movlb	0	; select bank0
  4899  008B  082D               	movf	?_ConstructStage+1,w
  4900  008C  0021               	movlb	1	; select bank1
  4901  008D  00A9               	movwf	(InitWigwagPattern@left_side_on+1)^(0+128)
  4902  008E  0020               	movlb	0	; select bank0
  4903  008F  082C               	movf	?_ConstructStage,w
  4904  0090  0021               	movlb	1	; select bank1
  4905  0091  00A8               	movwf	InitWigwagPattern@left_side_on^(0+128)
  4906  0092                     l1887:	
  4907                           
  4908                           ;Pattern.c: 95:     _Bool right_side_states[NUM_LIGHTS] = { 0, 1, 0, 1 };
  4909  0092  083B               	movf	(InitWigwagPattern@F439+3)^(0+128),w
  4910  0093  00A7               	movwf	(InitWigwagPattern@right_side_states+3)^(0+128)
  4911  0094  083A               	movf	(InitWigwagPattern@F439+2)^(0+128),w
  4912  0095  00A6               	movwf	(InitWigwagPattern@right_side_states+2)^(0+128)
  4913  0096  0839               	movf	(InitWigwagPattern@F439+1)^(0+128),w
  4914  0097  00A5               	movwf	(InitWigwagPattern@right_side_states+1)^(0+128)
  4915  0098  0838               	movf	InitWigwagPattern@F439^(0+128),w
  4916  0099  00A4               	movwf	InitWigwagPattern@right_side_states^(0+128)
  4917  009A                     l1889:	
  4918                           
  4919                           ;Pattern.c: 96:     struct Stage* right_side_on = ConstructStage( right_side_states, 160
      +                          UL, ((void*)0) );
  4920  009A  30A0               	movlw	160
  4921  009B  0020               	movlb	0	; select bank0
  4922  009C  00AC               	movwf	ConstructStage@time_ms
  4923  009D  3000               	movlw	0
  4924  009E  00AD               	movwf	ConstructStage@time_ms+1
  4925  009F  01AE               	clrf	ConstructStage@next
  4926  00A0  30A4               	movlw	(low (InitWigwagPattern@right_side_states| 0))& (0+255)
  4927  00A1  3183  2364  3180   	fcall	_ConstructStage
  4928  00A4  0020               	movlb	0	; select bank0
  4929  00A5  082D               	movf	?_ConstructStage+1,w
  4930  00A6  0021               	movlb	1	; select bank1
  4931  00A7  00AB               	movwf	(InitWigwagPattern@right_side_on+1)^(0+128)
  4932  00A8  0020               	movlb	0	; select bank0
  4933  00A9  082C               	movf	?_ConstructStage,w
  4934  00AA  0021               	movlb	1	; select bank1
  4935  00AB  00AA               	movwf	InitWigwagPattern@right_side_on^(0+128)
  4936  00AC                     l1891:	
  4937                           
  4938                           ;Pattern.c: 98:     struct Stage* off = NewStage();
  4939  00AC  3182  22DC  3180   	fcall	_NewStage
  4940  00AF  0878               	movf	?_NewStage+1,w
  4941  00B0  0021               	movlb	1	; select bank1
  4942  00B1  00B1               	movwf	(InitWigwagPattern@off+1)^(0+128)
  4943  00B2  0877               	movf	?_NewStage,w
  4944  00B3  00B0               	movwf	InitWigwagPattern@off^(0+128)
  4945  00B4                     l1893:	
  4946                           
  4947                           ;Pattern.c: 100:     pattern->first_stage = NewStage();
  4948  00B4  3182  22DC  3180   	fcall	_NewStage
  4949  00B7  0020               	movlb	0	; select bank0
  4950  00B8  083D               	movf	InitWigwagPattern@pattern,w
  4951  00B9  0086               	movwf	6
  4952  00BA  083E               	movf	InitWigwagPattern@pattern+1,w
  4953  00BB  0087               	movwf	7
  4954  00BC  3141               	addfsr 1,1
  4955  00BD  0877               	movf	?_NewStage,w
  4956  00BE  3FC0               	movwi [0]fsr1
  4957  00BF  0878               	movf	?_NewStage+1,w
  4958  00C0  3FC1               	movwi [1]fsr1
  4959  00C1                     l1895:	
  4960                           
  4961                           ;Pattern.c: 101:     struct Stage* head = pattern->first_stage;
  4962  00C1  083D               	movf	InitWigwagPattern@pattern,w
  4963  00C2  0086               	movwf	6
  4964  00C3  083E               	movf	InitWigwagPattern@pattern+1,w
  4965  00C4  0087               	movwf	7
  4966  00C5  3141               	addfsr 1,1
  4967  00C6  3F40               	moviw [0]fsr1
  4968  00C7  0021               	movlb	1	; select bank1
  4969  00C8  00B2               	movwf	InitWigwagPattern@head^(0+128)
  4970  00C9  3F41               	moviw [1]fsr1
  4971  00CA  00B3               	movwf	(InitWigwagPattern@head+1)^(0+128)
  4972  00CB                     l1897:	
  4973                           
  4974                           ;Pattern.c: 104:     for( int i = 0; i < 3; i++ )
  4975  00CB  01AC               	clrf	InitWigwagPattern@i^(0+128)
  4976  00CC  01AD               	clrf	(InitWigwagPattern@i+1)^(0+128)
  4977  00CD                     l1903:	
  4978                           
  4979                           ;Pattern.c: 105:     {;Pattern.c: 106:         AppendStage( head, CopyStageData( NewStag
      +                          e(), left_side_on ) );
  4980  00CD  0021               	movlb	1	; select bank1
  4981  00CE  0833               	movf	(InitWigwagPattern@head+1)^(0+128),w
  4982  00CF  0020               	movlb	0	; select bank0
  4983  00D0  00B6               	movwf	AppendStage@head+1
  4984  00D1  0021               	movlb	1	; select bank1
  4985  00D2  0832               	movf	InitWigwagPattern@head^(0+128),w
  4986  00D3  0020               	movlb	0	; select bank0
  4987  00D4  00B5               	movwf	AppendStage@head
  4988  00D5  3182  22DC  3180   	fcall	_NewStage
  4989  00D8  0878               	movf	?_NewStage+1,w
  4990  00D9  0020               	movlb	0	; select bank0
  4991  00DA  00AD               	movwf	CopyStageData@dest+1
  4992  00DB  0877               	movf	?_NewStage,w
  4993  00DC  00AC               	movwf	CopyStageData@dest
  4994  00DD  0021               	movlb	1	; select bank1
  4995  00DE  0829               	movf	(InitWigwagPattern@left_side_on+1)^(0+128),w
  4996  00DF  0020               	movlb	0	; select bank0
  4997  00E0  00AF               	movwf	CopyStageData@source+1
  4998  00E1  0021               	movlb	1	; select bank1
  4999  00E2  0828               	movf	InitWigwagPattern@left_side_on^(0+128),w
  5000  00E3  0020               	movlb	0	; select bank0
  5001  00E4  00AE               	movwf	CopyStageData@source
  5002  00E5  3183  232B  3180   	fcall	_CopyStageData
  5003  00E8  0020               	movlb	0	; select bank0
  5004  00E9  082D               	movf	?_CopyStageData+1,w
  5005  00EA  00B8               	movwf	AppendStage@new_stage+1
  5006  00EB  082C               	movf	?_CopyStageData,w
  5007  00EC  00B7               	movwf	AppendStage@new_stage
  5008  00ED  3182  2284  3180   	fcall	_AppendStage
  5009                           
  5010                           ;Pattern.c: 107:         AppendStage( head, CopyStageData( NewStage(), off ) );
  5011  00F0  0021               	movlb	1	; select bank1
  5012  00F1  0833               	movf	(InitWigwagPattern@head+1)^(0+128),w
  5013  00F2  0020               	movlb	0	; select bank0
  5014  00F3  00B6               	movwf	AppendStage@head+1
  5015  00F4  0021               	movlb	1	; select bank1
  5016  00F5  0832               	movf	InitWigwagPattern@head^(0+128),w
  5017  00F6  0020               	movlb	0	; select bank0
  5018  00F7  00B5               	movwf	AppendStage@head
  5019  00F8  3182  22DC  3180   	fcall	_NewStage
  5020  00FB  0878               	movf	?_NewStage+1,w
  5021  00FC  0020               	movlb	0	; select bank0
  5022  00FD  00AD               	movwf	CopyStageData@dest+1
  5023  00FE  0877               	movf	?_NewStage,w
  5024  00FF  00AC               	movwf	CopyStageData@dest
  5025  0100  0021               	movlb	1	; select bank1
  5026  0101  0831               	movf	(InitWigwagPattern@off+1)^(0+128),w
  5027  0102  0020               	movlb	0	; select bank0
  5028  0103  00AF               	movwf	CopyStageData@source+1
  5029  0104  0021               	movlb	1	; select bank1
  5030  0105  0830               	movf	InitWigwagPattern@off^(0+128),w
  5031  0106  0020               	movlb	0	; select bank0
  5032  0107  00AE               	movwf	CopyStageData@source
  5033  0108  3183  232B  3180   	fcall	_CopyStageData
  5034  010B  0020               	movlb	0	; select bank0
  5035  010C  082D               	movf	?_CopyStageData+1,w
  5036  010D  00B8               	movwf	AppendStage@new_stage+1
  5037  010E  082C               	movf	?_CopyStageData,w
  5038  010F  00B7               	movwf	AppendStage@new_stage
  5039  0110  3182  2284  3180   	fcall	_AppendStage
  5040  0113                     l1905:	
  5041                           
  5042                           ;Pattern.c: 108:     }
  5043  0113  3001               	movlw	1
  5044  0114  0021               	movlb	1	; select bank1
  5045  0115  07AC               	addwf	InitWigwagPattern@i^(0+128),f
  5046  0116  3000               	movlw	0
  5047  0117  3DAD               	addwfc	(InitWigwagPattern@i+1)^(0+128),f
  5048  0118                     l1907:	
  5049  0118  082D               	movf	(InitWigwagPattern@i+1)^(0+128),w
  5050  0119  3A80               	xorlw	128
  5051  011A  0020               	movlb	0	; select bank0
  5052  011B  00BF               	movwf	??_InitWigwagPattern
  5053  011C  3080               	movlw	128
  5054  011D  023F               	subwf	??_InitWigwagPattern,w
  5055  011E  1D03               	skipz
  5056  011F  2923               	goto	u855
  5057  0120  3003               	movlw	3
  5058  0121  0021               	movlb	1	; select bank1
  5059  0122  022C               	subwf	InitWigwagPattern@i^(0+128),w
  5060  0123                     u855:	
  5061  0123  1C03               	skipc
  5062  0124  2926               	goto	u851
  5063  0125  2927               	goto	u850
  5064  0126                     u851:	
  5065  0126  28CD               	goto	l1903
  5066  0127                     u850:	
  5067  0127                     l1909:	
  5068                           
  5069                           ;Pattern.c: 110:     AppendStage( head, CopyStageData( NewStage(), off ) );
  5070  0127  0021               	movlb	1	; select bank1
  5071  0128  0833               	movf	(InitWigwagPattern@head+1)^(0+128),w
  5072  0129  0020               	movlb	0	; select bank0
  5073  012A  00B6               	movwf	AppendStage@head+1
  5074  012B  0021               	movlb	1	; select bank1
  5075  012C  0832               	movf	InitWigwagPattern@head^(0+128),w
  5076  012D  0020               	movlb	0	; select bank0
  5077  012E  00B5               	movwf	AppendStage@head
  5078  012F  3182  22DC  3180   	fcall	_NewStage
  5079  0132  0878               	movf	?_NewStage+1,w
  5080  0133  0020               	movlb	0	; select bank0
  5081  0134  00AD               	movwf	CopyStageData@dest+1
  5082  0135  0877               	movf	?_NewStage,w
  5083  0136  00AC               	movwf	CopyStageData@dest
  5084  0137  0021               	movlb	1	; select bank1
  5085  0138  0831               	movf	(InitWigwagPattern@off+1)^(0+128),w
  5086  0139  0020               	movlb	0	; select bank0
  5087  013A  00AF               	movwf	CopyStageData@source+1
  5088  013B  0021               	movlb	1	; select bank1
  5089  013C  0830               	movf	InitWigwagPattern@off^(0+128),w
  5090  013D  0020               	movlb	0	; select bank0
  5091  013E  00AE               	movwf	CopyStageData@source
  5092  013F  3183  232B  3180   	fcall	_CopyStageData
  5093  0142  0020               	movlb	0	; select bank0
  5094  0143  082D               	movf	?_CopyStageData+1,w
  5095  0144  00B8               	movwf	AppendStage@new_stage+1
  5096  0145  082C               	movf	?_CopyStageData,w
  5097  0146  00B7               	movwf	AppendStage@new_stage
  5098  0147  3182  2284  3180   	fcall	_AppendStage
  5099  014A                     l1911:	
  5100                           
  5101                           ;Pattern.c: 112:     for( int i = 0; i < 3; i++ )
  5102  014A  0021               	movlb	1	; select bank1
  5103  014B  01AE               	clrf	InitWigwagPattern@i_770^(0+128)
  5104  014C  01AF               	clrf	(InitWigwagPattern@i_770+1)^(0+128)
  5105  014D                     l1917:	
  5106                           
  5107                           ;Pattern.c: 113:     {;Pattern.c: 114:         AppendStage( head, CopyStageData( NewStag
      +                          e(), right_side_on ) );
  5108  014D  0021               	movlb	1	; select bank1
  5109  014E  0833               	movf	(InitWigwagPattern@head+1)^(0+128),w
  5110  014F  0020               	movlb	0	; select bank0
  5111  0150  00B6               	movwf	AppendStage@head+1
  5112  0151  0021               	movlb	1	; select bank1
  5113  0152  0832               	movf	InitWigwagPattern@head^(0+128),w
  5114  0153  0020               	movlb	0	; select bank0
  5115  0154  00B5               	movwf	AppendStage@head
  5116  0155  3182  22DC  3180   	fcall	_NewStage
  5117  0158  0878               	movf	?_NewStage+1,w
  5118  0159  0020               	movlb	0	; select bank0
  5119  015A  00AD               	movwf	CopyStageData@dest+1
  5120  015B  0877               	movf	?_NewStage,w
  5121  015C  00AC               	movwf	CopyStageData@dest
  5122  015D  0021               	movlb	1	; select bank1
  5123  015E  082B               	movf	(InitWigwagPattern@right_side_on+1)^(0+128),w
  5124  015F  0020               	movlb	0	; select bank0
  5125  0160  00AF               	movwf	CopyStageData@source+1
  5126  0161  0021               	movlb	1	; select bank1
  5127  0162  082A               	movf	InitWigwagPattern@right_side_on^(0+128),w
  5128  0163  0020               	movlb	0	; select bank0
  5129  0164  00AE               	movwf	CopyStageData@source
  5130  0165  3183  232B  3180   	fcall	_CopyStageData
  5131  0168  0020               	movlb	0	; select bank0
  5132  0169  082D               	movf	?_CopyStageData+1,w
  5133  016A  00B8               	movwf	AppendStage@new_stage+1
  5134  016B  082C               	movf	?_CopyStageData,w
  5135  016C  00B7               	movwf	AppendStage@new_stage
  5136  016D  3182  2284  3180   	fcall	_AppendStage
  5137                           
  5138                           ;Pattern.c: 115:         AppendStage( head, CopyStageData( NewStage(), off ) );
  5139  0170  0021               	movlb	1	; select bank1
  5140  0171  0833               	movf	(InitWigwagPattern@head+1)^(0+128),w
  5141  0172  0020               	movlb	0	; select bank0
  5142  0173  00B6               	movwf	AppendStage@head+1
  5143  0174  0021               	movlb	1	; select bank1
  5144  0175  0832               	movf	InitWigwagPattern@head^(0+128),w
  5145  0176  0020               	movlb	0	; select bank0
  5146  0177  00B5               	movwf	AppendStage@head
  5147  0178  3182  22DC  3180   	fcall	_NewStage
  5148  017B  0878               	movf	?_NewStage+1,w
  5149  017C  0020               	movlb	0	; select bank0
  5150  017D  00AD               	movwf	CopyStageData@dest+1
  5151  017E  0877               	movf	?_NewStage,w
  5152  017F  00AC               	movwf	CopyStageData@dest
  5153  0180  0021               	movlb	1	; select bank1
  5154  0181  0831               	movf	(InitWigwagPattern@off+1)^(0+128),w
  5155  0182  0020               	movlb	0	; select bank0
  5156  0183  00AF               	movwf	CopyStageData@source+1
  5157  0184  0021               	movlb	1	; select bank1
  5158  0185  0830               	movf	InitWigwagPattern@off^(0+128),w
  5159  0186  0020               	movlb	0	; select bank0
  5160  0187  00AE               	movwf	CopyStageData@source
  5161  0188  3183  232B  3180   	fcall	_CopyStageData
  5162  018B  0020               	movlb	0	; select bank0
  5163  018C  082D               	movf	?_CopyStageData+1,w
  5164  018D  00B8               	movwf	AppendStage@new_stage+1
  5165  018E  082C               	movf	?_CopyStageData,w
  5166  018F  00B7               	movwf	AppendStage@new_stage
  5167  0190  3182  2284  3180   	fcall	_AppendStage
  5168  0193                     l1919:	
  5169                           
  5170                           ;Pattern.c: 116:     }
  5171  0193  3001               	movlw	1
  5172  0194  0021               	movlb	1	; select bank1
  5173  0195  07AE               	addwf	InitWigwagPattern@i_770^(0+128),f
  5174  0196  3000               	movlw	0
  5175  0197  3DAF               	addwfc	(InitWigwagPattern@i_770+1)^(0+128),f
  5176  0198                     l1921:	
  5177  0198  082F               	movf	(InitWigwagPattern@i_770+1)^(0+128),w
  5178  0199  3A80               	xorlw	128
  5179  019A  0020               	movlb	0	; select bank0
  5180  019B  00BF               	movwf	??_InitWigwagPattern
  5181  019C  3080               	movlw	128
  5182  019D  023F               	subwf	??_InitWigwagPattern,w
  5183  019E  1D03               	skipz
  5184  019F  29A3               	goto	u865
  5185  01A0  3003               	movlw	3
  5186  01A1  0021               	movlb	1	; select bank1
  5187  01A2  022E               	subwf	InitWigwagPattern@i_770^(0+128),w
  5188  01A3                     u865:	
  5189  01A3  1C03               	skipc
  5190  01A4  29A6               	goto	u861
  5191  01A5  29A7               	goto	u860
  5192  01A6                     u861:	
  5193  01A6  294D               	goto	l1917
  5194  01A7                     u860:	
  5195  01A7                     l398:	
  5196  01A7  0008               	return
  5197  01A8                     __end_of_InitWigwagPattern:	
  5198                           
  5199                           	psect	text13
  5200  032B                     __ptext13:	
  5201 ;; *************** function _CopyStageData *****************
  5202 ;; Defined at:
  5203 ;;		line 51 in file "Pattern.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;  dest            2   12[BANK0 ] PTR struct Stage
  5206 ;;		 -> stage_stash(768), NULL(0), 
  5207 ;;  source          2   14[BANK0 ] PTR struct Stage
  5208 ;;		 -> stage_stash(768), NULL(0), 
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;  i               2   19[BANK0 ] int 
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  2   12[BANK0 ] PTR struct Stage
  5213 ;; Registers used:
  5214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5220 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5221 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5222 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5223 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5224 ;;Total ram usage:        9 bytes
  5225 ;; Hardware stack levels used:    1
  5226 ;; Hardware stack levels required when called:    4
  5227 ;; This function calls:
  5228 ;;		Nothing
  5229 ;; This function is called by:
  5230 ;;		_InitWigwagPattern
  5231 ;;		_CopyStage
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           
  5236                           ;psect for function _CopyStageData
  5237  032B                     _CopyStageData:	
  5238  032B                     l1849:	
  5239                           ;incstack = 0
  5240                           ; Regs used in _CopyStageData: [wreg-fsr1h+status,2+status,0]
  5241                           
  5242                           
  5243                           ;Pattern.c: 51: struct Stage* CopyStageData( struct Stage* dest, struct Stage* source );
      +                          Pattern.c: 52: {;Pattern.c: 53:     for( int i = 0; i < NUM_LIGHTS; i++ )
  5244  032B  0020               	movlb	0	; select bank0
  5245  032C  01B3               	clrf	CopyStageData@i
  5246  032D  01B4               	clrf	CopyStageData@i+1
  5247  032E                     l1855:	
  5248                           
  5249                           ;Pattern.c: 54:         dest->light_states[i] = source->light_states[i];
  5250  032E  0020               	movlb	0	; select bank0
  5251  032F  0833               	movf	CopyStageData@i,w
  5252  0330  072E               	addwf	CopyStageData@source,w
  5253  0331  0086               	movwf	6
  5254  0332  0834               	movf	CopyStageData@i+1,w
  5255  0333  3D2F               	addwfc	CopyStageData@source+1,w
  5256  0334  0087               	movwf	7
  5257  0335  0801               	movf	1,w
  5258  0336  00B0               	movwf	??_CopyStageData
  5259  0337  0833               	movf	CopyStageData@i,w
  5260  0338  072C               	addwf	CopyStageData@dest,w
  5261  0339  00B1               	movwf	??_CopyStageData+1
  5262  033A  0834               	movf	CopyStageData@i+1,w
  5263  033B  3D2D               	addwfc	CopyStageData@dest+1,w
  5264  033C  00B2               	movwf	??_CopyStageData+2
  5265  033D  0831               	movf	??_CopyStageData+1,w
  5266  033E  0086               	movwf	6
  5267  033F  0832               	movf	??_CopyStageData+2,w
  5268  0340  0087               	movwf	7
  5269  0341  0830               	movf	??_CopyStageData,w
  5270  0342  0081               	movwf	1
  5271  0343                     l1857:	
  5272  0343  3001               	movlw	1
  5273  0344  07B3               	addwf	CopyStageData@i,f
  5274  0345  3000               	movlw	0
  5275  0346  3DB4               	addwfc	CopyStageData@i+1,f
  5276  0347                     l1859:	
  5277  0347  0834               	movf	CopyStageData@i+1,w
  5278  0348  3A80               	xorlw	128
  5279  0349  00B0               	movwf	??_CopyStageData
  5280  034A  3080               	movlw	128
  5281  034B  0230               	subwf	??_CopyStageData,w
  5282  034C  1D03               	skipz
  5283  034D  2B50               	goto	u825
  5284  034E  3004               	movlw	4
  5285  034F  0233               	subwf	CopyStageData@i,w
  5286  0350                     u825:	
  5287  0350  1C03               	skipc
  5288  0351  2B53               	goto	u821
  5289  0352  2B54               	goto	u820
  5290  0353                     u821:	
  5291  0353  2B2E               	goto	l1855
  5292  0354                     u820:	
  5293  0354                     l1861:	
  5294                           
  5295                           ;Pattern.c: 55:     dest->time_ms = source->time_ms;
  5296  0354  0020               	movlb	0	; select bank0
  5297  0355  082E               	movf	CopyStageData@source,w
  5298  0356  0086               	movwf	6
  5299  0357  082F               	movf	CopyStageData@source+1,w
  5300  0358  0087               	movwf	7
  5301  0359  3144               	addfsr 1,4
  5302  035A  082C               	movf	CopyStageData@dest,w
  5303  035B  0084               	movwf	4
  5304  035C  082D               	movf	CopyStageData@dest+1,w
  5305  035D  0085               	movwf	5
  5306  035E  3104               	addfsr 0,4
  5307  035F  3F40               	moviw [0]fsr1
  5308  0360  3F80               	movwi [0]fsr0
  5309  0361  3F41               	moviw [1]fsr1
  5310  0362  3F81               	movwi [1]fsr0
  5311  0363                     l1863:	
  5312  0363                     l373:	
  5313                           ;Pattern.c: 56:     return dest;
  5314                           
  5315  0363  0008               	return
  5316  0364                     __end_of_CopyStageData:	
  5317                           
  5318                           	psect	text14
  5319  0364                     __ptext14:	
  5320 ;; *************** function _ConstructStage *****************
  5321 ;; Defined at:
  5322 ;;		line 35 in file "Pattern.c"
  5323 ;; Parameters:    Size  Location     Type
  5324 ;;  states          1    wreg     PTR const _Bool 
  5325 ;;		 -> InitWigwagPattern@right_side_states(4), InitWigwagPattern@left_side_states(4), 
  5326 ;;  time_ms         2   12[BANK0 ] const unsigned short 
  5327 ;;  next            1   14[BANK0 ] PTR struct Stage
  5328 ;;		 -> NULL(0), 
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;  states          1   15[BANK0 ] PTR const _Bool 
  5331 ;;		 -> InitWigwagPattern@right_side_states(4), InitWigwagPattern@left_side_states(4), 
  5332 ;;  new_stage       2   16[BANK0 ] PTR struct Stage
  5333 ;;		 -> stage_stash(768), NULL(0), 
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  2   12[BANK0 ] PTR struct Stage
  5336 ;; Registers used:
  5337 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5343 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5344 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5345 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5346 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5347 ;;Total ram usage:        7 bytes
  5348 ;; Hardware stack levels used:    1
  5349 ;; Hardware stack levels required when called:    6
  5350 ;; This function calls:
  5351 ;;		_AssignLightStates
  5352 ;;		_NewStage
  5353 ;; This function is called by:
  5354 ;;		_InitWigwagPattern
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358                           
  5359                           ;psect for function _ConstructStage
  5360  0364                     _ConstructStage:	
  5361                           
  5362                           ;incstack = 0
  5363                           ; Regs used in _ConstructStage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5364                           ;ConstructStage@states stored from wreg
  5365  0364  0020               	movlb	0	; select bank0
  5366  0365  00AF               	movwf	ConstructStage@states
  5367  0366                     l1839:	
  5368                           
  5369                           ;Pattern.c: 35: struct Stage* ConstructStage( const _Bool states[NUM_LIGHTS], const uint
      +                           time_ms, struct Stage* next );Pattern.c: 36: {;Pattern.c: 37:     struct Stage* new_sta
      +                          ge = NewStage();
  5370  0366  3182  22DC  3183   	fcall	_NewStage
  5371  0369  0878               	movf	?_NewStage+1,w
  5372  036A  0020               	movlb	0	; select bank0
  5373  036B  00B1               	movwf	ConstructStage@new_stage+1
  5374  036C  0877               	movf	?_NewStage,w
  5375  036D  00B0               	movwf	ConstructStage@new_stage
  5376                           
  5377                           ;Pattern.c: 38:     AssignLightStates( new_stage, states );
  5378  036E  0831               	movf	ConstructStage@new_stage+1,w
  5379  036F  00F3               	movwf	AssignLightStates@stage+1
  5380  0370  0830               	movf	ConstructStage@new_stage,w
  5381  0371  00F2               	movwf	AssignLightStates@stage
  5382  0372  082F               	movf	ConstructStage@states,w
  5383  0373  00F9               	movwf	??_ConstructStage
  5384  0374  0879               	movf	??_ConstructStage,w
  5385  0375  00F4               	movwf	AssignLightStates@states
  5386  0376  3183  23E9  3183   	fcall	_AssignLightStates
  5387  0379                     l1841:	
  5388                           
  5389                           ;Pattern.c: 39:     new_stage->time_ms = time_ms;
  5390  0379  0020               	movlb	0	; select bank0
  5391  037A  0830               	movf	ConstructStage@new_stage,w
  5392  037B  0086               	movwf	6
  5393  037C  0831               	movf	ConstructStage@new_stage+1,w
  5394  037D  0087               	movwf	7
  5395  037E  3144               	addfsr 1,4
  5396  037F  082C               	movf	ConstructStage@time_ms,w
  5397  0380  3FC0               	movwi [0]fsr1
  5398  0381  082D               	movf	ConstructStage@time_ms+1,w
  5399  0382  3FC1               	movwi [1]fsr1
  5400  0383                     l1843:	
  5401                           
  5402                           ;Pattern.c: 40:     new_stage->next = next;
  5403  0383  0830               	movf	ConstructStage@new_stage,w
  5404  0384  0086               	movwf	6
  5405  0385  0831               	movf	ConstructStage@new_stage+1,w
  5406  0386  0087               	movwf	7
  5407  0387  3146               	addfsr 1,6
  5408  0388  082E               	movf	ConstructStage@next,w
  5409  0389  3FC0               	movwi [0]fsr1
  5410  038A  3000               	movlw	0
  5411  038B  3FC1               	movwi [1]fsr1
  5412  038C                     l1845:	
  5413                           
  5414                           ;Pattern.c: 41:     return new_stage;
  5415  038C  0831               	movf	ConstructStage@new_stage+1,w
  5416  038D  00AD               	movwf	?_ConstructStage+1
  5417  038E  0830               	movf	ConstructStage@new_stage,w
  5418  038F  00AC               	movwf	?_ConstructStage
  5419  0390                     l365:	
  5420  0390  0008               	return
  5421  0391                     __end_of_ConstructStage:	
  5422                           
  5423                           	psect	text15
  5424  02DC                     __ptext15:	
  5425 ;; *************** function _NewStage *****************
  5426 ;; Defined at:
  5427 ;;		line 21 in file "Pattern.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;		None
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;  init_states     4    6[BANK0 ] _Bool [4]
  5432 ;;  new_stage       2   10[BANK0 ] PTR struct Stage
  5433 ;;		 -> stage_stash(768), 
  5434 ;; Return value:  Size  Location     Type
  5435 ;;                  2    7[COMMON] PTR struct Stage
  5436 ;; Registers used:
  5437 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5438 ;; Tracked objects:
  5439 ;;		On entry : 0/0
  5440 ;;		On exit  : 0/0
  5441 ;;		Unchanged: 0/0
  5442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5444 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5445 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5446 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5447 ;;Total ram usage:       10 bytes
  5448 ;; Hardware stack levels used:    1
  5449 ;; Hardware stack levels required when called:    5
  5450 ;; This function calls:
  5451 ;;		_AssignLightStates
  5452 ;; This function is called by:
  5453 ;;		_ConstructStage
  5454 ;;		_InitWigwagPattern
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           
  5459                           ;psect for function _NewStage
  5460  02DC                     _NewStage:	
  5461  02DC                     l1789:	
  5462                           ;incstack = 0
  5463                           ; Regs used in _NewStage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5464                           
  5465                           
  5466                           ;Pattern.c: 23:     if ( stage_list_iter >= MAX_STAGES )
  5467  02DC  3000               	movlw	0
  5468  02DD  0020               	movlb	0	; select bank0
  5469  02DE  0246               	subwf	_stage_list_iter+1,w
  5470  02DF  3060               	movlw	96
  5471  02E0  1903               	skipnz
  5472  02E1  0245               	subwf	_stage_list_iter,w
  5473  02E2  1C03               	skipc
  5474  02E3  2AE5               	goto	u691
  5475  02E4  2AE6               	goto	u690
  5476  02E5                     u691:	
  5477  02E5  2AE9               	goto	l1795
  5478  02E6                     u690:	
  5479  02E6                     l1791:	
  5480                           
  5481                           ;Pattern.c: 24:         return ((void*)0);
  5482  02E6  01F7               	clrf	?_NewStage
  5483  02E7  01F8               	clrf	?_NewStage+1
  5484  02E8  2B2A               	goto	l360
  5485  02E9                     l1795:	
  5486                           
  5487                           ;Pattern.c: 26:     struct Stage* new_stage = &stage_stash[ stage_list_iter++ ];
  5488  02E9  0846               	movf	_stage_list_iter+1,w
  5489  02EA  00A3               	movwf	??_NewStage+1
  5490  02EB  0845               	movf	_stage_list_iter,w
  5491  02EC  00A2               	movwf	??_NewStage
  5492  02ED  35A2               	lslf	??_NewStage,f
  5493  02EE  0DA3               	rlf	??_NewStage+1,f
  5494  02EF  35A2               	lslf	??_NewStage,f
  5495  02F0  0DA3               	rlf	??_NewStage+1,f
  5496  02F1  35A2               	lslf	??_NewStage,f
  5497  02F2  0DA3               	rlf	??_NewStage+1,f
  5498  02F3  30F0               	movlw	240
  5499  02F4  00A4               	movwf	??_NewStage+2
  5500  02F5  3020               	movlw	32
  5501  02F6  00A5               	movwf	??_NewStage+3
  5502  02F7  0822               	movf	??_NewStage,w
  5503  02F8  0724               	addwf	??_NewStage+2,w
  5504  02F9  00AA               	movwf	NewStage@new_stage
  5505  02FA  0823               	movf	??_NewStage+1,w
  5506  02FB  3D25               	addwfc	??_NewStage+3,w
  5507  02FC  00AB               	movwf	NewStage@new_stage+1
  5508  02FD                     l1797:	
  5509  02FD  3001               	movlw	1
  5510  02FE  07C5               	addwf	_stage_list_iter,f
  5511  02FF  3000               	movlw	0
  5512  0300  3DC6               	addwfc	_stage_list_iter+1,f
  5513  0301                     l1799:	
  5514                           
  5515                           ;Pattern.c: 27:     _Bool init_states[NUM_LIGHTS] = { 0, 0, 0, 0 };
  5516  0301  3000               	movlw	0
  5517  0302  00A9               	movwf	NewStage@init_states+3
  5518  0303  3000               	movlw	0
  5519  0304  00A8               	movwf	NewStage@init_states+2
  5520  0305  3000               	movlw	0
  5521  0306  00A7               	movwf	NewStage@init_states+1
  5522  0307  3000               	movlw	0
  5523  0308  00A6               	movwf	NewStage@init_states
  5524  0309                     l1801:	
  5525                           
  5526                           ;Pattern.c: 28:     AssignLightStates( new_stage, init_states );
  5527  0309  082B               	movf	NewStage@new_stage+1,w
  5528  030A  00F3               	movwf	AssignLightStates@stage+1
  5529  030B  082A               	movf	NewStage@new_stage,w
  5530  030C  00F2               	movwf	AssignLightStates@stage
  5531  030D  3026               	movlw	(low (NewStage@init_states| 0))& (0+255)
  5532  030E  00A2               	movwf	??_NewStage
  5533  030F  0822               	movf	??_NewStage,w
  5534  0310  00F4               	movwf	AssignLightStates@states
  5535  0311  3183  23E9  3182   	fcall	_AssignLightStates
  5536  0314                     l1803:	
  5537                           
  5538                           ;Pattern.c: 29:     new_stage->time_ms = 160UL;
  5539  0314  0020               	movlb	0	; select bank0
  5540  0315  082A               	movf	NewStage@new_stage,w
  5541  0316  0086               	movwf	6
  5542  0317  082B               	movf	NewStage@new_stage+1,w
  5543  0318  0087               	movwf	7
  5544  0319  3144               	addfsr 1,4
  5545  031A  30A0               	movlw	160
  5546  031B  3FC0               	movwi [0]fsr1
  5547  031C  3000               	movlw	0
  5548  031D  3FC1               	movwi [1]fsr1
  5549  031E                     l1805:	
  5550                           
  5551                           ;Pattern.c: 30:     new_stage->next = ((void*)0);
  5552  031E  082A               	movf	NewStage@new_stage,w
  5553  031F  0086               	movwf	6
  5554  0320  082B               	movf	NewStage@new_stage+1,w
  5555  0321  0087               	movwf	7
  5556  0322  3146               	addfsr 1,6
  5557  0323  3000               	movlw	0
  5558  0324  3FC0               	movwi [0]fsr1
  5559  0325  3FC1               	movwi [1]fsr1
  5560  0326                     l1807:	
  5561                           
  5562                           ;Pattern.c: 32:     return new_stage;
  5563  0326  082B               	movf	NewStage@new_stage+1,w
  5564  0327  00F8               	movwf	?_NewStage+1
  5565  0328  082A               	movf	NewStage@new_stage,w
  5566  0329  00F7               	movwf	?_NewStage
  5567  032A                     l360:	
  5568  032A  0008               	return
  5569  032B                     __end_of_NewStage:	
  5570                           
  5571                           	psect	text16
  5572  03E9                     __ptext16:	
  5573 ;; *************** function _AssignLightStates *****************
  5574 ;; Defined at:
  5575 ;;		line 13 in file "Pattern.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;  stage           2    2[COMMON] PTR struct Stage
  5578 ;;		 -> stage_stash(768), NULL(0), 
  5579 ;;  states          1    4[COMMON] PTR const _Bool 
  5580 ;;		 -> InitWigwagPattern@right_side_states(4), InitWigwagPattern@left_side_states(4), NewStage@init_states(4), 
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;  i               2    0[BANK0 ] unsigned short 
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  1    wreg      void 
  5585 ;; Registers used:
  5586 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5592 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5593 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5594 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5595 ;;      Totals:         7       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5596 ;;Total ram usage:        9 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; Hardware stack levels required when called:    4
  5599 ;; This function calls:
  5600 ;;		Nothing
  5601 ;; This function is called by:
  5602 ;;		_NewStage
  5603 ;;		_ConstructStage
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607                           
  5608                           ;psect for function _AssignLightStates
  5609  03E9                     _AssignLightStates:	
  5610  03E9                     l1777:	
  5611                           ;incstack = 0
  5612                           ; Regs used in _AssignLightStates: [wreg+fsr1l+fsr1h+status,2+status,0]
  5613                           
  5614                           
  5615                           ;Pattern.c: 13: void AssignLightStates( struct Stage* stage, const _Bool states[ NUM_LIG
      +                          HTS ] );Pattern.c: 14: {;Pattern.c: 15:     for( uint i = 0; i < NUM_LIGHTS; i++ )
  5616  03E9  0020               	movlb	0	; select bank0
  5617  03EA  01A0               	clrf	AssignLightStates@i
  5618  03EB  01A1               	clrf	AssignLightStates@i+1
  5619  03EC                     l1783:	
  5620                           
  5621                           ;Pattern.c: 16:     {;Pattern.c: 17:         stage->light_states[i] = states[i];
  5622  03EC  0820               	movf	AssignLightStates@i,w
  5623  03ED  0774               	addwf	AssignLightStates@states,w
  5624  03EE  00F5               	movwf	??_AssignLightStates
  5625  03EF  0875               	movf	??_AssignLightStates,w
  5626  03F0  0086               	movwf	6
  5627  03F1  0187               	clrf	7
  5628  03F2  0801               	movf	1,w
  5629  03F3  00F6               	movwf	??_AssignLightStates+1
  5630  03F4  0820               	movf	AssignLightStates@i,w
  5631  03F5  0772               	addwf	AssignLightStates@stage,w
  5632  03F6  00F7               	movwf	??_AssignLightStates+2
  5633  03F7  0821               	movf	AssignLightStates@i+1,w
  5634  03F8  3D73               	addwfc	AssignLightStates@stage+1,w
  5635  03F9  00F8               	movwf	??_AssignLightStates+3
  5636  03FA  0877               	movf	??_AssignLightStates+2,w
  5637  03FB  0086               	movwf	6
  5638  03FC  0878               	movf	??_AssignLightStates+3,w
  5639  03FD  0087               	movwf	7
  5640  03FE  0876               	movf	??_AssignLightStates+1,w
  5641  03FF  0081               	movwf	1
  5642  0400                     l1785:	
  5643                           
  5644                           ;Pattern.c: 18:     }
  5645  0400  3001               	movlw	1
  5646  0401  07A0               	addwf	AssignLightStates@i,f
  5647  0402  3000               	movlw	0
  5648  0403  3DA1               	addwfc	AssignLightStates@i+1,f
  5649  0404                     l1787:	
  5650  0404  3000               	movlw	0
  5651  0405  0221               	subwf	AssignLightStates@i+1,w
  5652  0406  3004               	movlw	4
  5653  0407  1903               	skipnz
  5654  0408  0220               	subwf	AssignLightStates@i,w
  5655  0409  1C03               	skipc
  5656  040A  2C0C               	goto	u681
  5657  040B  2C0D               	goto	u680
  5658  040C                     u681:	
  5659  040C  2BEC               	goto	l1783
  5660  040D                     u680:	
  5661  040D                     l356:	
  5662  040D  0008               	return
  5663  040E                     __end_of_AssignLightStates:	
  5664                           
  5665                           	psect	text17
  5666  0284                     __ptext17:	
  5667 ;; *************** function _AppendStage *****************
  5668 ;; Defined at:
  5669 ;;		line 59 in file "Pattern.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;  head            2   21[BANK0 ] PTR struct Stage
  5672 ;;		 -> stage_stash(768), NULL(0), 
  5673 ;;  new_stage       2   23[BANK0 ] PTR struct Stage
  5674 ;;		 -> stage_stash(768), NULL(0), 
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;  last_stage      2   27[BANK0 ] PTR struct Stage
  5677 ;;		 -> stage_stash(768), NULL(0), 
  5678 ;; Return value:  Size  Location     Type
  5679 ;;                  1    wreg      void 
  5680 ;; Registers used:
  5681 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5682 ;; Tracked objects:
  5683 ;;		On entry : 0/0
  5684 ;;		On exit  : 0/0
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5687 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5688 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5689 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5690 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5691 ;;Total ram usage:        8 bytes
  5692 ;; Hardware stack levels used:    1
  5693 ;; Hardware stack levels required when called:    4
  5694 ;; This function calls:
  5695 ;;		Nothing
  5696 ;; This function is called by:
  5697 ;;		_InitWigwagPattern
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           
  5702                           ;psect for function _AppendStage
  5703  0284                     _AppendStage:	
  5704  0284                     l1867:	
  5705                           ;incstack = 0
  5706                           ; Regs used in _AppendStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  5707                           
  5708                           
  5709                           ;Pattern.c: 59: void AppendStage( struct Stage* head, struct Stage* new_stage );Pattern.
      +                          c: 60: {;Pattern.c: 61:     if ( head->next == ((void*)0) )
  5710  0284  0020               	movlb	0	; select bank0
  5711  0285  0835               	movf	AppendStage@head,w
  5712  0286  0086               	movwf	6
  5713  0287  0836               	movf	AppendStage@head+1,w
  5714  0288  0087               	movwf	7
  5715  0289  3146               	addfsr 1,6
  5716  028A  0016               	moviw fsr1++
  5717  028B  0401               	iorwf	1,w
  5718  028C  1D03               	btfss	3,2
  5719  028D  2A8F               	goto	u831
  5720  028E  2A90               	goto	u830
  5721  028F                     u831:	
  5722  028F  2AA3               	goto	l1871
  5723  0290                     u830:	
  5724  0290                     l1869:	
  5725                           
  5726                           ;Pattern.c: 62:     {;Pattern.c: 63:         head->next = new_stage;
  5727  0290  0835               	movf	AppendStage@head,w
  5728  0291  0086               	movwf	6
  5729  0292  0836               	movf	AppendStage@head+1,w
  5730  0293  0087               	movwf	7
  5731  0294  3146               	addfsr 1,6
  5732  0295  0837               	movf	AppendStage@new_stage,w
  5733  0296  3FC0               	movwi [0]fsr1
  5734  0297  0838               	movf	AppendStage@new_stage+1,w
  5735  0298  3FC1               	movwi [1]fsr1
  5736                           
  5737                           ;Pattern.c: 64:         new_stage->next = head;
  5738  0299  0837               	movf	AppendStage@new_stage,w
  5739  029A  0086               	movwf	6
  5740  029B  0838               	movf	AppendStage@new_stage+1,w
  5741  029C  0087               	movwf	7
  5742  029D  3146               	addfsr 1,6
  5743  029E  0835               	movf	AppendStage@head,w
  5744  029F  3FC0               	movwi [0]fsr1
  5745  02A0  0836               	movf	AppendStage@head+1,w
  5746  02A1  3FC1               	movwi [1]fsr1
  5747                           
  5748                           ;Pattern.c: 65:     }
  5749  02A2  2ADB               	goto	l381
  5750  02A3                     l1871:	
  5751                           
  5752                           ;Pattern.c: 67:     {;Pattern.c: 68:         struct Stage* last_stage = head->next;
  5753  02A3  0835               	movf	AppendStage@head,w
  5754  02A4  0086               	movwf	6
  5755  02A5  0836               	movf	AppendStage@head+1,w
  5756  02A6  0087               	movwf	7
  5757  02A7  3146               	addfsr 1,6
  5758  02A8  3F40               	moviw [0]fsr1
  5759  02A9  00BB               	movwf	AppendStage@last_stage
  5760  02AA  3F41               	moviw [1]fsr1
  5761  02AB  00BC               	movwf	AppendStage@last_stage+1
  5762                           
  5763                           ;Pattern.c: 69:         while( last_stage->next != head )
  5764  02AC  2AB6               	goto	l1875
  5765  02AD                     l1873:	
  5766                           
  5767                           ;Pattern.c: 70:             last_stage = last_stage->next;
  5768  02AD  083B               	movf	AppendStage@last_stage,w
  5769  02AE  0086               	movwf	6
  5770  02AF  083C               	movf	AppendStage@last_stage+1,w
  5771  02B0  0087               	movwf	7
  5772  02B1  3146               	addfsr 1,6
  5773  02B2  3F40               	moviw [0]fsr1
  5774  02B3  00BB               	movwf	AppendStage@last_stage
  5775  02B4  3F41               	moviw [1]fsr1
  5776  02B5  00BC               	movwf	AppendStage@last_stage+1
  5777  02B6                     l1875:	
  5778                           
  5779                           ;Pattern.c: 69:         while( last_stage->next != head )
  5780  02B6  083B               	movf	AppendStage@last_stage,w
  5781  02B7  0086               	movwf	6
  5782  02B8  083C               	movf	AppendStage@last_stage+1,w
  5783  02B9  0087               	movwf	7
  5784  02BA  3146               	addfsr 1,6
  5785  02BB  3F40               	moviw [0]fsr1
  5786  02BC  00B9               	movwf	??_AppendStage
  5787  02BD  3F41               	moviw [1]fsr1
  5788  02BE  00BA               	movwf	??_AppendStage+1
  5789  02BF  0836               	movf	AppendStage@head+1,w
  5790  02C0  063A               	xorwf	??_AppendStage+1,w
  5791  02C1  1D03               	skipz
  5792  02C2  2AC5               	goto	u845
  5793  02C3  0835               	movf	AppendStage@head,w
  5794  02C4  0639               	xorwf	??_AppendStage,w
  5795  02C5                     u845:	
  5796  02C5  1D03               	skipz
  5797  02C6  2AC8               	goto	u841
  5798  02C7  2AC9               	goto	u840
  5799  02C8                     u841:	
  5800  02C8  2AAD               	goto	l1873
  5801  02C9                     u840:	
  5802  02C9                     l1877:	
  5803                           
  5804                           ;Pattern.c: 73:         last_stage->next = new_stage;
  5805  02C9  083B               	movf	AppendStage@last_stage,w
  5806  02CA  0086               	movwf	6
  5807  02CB  083C               	movf	AppendStage@last_stage+1,w
  5808  02CC  0087               	movwf	7
  5809  02CD  3146               	addfsr 1,6
  5810  02CE  0837               	movf	AppendStage@new_stage,w
  5811  02CF  3FC0               	movwi [0]fsr1
  5812  02D0  0838               	movf	AppendStage@new_stage+1,w
  5813  02D1  3FC1               	movwi [1]fsr1
  5814                           
  5815                           ;Pattern.c: 74:         new_stage->next = head;
  5816  02D2  0837               	movf	AppendStage@new_stage,w
  5817  02D3  0086               	movwf	6
  5818  02D4  0838               	movf	AppendStage@new_stage+1,w
  5819  02D5  0087               	movwf	7
  5820  02D6  3146               	addfsr 1,6
  5821  02D7  0835               	movf	AppendStage@head,w
  5822  02D8  3FC0               	movwi [0]fsr1
  5823  02D9  0836               	movf	AppendStage@head+1,w
  5824  02DA  3FC1               	movwi [1]fsr1
  5825  02DB                     l381:	
  5826  02DB  0008               	return
  5827  02DC                     __end_of_AppendStage:	
  5828                           
  5829                           	psect	text18
  5830  0391                     __ptext18:	
  5831 ;; *************** function _PatternCycleInputChanged *****************
  5832 ;; Defined at:
  5833 ;;		line 10 in file "PatternSelector.c"
  5834 ;; Parameters:    Size  Location     Type
  5835 ;;		None
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;  delay_count     2    4[COMMON] unsigned short 
  5838 ;; Return value:  Size  Location     Type
  5839 ;;                  1    wreg      _Bool 
  5840 ;; Registers used:
  5841 ;;		wreg, status,2, status,0
  5842 ;; Tracked objects:
  5843 ;;		On entry : 0/0
  5844 ;;		On exit  : 0/0
  5845 ;;		Unchanged: 0/0
  5846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5848 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5849 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5850 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5851 ;;Total ram usage:        4 bytes
  5852 ;; Hardware stack levels used:    1
  5853 ;; Hardware stack levels required when called:    4
  5854 ;; This function calls:
  5855 ;;		Nothing
  5856 ;; This function is called by:
  5857 ;;		_main
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861                           
  5862                           ;psect for function _PatternCycleInputChanged
  5863  0391                     _PatternCycleInputChanged:	
  5864  0391                     l1685:	
  5865                           ;incstack = 0
  5866                           ; Regs used in _PatternCycleInputChanged: [wreg+status,2+status,0]
  5867                           
  5868                           
  5869                           ;PatternSelector.c: 12:     if ( cur_pc_input_state != last_pc_input_state )
  5870  0391  087B               	movf	_cur_pc_input_state,w
  5871  0392  067A               	xorwf	_last_pc_input_state,w
  5872  0393  1903               	skipnz
  5873  0394  2B96               	goto	u581
  5874  0395  2B97               	goto	u580
  5875  0396                     u581:	
  5876  0396  2BAA               	goto	l1693
  5877  0397                     u580:	
  5878  0397                     l1687:	
  5879                           
  5880                           ;PatternSelector.c: 13:     {;PatternSelector.c: 14:         uint delay_count = 0;
  5881  0397  01F4               	clrf	PatternCycleInputChanged@delay_count
  5882  0398  01F5               	clrf	PatternCycleInputChanged@delay_count+1
  5883                           
  5884                           ;PatternSelector.c: 16:         while ( delay_count++ < 3 )
  5885  0399  2BAC               	goto	l1697
  5886  039A                     l1689:	
  5887                           
  5888                           ;PatternSelector.c: 17:         {;PatternSelector.c: 18:             _delay((unsigned lo
      +                          ng)((10)*(1000000/4000.0)));
  5889  039A  3004               	movlw	4
  5890  039B  00F2               	movwf	??_PatternCycleInputChanged
  5891  039C  303E               	movlw	62
  5892  039D                     u897:	
  5893  039D  0B89               	decfsz	9,f
  5894  039E  2B9D               	goto	u897
  5895  039F  0BF2               	decfsz	??_PatternCycleInputChanged,f
  5896  03A0  2B9D               	goto	u897
  5897  03A1                     l1691:	
  5898                           
  5899                           ;PatternSelector.c: 20:             if( PORTCbits.RC5 != cur_pc_input_state )
  5900  03A1  0020               	movlb	0	; select bank0
  5901  03A2  0E0E               	swapf	14,w	;volatile
  5902  03A3  0C89               	rrf	9,f
  5903  03A4  3901               	andlw	1
  5904  03A5  067B               	xorwf	_cur_pc_input_state,w
  5905  03A6  1903               	skipnz
  5906  03A7  2BA9               	goto	u591
  5907  03A8  2BAA               	goto	u590
  5908  03A9                     u591:	
  5909  03A9  2BAC               	goto	l1697
  5910  03AA                     u590:	
  5911  03AA                     l1693:	
  5912                           
  5913                           ;PatternSelector.c: 21:             {;PatternSelector.c: 22:                 return 0;
  5914  03AA  3000               	movlw	0
  5915  03AB  2BBD               	goto	l303
  5916  03AC                     l1697:	
  5917                           
  5918                           ;PatternSelector.c: 16:         while ( delay_count++ < 3 )
  5919  03AC  0875               	movf	PatternCycleInputChanged@delay_count+1,w
  5920  03AD  00F3               	movwf	??_PatternCycleInputChanged+1
  5921  03AE  0874               	movf	PatternCycleInputChanged@delay_count,w
  5922  03AF  00F2               	movwf	??_PatternCycleInputChanged
  5923  03B0  0AF4               	incf	PatternCycleInputChanged@delay_count,f
  5924  03B1  1903               	skipnz
  5925  03B2  0AF5               	incf	PatternCycleInputChanged@delay_count+1,f
  5926  03B3  3000               	movlw	0
  5927  03B4  0273               	subwf	??_PatternCycleInputChanged+1,w
  5928  03B5  3003               	movlw	3
  5929  03B6  1903               	skipnz
  5930  03B7  0272               	subwf	??_PatternCycleInputChanged,w
  5931  03B8  1C03               	skipc
  5932  03B9  2BBB               	goto	u601
  5933  03BA  2BBC               	goto	u600
  5934  03BB                     u601:	
  5935  03BB  2B9A               	goto	l1689
  5936  03BC                     u600:	
  5937  03BC                     l1703:	
  5938                           
  5939                           ;PatternSelector.c: 29:     return 1;
  5940  03BC  3001               	movlw	1
  5941  03BD                     l303:	
  5942  03BD  0008               	return
  5943  03BE                     __end_of_PatternCycleInputChanged:	
  5944                           
  5945                           	psect	text19
  5946  0219                     __ptext19:	
  5947 ;; *************** function _FlashPattern *****************
  5948 ;; Defined at:
  5949 ;;		line 11 in file "PatternFlasher.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;  pattern         2    6[COMMON] PTR struct Pattern
  5952 ;;		 -> Wigwag(3), 
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;  current_time    2    8[COMMON] unsigned short 
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  1    wreg      void 
  5957 ;; Registers used:
  5958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5965 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5966 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5967 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5968 ;;Total ram usage:        8 bytes
  5969 ;; Hardware stack levels used:    1
  5970 ;; Hardware stack levels required when called:    5
  5971 ;; This function calls:
  5972 ;;		_SetLight
  5973 ;; This function is called by:
  5974 ;;		_main
  5975 ;; This function uses a non-reentrant model
  5976 ;;
  5977                           
  5978                           
  5979                           ;psect for function _FlashPattern
  5980  0219                     _FlashPattern:	
  5981  0219                     l1937:	
  5982                           ;incstack = 0
  5983                           ; Regs used in _FlashPattern: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5984                           
  5985                           
  5986                           ;PatternFlasher.c: 11: void FlashPattern( struct Pattern* pattern );PatternFlasher.c: 12
      +                          : {;PatternFlasher.c: 13:     uint current_time = cur_ms;
  5987  0219  0020               	movlb	0	; select bank0
  5988  021A  084C               	movf	_cur_ms+1,w	;volatile
  5989  021B  00F9               	movwf	FlashPattern@current_time+1
  5990  021C  084B               	movf	_cur_ms,w	;volatile
  5991  021D  00F8               	movwf	FlashPattern@current_time
  5992  021E                     l1939:	
  5993                           
  5994                           ;PatternFlasher.c: 15:     if ( current_time - start_time > current_stage->time_ms )
  5995  021E  0841               	movf	_start_time,w
  5996  021F  0278               	subwf	FlashPattern@current_time,w
  5997  0220  00A0               	movwf	??_FlashPattern
  5998  0221  0842               	movf	_start_time+1,w
  5999  0222  3B79               	subwfb	FlashPattern@current_time+1,w
  6000  0223  00A1               	movwf	??_FlashPattern+1
  6001  0224  0843               	movf	_current_stage,w
  6002  0225  0086               	movwf	6
  6003  0226  0844               	movf	_current_stage+1,w
  6004  0227  0087               	movwf	7
  6005  0228  3144               	addfsr 1,4
  6006  0229  3F40               	moviw [0]fsr1
  6007  022A  00A2               	movwf	??_FlashPattern+2
  6008  022B  3F41               	moviw [1]fsr1
  6009  022C  00A3               	movwf	??_FlashPattern+3
  6010  022D  0821               	movf	??_FlashPattern+1,w
  6011  022E  0223               	subwf	??_FlashPattern+3,w
  6012  022F  1D03               	skipz
  6013  0230  2A33               	goto	u875
  6014  0231  0820               	movf	??_FlashPattern,w
  6015  0232  0222               	subwf	??_FlashPattern+2,w
  6016  0233                     u875:	
  6017  0233  1803               	skipnc
  6018  0234  2A36               	goto	u871
  6019  0235  2A37               	goto	u870
  6020  0236                     u871:	
  6021  0236  2A46               	goto	l1947
  6022  0237                     u870:	
  6023  0237                     l1941:	
  6024                           
  6025                           ;PatternFlasher.c: 16:     {;PatternFlasher.c: 17:         current_stage = current_stage
      +                          ->next;
  6026  0237  0843               	movf	_current_stage,w
  6027  0238  0086               	movwf	6
  6028  0239  0844               	movf	_current_stage+1,w
  6029  023A  0087               	movwf	7
  6030  023B  3146               	addfsr 1,6
  6031  023C  3F40               	moviw [0]fsr1
  6032  023D  00C3               	movwf	_current_stage
  6033  023E  3F41               	moviw [1]fsr1
  6034  023F  00C4               	movwf	_current_stage+1
  6035  0240                     l1943:	
  6036                           
  6037                           ;PatternFlasher.c: 18:         start_time = current_time;
  6038  0240  0879               	movf	FlashPattern@current_time+1,w
  6039  0241  00C2               	movwf	_start_time+1
  6040  0242  0878               	movf	FlashPattern@current_time,w
  6041  0243  00C1               	movwf	_start_time
  6042  0244                     l1945:	
  6043                           
  6044                           ;PatternFlasher.c: 19:         update_stage = 1;
  6045  0244  01CF               	clrf	_update_stage
  6046  0245  0ACF               	incf	_update_stage,f
  6047  0246                     l1947:	
  6048                           
  6049                           ;PatternFlasher.c: 23:     if ( update_stage == 1 )
  6050  0246  034F               	decf	_update_stage,w
  6051  0247  1D03               	btfss	3,2
  6052  0248  2A4A               	goto	u881
  6053  0249  2A4B               	goto	u880
  6054  024A                     u881:	
  6055  024A  2A83               	goto	l431
  6056  024B                     u880:	
  6057  024B                     l1949:	
  6058                           
  6059                           ;PatternFlasher.c: 24:     {;PatternFlasher.c: 25:         SetLight( L1, current_stage->
      +                          light_states[L1] );
  6060  024B  0843               	movf	_current_stage,w
  6061  024C  0086               	movwf	6
  6062  024D  0844               	movf	_current_stage+1,w
  6063  024E  0087               	movwf	7
  6064  024F  0801               	movf	1,w
  6065  0250  00A0               	movwf	??_FlashPattern
  6066  0251  0820               	movf	??_FlashPattern,w
  6067  0252  00F2               	movwf	SetLight@state
  6068  0253  3000               	movlw	0
  6069  0254  3181  21A8  3182   	fcall	_SetLight
  6070                           
  6071                           ;PatternFlasher.c: 26:         SetLight( L2, current_stage->light_states[L2] );
  6072  0257  0020               	movlb	0	; select bank0
  6073  0258  0843               	movf	_current_stage,w
  6074  0259  0086               	movwf	6
  6075  025A  0844               	movf	_current_stage+1,w
  6076  025B  0087               	movwf	7
  6077  025C  3141               	addfsr 1,1
  6078  025D  0801               	movf	1,w
  6079  025E  00A0               	movwf	??_FlashPattern
  6080  025F  0820               	movf	??_FlashPattern,w
  6081  0260  00F2               	movwf	SetLight@state
  6082  0261  3001               	movlw	1
  6083  0262  3181  21A8  3182   	fcall	_SetLight
  6084                           
  6085                           ;PatternFlasher.c: 27:         SetLight( L3, current_stage->light_states[L3] );
  6086  0265  0020               	movlb	0	; select bank0
  6087  0266  0843               	movf	_current_stage,w
  6088  0267  0086               	movwf	6
  6089  0268  0844               	movf	_current_stage+1,w
  6090  0269  0087               	movwf	7
  6091  026A  3142               	addfsr 1,2
  6092  026B  0801               	movf	1,w
  6093  026C  00A0               	movwf	??_FlashPattern
  6094  026D  0820               	movf	??_FlashPattern,w
  6095  026E  00F2               	movwf	SetLight@state
  6096  026F  3002               	movlw	2
  6097  0270  3181  21A8  3182   	fcall	_SetLight
  6098                           
  6099                           ;PatternFlasher.c: 28:         SetLight( L4, current_stage->light_states[L4] );
  6100  0273  0020               	movlb	0	; select bank0
  6101  0274  0843               	movf	_current_stage,w
  6102  0275  0086               	movwf	6
  6103  0276  0844               	movf	_current_stage+1,w
  6104  0277  0087               	movwf	7
  6105  0278  3143               	addfsr 1,3
  6106  0279  0801               	movf	1,w
  6107  027A  00A0               	movwf	??_FlashPattern
  6108  027B  0820               	movf	??_FlashPattern,w
  6109  027C  00F2               	movwf	SetLight@state
  6110  027D  3003               	movlw	3
  6111  027E  3181  21A8  3182   	fcall	_SetLight
  6112  0281                     l1951:	
  6113                           
  6114                           ;PatternFlasher.c: 29:         update_stage = 0;
  6115  0281  0020               	movlb	0	; select bank0
  6116  0282  01CF               	clrf	_update_stage
  6117  0283                     l431:	
  6118  0283  0008               	return
  6119  0284                     __end_of_FlashPattern:	
  6120                           
  6121                           	psect	text20
  6122  01A8                     __ptext20:	
  6123 ;; *************** function _SetLight *****************
  6124 ;; Defined at:
  6125 ;;		line 12 in file "Lights.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;  light           1    wreg     const enum E39
  6128 ;;  state           1    2[COMMON] const _Bool 
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;  light           1    5[COMMON] const enum E39
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  1    wreg      void 
  6133 ;; Registers used:
  6134 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6140 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6141 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6142 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6143 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6144 ;;Total ram usage:        4 bytes
  6145 ;; Hardware stack levels used:    1
  6146 ;; Hardware stack levels required when called:    4
  6147 ;; This function calls:
  6148 ;;		Nothing
  6149 ;; This function is called by:
  6150 ;;		_SetOutputs
  6151 ;;		_FlashPattern
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           
  6155                           
  6156                           ;psect for function _SetLight
  6157  01A8                     _SetLight:	
  6158                           
  6159                           ;incstack = 0
  6160                           ; Regs used in _SetLight: [wreg-fsr0h+status,2+status,0]
  6161                           ;SetLight@light stored from wreg
  6162  01A8  00F5               	movwf	SetLight@light
  6163  01A9                     l1811:	
  6164                           
  6165                           ;Lights.c: 12: void SetLight( const enum Light light, const _Bool state );Lights.c: 13: 
      +                          {;Lights.c: 15:     switch ( light )
  6166  01A9  2A02               	goto	l1833
  6167  01AA                     l1813:	
  6168                           
  6169                           ;Lights.c: 18:             if ( PORTCbits.RC1 != state )
  6170  01AA  0020               	movlb	0	; select bank0
  6171  01AB  0C0E               	rrf	14,w	;volatile
  6172  01AC  3901               	andlw	1
  6173  01AD  0672               	xorwf	SetLight@state,w
  6174  01AE  1903               	skipnz
  6175  01AF  29B1               	goto	u701
  6176  01B0  29B2               	goto	u700
  6177  01B1                     u701:	
  6178  01B1  2A18               	goto	l333
  6179  01B2                     u700:	
  6180  01B2                     l1815:	
  6181  01B2  1003               	clrc
  6182  01B3  0022               	movlb	2	; select bank2
  6183  01B4  1C8E               	btfss	14,1	;volatile
  6184  01B5  1403               	setc
  6185  01B6  1803               	btfsc	3,0
  6186  01B7  29B9               	goto	u711
  6187  01B8  29BC               	goto	u710
  6188  01B9                     u711:	
  6189  01B9  0022               	movlb	2	; select bank2
  6190  01BA  148E               	bsf	14,1	;volatile
  6191  01BB  29BE               	goto	u724
  6192  01BC                     u710:	
  6193  01BC  0022               	movlb	2	; select bank2
  6194  01BD  108E               	bcf	14,1	;volatile
  6195  01BE                     u724:	
  6196  01BE  2A18               	goto	l333
  6197  01BF                     l1817:	
  6198                           
  6199                           ;Lights.c: 22:             if ( PORTCbits.RC2 != state )
  6200  01BF  0020               	movlb	0	; select bank0
  6201  01C0  0C0E               	rrf	14,w	;volatile
  6202  01C1  0C89               	rrf	9,f
  6203  01C2  3901               	andlw	1
  6204  01C3  0672               	xorwf	SetLight@state,w
  6205  01C4  1903               	skipnz
  6206  01C5  29C7               	goto	u731
  6207  01C6  29C8               	goto	u730
  6208  01C7                     u731:	
  6209  01C7  2A18               	goto	l333
  6210  01C8                     u730:	
  6211  01C8                     l1819:	
  6212  01C8  1003               	clrc
  6213  01C9  0022               	movlb	2	; select bank2
  6214  01CA  1D0E               	btfss	14,2	;volatile
  6215  01CB  1403               	setc
  6216  01CC  1803               	btfsc	3,0
  6217  01CD  29CF               	goto	u741
  6218  01CE  29D2               	goto	u740
  6219  01CF                     u741:	
  6220  01CF  0022               	movlb	2	; select bank2
  6221  01D0  150E               	bsf	14,2	;volatile
  6222  01D1  29D4               	goto	u754
  6223  01D2                     u740:	
  6224  01D2  0022               	movlb	2	; select bank2
  6225  01D3  110E               	bcf	14,2	;volatile
  6226  01D4                     u754:	
  6227  01D4  2A18               	goto	l333
  6228  01D5                     l1821:	
  6229                           
  6230                           ;Lights.c: 26:             if ( PORTCbits.RC3 != state )
  6231  01D5  0020               	movlb	0	; select bank0
  6232  01D6  0C0E               	rrf	14,w	;volatile
  6233  01D7  00F3               	movwf	??_SetLight
  6234  01D8  0CF3               	rrf	??_SetLight,f
  6235  01D9  0C73               	rrf	??_SetLight,w
  6236  01DA  3901               	andlw	1
  6237  01DB  0672               	xorwf	SetLight@state,w
  6238  01DC  1903               	skipnz
  6239  01DD  29DF               	goto	u761
  6240  01DE  29E0               	goto	u760
  6241  01DF                     u761:	
  6242  01DF  2A18               	goto	l333
  6243  01E0                     u760:	
  6244  01E0                     l1823:	
  6245  01E0  1003               	clrc
  6246  01E1  0022               	movlb	2	; select bank2
  6247  01E2  1D8E               	btfss	14,3	;volatile
  6248  01E3  1403               	setc
  6249  01E4  1803               	btfsc	3,0
  6250  01E5  29E7               	goto	u771
  6251  01E6  29EA               	goto	u770
  6252  01E7                     u771:	
  6253  01E7  0022               	movlb	2	; select bank2
  6254  01E8  158E               	bsf	14,3	;volatile
  6255  01E9  29EC               	goto	u784
  6256  01EA                     u770:	
  6257  01EA  0022               	movlb	2	; select bank2
  6258  01EB  118E               	bcf	14,3	;volatile
  6259  01EC                     u784:	
  6260  01EC  2A18               	goto	l333
  6261  01ED                     l1825:	
  6262                           
  6263                           ;Lights.c: 31:             if ( PORTCbits.RC4 != state )
  6264  01ED  0020               	movlb	0	; select bank0
  6265  01EE  0E0E               	swapf	14,w	;volatile
  6266  01EF  3901               	andlw	1
  6267  01F0  0672               	xorwf	SetLight@state,w
  6268  01F1  1903               	skipnz
  6269  01F2  29F4               	goto	u791
  6270  01F3  29F5               	goto	u790
  6271  01F4                     u791:	
  6272  01F4  2A18               	goto	l333
  6273  01F5                     u790:	
  6274  01F5                     l1827:	
  6275  01F5  1003               	clrc
  6276  01F6  0022               	movlb	2	; select bank2
  6277  01F7  1E0E               	btfss	14,4	;volatile
  6278  01F8  1403               	setc
  6279  01F9  1803               	btfsc	3,0
  6280  01FA  29FC               	goto	u801
  6281  01FB  29FF               	goto	u800
  6282  01FC                     u801:	
  6283  01FC  0022               	movlb	2	; select bank2
  6284  01FD  160E               	bsf	14,4	;volatile
  6285  01FE  2A01               	goto	u814
  6286  01FF                     u800:	
  6287  01FF  0022               	movlb	2	; select bank2
  6288  0200  120E               	bcf	14,4	;volatile
  6289  0201                     u814:	
  6290  0201  2A18               	goto	l333
  6291  0202                     l1833:	
  6292  0202  0875               	movf	SetLight@light,w
  6293  0203  00F3               	movwf	??_SetLight
  6294  0204  01F4               	clrf	??_SetLight+1
  6295                           
  6296                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6297                           ; Switch size 1, requested type "simple"
  6298                           ; Number of cases is 1, Range of values is 0 to 0
  6299                           ; switch strategies available:
  6300                           ; Name         Instructions Cycles
  6301                           ; simple_byte            4     3 (average)
  6302                           ; direct_byte            8     6 (fixed)
  6303                           ; jumptable            260     6 (fixed)
  6304                           ;	Chosen strategy is simple_byte
  6305  0205  0874               	movf	??_SetLight+1,w
  6306  0206  3A00               	xorlw	0	; case 0
  6307  0207  1903               	skipnz
  6308  0208  2A0A               	goto	l1991
  6309  0209  29ED               	goto	l1825
  6310  020A                     l1991:	
  6311                           
  6312                           ; Switch size 1, requested type "simple"
  6313                           ; Number of cases is 4, Range of values is 0 to 3
  6314                           ; switch strategies available:
  6315                           ; Name         Instructions Cycles
  6316                           ; simple_byte           13     7 (average)
  6317                           ; direct_byte           14     6 (fixed)
  6318                           ; jumptable            260     6 (fixed)
  6319                           ;	Chosen strategy is simple_byte
  6320  020A  0873               	movf	??_SetLight,w
  6321  020B  3A00               	xorlw	0	; case 0
  6322  020C  1903               	skipnz
  6323  020D  29AA               	goto	l1813
  6324  020E  3A01               	xorlw	1	; case 1
  6325  020F  1903               	skipnz
  6326  0210  29BF               	goto	l1817
  6327  0211  3A03               	xorlw	3	; case 2
  6328  0212  1903               	skipnz
  6329  0213  29D5               	goto	l1821
  6330  0214  3A01               	xorlw	1	; case 3
  6331  0215  1903               	skipnz
  6332  0216  29ED               	goto	l1825
  6333  0217  29ED               	goto	l1825
  6334  0218                     l333:	
  6335  0218  0008               	return
  6336  0219                     __end_of_SetLight:	
  6337                           
  6338                           	psect	intentry
  6339  0004                     __pintentry:	
  6340 ;; *************** function _INTERRUPT_InterruptManager *****************
  6341 ;; Defined at:
  6342 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;		None
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;		None
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      void 
  6349 ;; Registers used:
  6350 ;;		wreg, status,2, status,0, pclath, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6360 ;;Total ram usage:        0 bytes
  6361 ;; Hardware stack levels used:    1
  6362 ;; Hardware stack levels required when called:    3
  6363 ;; This function calls:
  6364 ;;		_PIN_MANAGER_IOC
  6365 ;;		_TMR1_ISR
  6366 ;; This function is called by:
  6367 ;;		Interrupt level 1
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371  0004                     _INTERRUPT_InterruptManager:	
  6372                           
  6373                           ;incstack = 0
  6374  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6375                           
  6376                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  6377  0005  3180               	pagesel	$
  6378  0006                     i1l1723:	
  6379                           
  6380                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
  6381  0006  0021               	movlb	1	; select bank1
  6382  0007  1E10               	btfss	16,4	;volatile
  6383  0008  280A               	goto	u63_21
  6384  0009  280B               	goto	u63_20
  6385  000A                     u63_21:	
  6386  000A  2814               	goto	i1l148
  6387  000B                     u63_20:	
  6388  000B                     i1l1725:	
  6389  000B  0020               	movlb	0	; select bank0
  6390  000C  1E10               	btfss	16,4	;volatile
  6391  000D  280F               	goto	u64_21
  6392  000E  2810               	goto	u64_20
  6393  000F                     u64_21:	
  6394  000F  2814               	goto	i1l148
  6395  0010                     u64_20:	
  6396  0010                     i1l1727:	
  6397                           
  6398                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  6399  0010  3184  24D6  3180   	fcall	_PIN_MANAGER_IOC
  6400                           
  6401                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  6402  0013  2826               	goto	i1l154
  6403  0014                     i1l148:	
  6404                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  6405                           
  6406  0014  1F0B               	btfss	11,6	;volatile
  6407  0015  2817               	goto	u65_21
  6408  0016  2818               	goto	u65_20
  6409  0017                     u65_21:	
  6410  0017  2826               	goto	i1l154
  6411  0018                     u65_20:	
  6412  0018                     i1l1729:	
  6413                           
  6414                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  6415  0018  0021               	movlb	1	; select bank1
  6416  0019  1C11               	btfss	17,0	;volatile
  6417  001A  281C               	goto	u66_21
  6418  001B  281D               	goto	u66_20
  6419  001C                     u66_21:	
  6420  001C  2826               	goto	i1l153
  6421  001D                     u66_20:	
  6422  001D                     i1l1731:	
  6423  001D  0020               	movlb	0	; select bank0
  6424  001E  1C11               	btfss	17,0	;volatile
  6425  001F  2821               	goto	u67_21
  6426  0020  2822               	goto	u67_20
  6427  0021                     u67_21:	
  6428  0021  2826               	goto	i1l153
  6429  0022                     u67_20:	
  6430  0022                     i1l1733:	
  6431                           
  6432                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_ISR();
  6433  0022  3184  2467  3180   	fcall	_TMR1_ISR
  6434                           
  6435                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  6436  0025  2826               	goto	i1l154
  6437  0026                     i1l153:	
  6438                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  6439                           
  6440  0026                     i1l154:	
  6441  0026  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6442  0027  0009               	retfie
  6443  0028                     __end_of_INTERRUPT_InterruptManager:	
  6444                           
  6445                           	psect	text22
  6446  0467                     __ptext22:	
  6447 ;; *************** function _TMR1_ISR *****************
  6448 ;; Defined at:
  6449 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;		None
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;		None
  6454 ;; Return value:  Size  Location     Type
  6455 ;;                  1    wreg      void 
  6456 ;; Registers used:
  6457 ;;		wreg, status,2, status,0, pclath, cstack
  6458 ;; Tracked objects:
  6459 ;;		On entry : 0/0
  6460 ;;		On exit  : 0/0
  6461 ;;		Unchanged: 0/0
  6462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6467 ;;Total ram usage:        0 bytes
  6468 ;; Hardware stack levels used:    1
  6469 ;; Hardware stack levels required when called:    1
  6470 ;; This function calls:
  6471 ;;		Absolute function
  6472 ;;		_TMR1_DefaultInterruptHandler
  6473 ;;		_TMR1_WriteTimer
  6474 ;; This function is called by:
  6475 ;;		_INTERRUPT_InterruptManager
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479                           
  6480                           ;psect for function _TMR1_ISR
  6481  0467                     _TMR1_ISR:	
  6482  0467                     i1l1663:	
  6483                           ;incstack = 0
  6484                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  6485                           
  6486                           
  6487                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  6488  0467  0020               	movlb	0	; select bank0
  6489  0468  1011               	bcf	17,0	;volatile
  6490  0469                     i1l1665:	
  6491                           
  6492                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  6493  0469  0857               	movf	_timer1ReloadVal+1,w	;volatile
  6494  046A  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  6495  046B  0856               	movf	_timer1ReloadVal,w	;volatile
  6496  046C  00F0               	movwf	TMR1_WriteTimer@timerVal
  6497  046D  3184  2491  3184   	fcall	_TMR1_WriteTimer
  6498  0470                     i1l1667:	
  6499                           
  6500                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
  6501  0470  0020               	movlb	0	; select bank0
  6502  0471  0854               	movf	_TMR1_InterruptHandler,w
  6503  0472  0455               	iorwf	_TMR1_InterruptHandler+1,w
  6504  0473  1903               	btfsc	3,2
  6505  0474  2C76               	goto	u57_21
  6506  0475  2C77               	goto	u57_20
  6507  0476                     u57_21:	
  6508  0476  2C7C               	goto	i1l214
  6509  0477                     u57_20:	
  6510  0477                     i1l1669:	
  6511                           
  6512                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
  6513  0477  0855               	movf	_TMR1_InterruptHandler+1,w
  6514  0478  008A               	movwf	10
  6515  0479  0854               	movf	_TMR1_InterruptHandler,w
  6516  047A  000A               	callw
  6517  047B  3184               	pagesel	$
  6518  047C                     i1l214:	
  6519  047C  0008               	return
  6520  047D                     __end_of_TMR1_ISR:	
  6521                           
  6522                           	psect	text23
  6523  0491                     __ptext23:	
  6524 ;; *************** function _TMR1_WriteTimer *****************
  6525 ;; Defined at:
  6526 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  timerVal        2    0[COMMON] unsigned short 
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;		None
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  1    wreg      void 
  6533 ;; Registers used:
  6534 ;;		wreg, status,2
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6543 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6544 ;;Total ram usage:        2 bytes
  6545 ;; Hardware stack levels used:    1
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_TMR1_ISR
  6550 ;;		_TMR1_Reload
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           
  6555                           ;psect for function _TMR1_WriteTimer
  6556  0491                     _TMR1_WriteTimer:	
  6557  0491                     i1l1599:	
  6558                           ;incstack = 0
  6559                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  6560                           
  6561                           
  6562                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.T1SYNC == 1)
  6563  0491  0020               	movlb	0	; select bank0
  6564  0492  1D1B               	btfss	27,2	;volatile
  6565  0493  2C95               	goto	u53_21
  6566  0494  2C96               	goto	u53_20
  6567  0495                     u53_21:	
  6568  0495  2C9D               	goto	i1l1609
  6569  0496                     u53_20:	
  6570  0496                     i1l1601:	
  6571                           
  6572                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  6573  0496  101B               	bcf	27,0	;volatile
  6574  0497                     i1l1603:	
  6575                           
  6576                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  6577  0497  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  6578  0498  009A               	movwf	26	;volatile
  6579  0499                     i1l1605:	
  6580                           
  6581                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  6582  0499  0870               	movf	TMR1_WriteTimer@timerVal,w
  6583  049A  0099               	movwf	25	;volatile
  6584  049B                     i1l1607:	
  6585                           
  6586                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  6587  049B  141B               	bsf	27,0	;volatile
  6588                           
  6589                           ;mcc_generated_files/tmr1.c: 133:     }
  6590  049C  2CA1               	goto	i1l201
  6591  049D                     i1l1609:	
  6592                           
  6593                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  6594  049D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  6595  049E  009A               	movwf	26	;volatile
  6596  049F                     i1l1611:	
  6597                           
  6598                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  6599  049F  0870               	movf	TMR1_WriteTimer@timerVal,w
  6600  04A0  0099               	movwf	25	;volatile
  6601  04A1                     i1l201:	
  6602  04A1  0008               	return
  6603  04A2                     __end_of_TMR1_WriteTimer:	
  6604                           
  6605                           	psect	text24
  6606  04F3                     __ptext24:	
  6607 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  6608 ;; Defined at:
  6609 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  6610 ;; Parameters:    Size  Location     Type
  6611 ;;		None
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;		None
  6614 ;; Return value:  Size  Location     Type
  6615 ;;                  1    wreg      void 
  6616 ;; Registers used:
  6617 ;;		wreg
  6618 ;; Tracked objects:
  6619 ;;		On entry : 0/0
  6620 ;;		On exit  : 0/0
  6621 ;;		Unchanged: 0/0
  6622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6627 ;;Total ram usage:        0 bytes
  6628 ;; Hardware stack levels used:    1
  6629 ;; This function calls:
  6630 ;;		Nothing
  6631 ;; This function is called by:
  6632 ;;		_TMR1_Initialize
  6633 ;;		_TMR1_ISR
  6634 ;; This function uses a non-reentrant model
  6635 ;;
  6636                           
  6637                           
  6638                           ;psect for function _TMR1_DefaultInterruptHandler
  6639  04F3                     _TMR1_DefaultInterruptHandler:	
  6640  04F3                     i1l1613:	
  6641                           ;incstack = 0
  6642                           ; Regs used in _TMR1_DefaultInterruptHandler: [wreg]
  6643                           
  6644                           
  6645                           ;mcc_generated_files/tmr1.c: 177:     cur_ms++;
  6646  04F3  3001               	movlw	1
  6647  04F4  0020               	movlb	0	; select bank0
  6648  04F5  07CB               	addwf	_cur_ms,f	;volatile
  6649  04F6  3000               	movlw	0
  6650  04F7  3DCC               	addwfc	_cur_ms+1,f	;volatile
  6651  04F8                     i1l220:	
  6652  04F8  0008               	return
  6653  04F9                     __end_of_TMR1_DefaultInterruptHandler:	
  6654                           
  6655                           	psect	text25
  6656  04D6                     __ptext25:	
  6657 ;; *************** function _PIN_MANAGER_IOC *****************
  6658 ;; Defined at:
  6659 ;;		line 122 in file "mcc_generated_files/pin_manager.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;		None
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;		None
  6664 ;; Return value:  Size  Location     Type
  6665 ;;                  1    wreg      void 
  6666 ;; Registers used:
  6667 ;;		wreg, status,2, status,0, pclath, cstack
  6668 ;; Tracked objects:
  6669 ;;		On entry : 0/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6677 ;;Total ram usage:        0 bytes
  6678 ;; Hardware stack levels used:    1
  6679 ;; Hardware stack levels required when called:    2
  6680 ;; This function calls:
  6681 ;;		_IOCCF0_ISR
  6682 ;; This function is called by:
  6683 ;;		_INTERRUPT_InterruptManager
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           
  6688                           ;psect for function _PIN_MANAGER_IOC
  6689  04D6                     _PIN_MANAGER_IOC:	
  6690  04D6                     i1l1659:	
  6691                           ;incstack = 0
  6692                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  6693                           
  6694                           
  6695                           ;mcc_generated_files/pin_manager.c: 125:     if(IOCCFbits.IOCCF0 == 1)
  6696  04D6  0027               	movlb	7	; select bank7
  6697  04D7  1C19               	btfss	25,0	;volatile
  6698  04D8  2CDA               	goto	u56_21
  6699  04D9  2CDB               	goto	u56_20
  6700  04DA                     u56_21:	
  6701  04DA  2CDE               	goto	i1l109
  6702  04DB                     u56_20:	
  6703  04DB                     i1l1661:	
  6704                           
  6705                           ;mcc_generated_files/pin_manager.c: 126:     {;mcc_generated_files/pin_manager.c: 127:  
      +                                 IOCCF0_ISR();
  6706  04DB  3184  24B2  3184   	fcall	_IOCCF0_ISR
  6707  04DE                     i1l109:	
  6708  04DE  0008               	return
  6709  04DF                     __end_of_PIN_MANAGER_IOC:	
  6710                           
  6711                           	psect	text26
  6712  04B2                     __ptext26:	
  6713 ;; *************** function _IOCCF0_ISR *****************
  6714 ;; Defined at:
  6715 ;;		line 134 in file "mcc_generated_files/pin_manager.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;		None
  6718 ;; Auto vars:     Size  Location     Type
  6719 ;;		None
  6720 ;; Return value:  Size  Location     Type
  6721 ;;                  1    wreg      void 
  6722 ;; Registers used:
  6723 ;;		wreg, status,2, status,0, pclath, cstack
  6724 ;; Tracked objects:
  6725 ;;		On entry : 0/0
  6726 ;;		On exit  : 0/0
  6727 ;;		Unchanged: 0/0
  6728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6733 ;;Total ram usage:        0 bytes
  6734 ;; Hardware stack levels used:    1
  6735 ;; Hardware stack levels required when called:    1
  6736 ;; This function calls:
  6737 ;;		Absolute function
  6738 ;;		_IOCCF0_DefaultInterruptHandler
  6739 ;; This function is called by:
  6740 ;;		_PIN_MANAGER_IOC
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           
  6745                           ;psect for function _IOCCF0_ISR
  6746  04B2                     _IOCCF0_ISR:	
  6747  04B2                     i1l1591:	
  6748                           ;incstack = 0
  6749                           ; Regs used in _IOCCF0_ISR: [wreg+status,2+status,0+pclath+cstack]
  6750                           
  6751                           
  6752                           ;mcc_generated_files/pin_manager.c: 139:     if(IOCCF0_InterruptHandler)
  6753  04B2  0020               	movlb	0	; select bank0
  6754  04B3  0858               	movf	_IOCCF0_InterruptHandler,w
  6755  04B4  0459               	iorwf	_IOCCF0_InterruptHandler+1,w
  6756  04B5  1903               	btfsc	3,2
  6757  04B6  2CB8               	goto	u52_21
  6758  04B7  2CB9               	goto	u52_20
  6759  04B8                     u52_21:	
  6760  04B8  2CBE               	goto	i1l1595
  6761  04B9                     u52_20:	
  6762  04B9                     i1l1593:	
  6763                           
  6764                           ;mcc_generated_files/pin_manager.c: 140:     {;mcc_generated_files/pin_manager.c: 141:  
      +                                 IOCCF0_InterruptHandler();
  6765  04B9  0859               	movf	_IOCCF0_InterruptHandler+1,w
  6766  04BA  008A               	movwf	10
  6767  04BB  0858               	movf	_IOCCF0_InterruptHandler,w
  6768  04BC  000A               	callw
  6769  04BD  3184               	pagesel	$
  6770  04BE                     i1l1595:	
  6771                           
  6772                           ;mcc_generated_files/pin_manager.c: 143:     IOCCFbits.IOCCF0 = 0;
  6773  04BE  0027               	movlb	7	; select bank7
  6774  04BF  1019               	bcf	25,0	;volatile
  6775  04C0                     i1l113:	
  6776  04C0  0008               	return
  6777  04C1                     __end_of_IOCCF0_ISR:	
  6778                           
  6779                           	psect	text27
  6780  0508                     __ptext27:	
  6781 ;; *************** function _IOCCF0_DefaultInterruptHandler *****************
  6782 ;; Defined at:
  6783 ;;		line 156 in file "mcc_generated_files/pin_manager.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;		None
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;		None
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  1    wreg      void 
  6790 ;; Registers used:
  6791 ;;		None
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6801 ;;Total ram usage:        0 bytes
  6802 ;; Hardware stack levels used:    1
  6803 ;; This function calls:
  6804 ;;		Nothing
  6805 ;; This function is called by:
  6806 ;;		_PIN_MANAGER_Initialize
  6807 ;;		_IOCCF0_ISR
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811                           
  6812                           ;psect for function _IOCCF0_DefaultInterruptHandler
  6813  0508                     _IOCCF0_DefaultInterruptHandler:	
  6814  0508                     i1l119:	
  6815                           ;incstack = 0
  6816                           ; Regs used in _IOCCF0_DefaultInterruptHandler: []
  6817                           
  6818  0508  0008               	return
  6819  0509                     __end_of_IOCCF0_DefaultInterruptHandler:	
  6820  007E                     btemp	set	126	;btemp
  6821  007E                     int$flags	set	126
  6822  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         25
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     33      62
    BANK1            80     20      28
    BANK2            80      0       0
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    GetStage@head.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    Wigwag.first_stage.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    stage_stash.next.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    stage_stash.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    ?_GetStage.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    ?_CopyStageData.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    ?_CopyStage.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    ?_ConstructStage.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    ?_NewStage.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    FlashPattern@pattern	PTR struct Pattern size(2) Largest target is 3
		 -> Wigwag(BANK0[3]), 

    InitWigwagPattern@head.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    InitWigwagPattern@head	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    InitWigwagPattern@pattern.first_stage.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    InitWigwagPattern@off.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    InitWigwagPattern@off	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    InitWigwagPattern@right_side_on.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    InitWigwagPattern@right_side_on	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    InitWigwagPattern@left_side_on.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    InitWigwagPattern@left_side_on	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    InitWigwagPattern@pattern.first_stage	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    InitWigwagPattern@pattern	PTR struct Pattern size(2) Largest target is 3
		 -> Wigwag(BANK0[3]), 

    sp__GetStage.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    sp__GetStage	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    GetStage@get_stage.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    AppendStage@last_stage.next.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    AppendStage@last_stage.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    AppendStage@last_stage	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    AppendStage@new_stage.next.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    AppendStage@new_stage.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    AppendStage@head.next.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    AppendStage@new_stage	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    AppendStage@head.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    AppendStage@head	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    sp__CopyStageData.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    CopyStageData@source.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    CopyStageData@dest.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    CopyStageData@source	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    CopyStageData@dest	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    sp__CopyStage.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    sp__CopyStage	PTR struct Stage size(1) Largest target is 0

    CopyStage@dest.next.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    CopyStage@source.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    CopyStage@dest.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    sp__CopyStageData	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    sp__ConstructStage.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    sp__ConstructStage	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    ConstructStage@new_stage.next.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    ConstructStage@next	PTR struct Stage size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    ConstructStage@states	PTR const _Bool  size(1) Largest target is 4
		 -> InitWigwagPattern@right_side_states(BANK1[4]), InitWigwagPattern@left_side_states(BANK1[4]), 

    ConstructStage@new_stage.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    ConstructStage@new_stage	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    sp__NewStage.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    NewStage@new_stage.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    NewStage@new_stage	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), 

    sp__NewStage	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    AssignLightStates@stage.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    AssignLightStates@states	PTR const _Bool  size(1) Largest target is 4
		 -> InitWigwagPattern@right_side_states(BANK1[4]), InitWigwagPattern@left_side_states(BANK1[4]), NewStage@init_states(BANK0[4]), 

    AssignLightStates@stage	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    S444Stage$next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    current_stage.next	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    current_stage	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    S453Pattern$first_stage	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    Wigwag.first_stage	PTR struct Stage size(2) Largest target is 768
		 -> stage_stash(BIGRAM[768]), NULL(NULL[0]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    IOCCF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF0_DefaultInterruptHandler(), 

    IOCCF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCCF0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_FlashPattern
    _SetOutputs->_SetLight
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF0_SetInterruptHandler
    _InitWigwagPattern->_ConstructStage
    _ConstructStage->_AssignLightStates
    _NewStage->_AssignLightStates
    _FlashPattern->_SetLight

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _setup->_InitWigwagPattern
    _InitWigwagPattern->_AppendStage
    _CopyStageData->_NewStage
    _ConstructStage->_NewStage
    _NewStage->_AssignLightStates
    _AppendStage->_CopyStageData

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _setup->_InitWigwagPattern

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    8352
                                             32 BANK0      1     1      0
                       _FlashPattern
           _PatternCycleInputChanged
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    7299
                  _InitWigwagPattern
                  _SYSTEM_Initialize
                         _SetOutputs
                    _TMR1_Initialize
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SetOutputs                                           2     2      0     999
                                              6 COMMON     2     2      0
                           _SetLight
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     196
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0      98
         _IOCCF0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _IOCCF0_SetInterruptHandler                           2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitWigwagPattern                                   23    21      2    6006
                                             29 BANK0      3     1      2
                                              0 BANK1     20    20      0
                        _AppendStage
                     _ConstructStage
                      _CopyStageData
                           _NewStage
 ---------------------------------------------------------------------------------
 (3) _CopyStageData                                        9     5      4    1365
                                             12 BANK0      9     5      4
                           _NewStage (ARG)
 ---------------------------------------------------------------------------------
 (3) _ConstructStage                                       7     4      3    1920
                                              9 COMMON     1     1      0
                                             12 BANK0      6     3      3
                  _AssignLightStates
                           _NewStage
 ---------------------------------------------------------------------------------
 (3) _NewStage                                            10    10      0     716
                                              2 BANK0     10    10      0
                  _AssignLightStates
 ---------------------------------------------------------------------------------
 (4) _AssignLightStates                                    9     6      3     552
                                              2 COMMON     7     4      3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _AppendStage                                          8     4      4    1309
                                             21 BANK0      8     4      4
                      _CopyStageData (ARG)
                           _NewStage (ARG)
 ---------------------------------------------------------------------------------
 (1) _PatternCycleInputChanged                             4     4      0      23
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _FlashPattern                                         8     6      2    1030
                                              6 COMMON     4     2      2
                                              0 BANK0      4     4      0
                           _SetLight
 ---------------------------------------------------------------------------------
 (3) _SetLight                                             4     3      1     875
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     240
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCCF0_ISR
 ---------------------------------------------------------------------------------
 (8) _IOCCF0_ISR                                           0     0      0       0
                   Absolute function *
     _IOCCF0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _IOCCF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FlashPattern
     _SetLight
   _PatternCycleInputChanged
   _setup
     _InitWigwagPattern
       _AppendStage
         _CopyStageData (ARG)
           _NewStage (ARG)
             _AssignLightStates
         _NewStage (ARG)
           _AssignLightStates
       _ConstructStage
         _AssignLightStates
         _NewStage
           _AssignLightStates
       _CopyStageData
         _NewStage (ARG)
           _AssignLightStates
       _NewStage
         _AssignLightStates
     _SYSTEM_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
         _IOCCF0_SetInterruptHandler
       _PMD_Initialize
       _TMR1_Initialize
         _TMR1_SetInterruptHandler
       _WDT_Initialize
     _SetOutputs
       _SetLight
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR1_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF0_ISR
       Absolute function(Fake) *
       _IOCCF0_DefaultInterruptHandler *
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      3E       5       77.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     14      1C       7       35.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      66      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      66      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu May 07 11:13:29 2020

                              _update_stage 004F                                 __CFG_CP$OFF 0000  
                                        l50 04D5                                          l53 0504  
                                        l47 04B1                                          l56 04E6  
                        ConstructStage@next 002E                                 __CFG_LVP$ON 0000  
                                       l105 03E8                                         l116 04F2  
                                       l303 03BD                                         l217 04EC  
                                       l333 0218                                         l190 0507  
                                       l431 0283                                         l360 032A  
                                       l336 042F                                         l187 0490  
                                       l267 044C                                         l356 040D  
                                       l381 02DB                                         l365 0390  
                                       l373 0363                                         l398 01A7  
                                       u600 03BC                                         u601 03BB  
                              __CFG_CPD$OFF 0000                                         u700 01B2  
                                       u701 01B1                                         u710 01BC  
                                       u711 01B9                                         u800 01FF  
                                       u801 01FC                                         u730 01C8  
                                       u731 01C7                                         u740 01D2  
                                       u724 01BE                                         u580 0397  
                                       u820 0354                                         u741 01CF  
                                       u581 0396                                         u821 0353  
                                       u814 0201                                         u590 03AA  
                                       u830 0290                                         u591 03A9  
                                       u831 028F                                         u760 01E0  
                                       u840 02C9                                         u680 040D  
                                       u761 01DF                                         u841 02C8  
                                       u681 040C                                         u825 0350  
                                       u770 01EA                                         u754 01D4  
                                       u690 02E6                                         u850 0127  
                                       u771 01E7                                         u691 02E5  
                                       u851 0126                                         u860 01A7  
                                       u845 02C5                                         u861 01A6  
                                       u790 01F5                                         u870 0237  
                                       u791 01F4                                         u871 0236  
                                       u855 0123                                         u784 01EC  
                                       u880 024B                                         u881 024A  
                                       u865 01A3                                         u875 0233  
                                       u897 039D                             _timer1ReloadVal 0056  
                   __size_of_PMD_Initialize 0008                                         wreg 0009  
        __end_of_IOCCF0_SetInterruptHandler 04F3                  _IOCCF0_SetInterruptHandler 04ED  
                                      l1501 047D                                        l1431 04ED  
                                      l1511 0489                                        l1503 047F  
                                      l1433 04E7                                        l1505 0481  
                                      l1507 0482                                        l1461 03C0  
                                      l1509 0487                                        l1703 03BC  
                                      l1471 03CD                                        l1463 03C2  
                                      l1801 0309                                        l1481 03DC  
                                      l1473 03D2                                        l1465 03C5  
                                      l1457 04DF                                        l1811 01A9  
                                      l1803 0314                                        l1491 04CD  
                                      l1483 03DD                                        l1475 03D5  
                                      l1467 03C7                                        l1459 03BE  
                                      l1821 01D5                                        l1813 01AA  
                                      l1805 031E                                        l1493 04D0  
                                      l1485 03DE                                        l1477 03D7  
                                      l1469 03CB                                        l1581 04A2  
                                      l1823 01E0                                        l1815 01B2  
                                      l1807 0326                                        l1911 014A  
                                      l1903 00CD                                        l1495 04D1  
                                      l1487 03DF                                        l1479 03DA  
                                      l1583 04A5                                        l1825 01ED  
                                      l1817 01BF                                        l1833 0202  
                                      l1841 0379                                        l1921 0198  
                                      l1905 0113                                        l1497 04D4  
                                      l1489 03E6                                        l1585 04A8  
                                      l1827 01F5                                        l1819 01C8  
                                      l1691 03A1                                        l1843 0383  
                                      l1907 0118                                        l1499 0501  
                                      l1587 04AB                                        l1931 043B  
                                      l1923 0430                                        l1941 0237  
                                      l1693 03AA                                        l1685 0391  
                                      l1845 038C                                        l1861 0354  
                                      l1917 014D                                        l1909 0127  
                                      l1589 04AE                                        l1597 0505  
                                      l1933 043F                                        l1925 0433  
                                      l1951 0281                                        l1943 0240  
                                      l1687 0397                                        l1871 02A3  
                                      l1783 03EC                                        l1791 02E6  
                                      l1839 0366                                        l1863 0363  
                                      l1855 032E                                        l1919 0193  
                                      l1935 0447                                        l1927 0434  
                                      l1945 0244                                        l1937 0219  
                                      l1689 039A                                        l1697 03AC  
                                      l1873 02AD                                        l1785 0400  
                                      l1777 03E9                                        l1857 0343  
                                      l1849 032B                                        l1881 006B  
                                      l1929 0438                                        l1953 044D  
                                      l1947 0246                                        l1939 021E  
                                      l1875 02B6                                        l1867 0284  
                                      l1787 0404                                        l1795 02E9  
                                      l1859 0347                                        l1891 00AC  
                                      l1883 0071                                        l1963 0458  
                                      l1955 0450                                        l1949 024B  
                                      l1877 02C9                                        l1869 0290  
                                      l1797 02FD                                        l1789 02DC  
                                      l1893 00B4                                        l1885 0080  
                                      l1965 045D                                        l1957 0455  
                                      l1991 020A                                        l1799 0301  
                                      l1895 00C1                                        l1887 0092  
                                      l1879 040F                                        l1897 00CB  
                                      l1889 009A                             ?_ConstructStage 002C  
                                      _LATA 010C                                        _LATC 010E  
                                      _PMD0 0911                                        _PMD1 0912  
                                      _PMD2 0913                                        _PMD3 0914  
                                      _PMD4 0915                                        _PMD5 0916  
                                      _WPUA 020C                                        _WPUC 020E  
                              __CFG_WRT$OFF 0000                               SetLight@light 0075  
                             __CFG_FCMEN$ON 0000                        ConstructStage@states 002F  
                             SetLight@state 0072                                        _main 044D  
                       __end_of_AppendStage 02DC                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        indf1 0001  
                                      fsr1l 0006                                        btemp 007E  
                             __CFG_BOREN$ON 0000                               __CFG_BORV$LOW 0000  
                                      start 0028                  ??_TMR1_SetInterruptHandler 0074  
                             __CFG_CSWEN$ON 0000                               __CFG_MCLRE$ON 0000  
                            CopyStageData@i 0033                             ??_CopyStageData 0030  
            __size_of_OSCILLATOR_Initialize 0009               __end_of_OSCILLATOR_Initialize 04D6  
                       __size_of_IOCCF0_ISR 000F                                       ?_main 0070  
                             __CFG_WDTE$OFF 0000                             _TMR1_StartTimer 0505  
                            __CFG_DEBUG$OFF 0000                                       i1l113 04C0  
                                     i1l201 04A1                                       i1l220 04F8  
                                     i1l109 04DE                                       i1l214 047C  
                                     i1l119 0508                                       i1l153 0026  
                                     i1l154 0026                                       i1l148 0014  
                                     _OSCEN 091D                                       _TMR1H 001A  
                                     _TMR1L 0019                                       u52_20 04B9  
                                     u52_21 04B8                                       u53_20 0496  
                                     u53_21 0495                                       u63_20 000B  
                                     u63_21 000A                                       u56_20 04DB  
                                     u64_20 0010                                       u56_21 04DA  
                                     u64_21 000F                                       u57_20 0477  
                                     u65_20 0018                                       u57_21 0476  
                                     u65_21 0017                                       _TRISA 008C  
                                     _TRISC 008E                                       u66_20 001D  
                                     u66_21 001C                                       u67_20 0022  
                                     u67_21 0021                       ConstructStage@time_ms 002C  
                          __end_of_TMR1_ISR 047D                     __end_of_PIN_MANAGER_IOC 04DF  
                            _WDT_Initialize 0501                                       _setup 0430  
                   __end_of_TMR1_Initialize 0491                                       pclath 000A  
                      __end_of_FlashPattern 0284                                       status 0003  
                                     wtemp0 007E                    FlashPattern@current_time 0078  
                  _PatternCycleInputChanged 0391                             _TMR1_WriteTimer 0491  
                           __initialization 002A                         NewStage@init_states 0026  
                              __end_of_main 0467                 ?_INTERRUPT_InterruptManager 0070  
                          __end_of_NewStage 032B                                      ??_main 0040  
                          __end_of_SetLight 0219                      __end_of_WDT_Initialize 0505  
                        _cur_pc_input_state 007B                                 _AppendStage 0284  
                                    ?_setup 0070                                      _ANSELA 018C  
                                    _ANSELC 018E                          __CFG_RSTOSC$HFINT1 0000  
                                    _T1GCON 001C                     TMR1_WriteTimer@timerVal 0070  
                                    i1l1601 0496                                      _ODCONA 028C  
                                    i1l1611 049F                                      i1l1603 0497  
                                    _ODCONC 028E                                      i1l1613 04F3  
                                    i1l1605 0499                                      i1l1607 049B  
                                    i1l1609 049D                                      i1l1731 001D  
                                    i1l1723 0006                                      i1l1661 04DB  
                                    i1l1733 0022                                      i1l1725 000B  
                                    i1l1591 04B2                                      i1l1663 0467  
                                    i1l1727 0010                                      i1l1593 04B9  
                                    i1l1665 0469                                      i1l1729 0018  
                                    i1l1595 04BE                                      i1l1659 04D6  
                                    i1l1667 0470                                      i1l1669 0477  
                                    i1l1599 0491                                      _INLVLA 038C  
                                    _INLVLC 038E                                      _OSCFRQ 091F  
                                    _WDTCON 0097                                  _SetOutputs 040E  
                            __CFG_PWRTE$OFF 0000        __end_of_TMR1_DefaultInterruptHandler 04F9  
     __size_of_TMR1_DefaultInterruptHandler 0006                _TMR1_DefaultInterruptHandler 04F3  
                           SetOutputs@state 0077                                      _Wigwag 0051  
                   __end_of_TMR1_StartTimer 0508                              __CFG_STVREN$ON 0000  
         InitWigwagPattern@left_side_states 00A0                                      _cur_ms 004B  
                       CopyStageData@source 002E                              _PMD_Initialize 04DF  
                           ?_WDT_Initialize 0070    TMR1_SetInterruptHandler@InterruptHandler 0072  
IOCCF0_SetInterruptHandler@InterruptHandler 0072                            ?_PIN_MANAGER_IOC 0070  
                   __end_of_TMR1_WriteTimer 04A2                                ??_IOCCF0_ISR 0070  
                          ?_TMR1_Initialize 0070                      AssignLightStates@stage 0072  
                         _SYSTEM_Initialize 04A2                     __end_of__initialization 0067  
                        ?_SYSTEM_Initialize 0070                              __pcstackCOMMON 0070  
        InitWigwagPattern@right_side_states 00A4                                __pidataBANK0 04F9  
                              __pidataBANK1 04FD                         ??_SYSTEM_Initialize 0074  
                                 ?_TMR1_ISR 0070               ?_TMR1_DefaultInterruptHandler 0070  
                             __end_of_setup 044D                      __end_of_PMD_Initialize 04E7  
                        __end_of_IOCCF0_ISR 04C1                           NewStage@new_stage 002A  
                          ??_ConstructStage 0079                 ?_IOCCF0_SetInterruptHandler 0072  
                     __size_of_FlashPattern 006B                   __end_of_SYSTEM_Initialize 04B2  
                                   ??_setup 007A                                NewStage@F411 00B4  
                                __pbssBANK0 0041                                  __pbssBANK1 00B4  
                             _current_stage 0043                                   ?_NewStage 0077  
                               ?_SetOutputs 0070                                   ?_SetLight 0072  
                        AssignLightStates@i 0020                        AppendStage@new_stage 0037  
                                __pmaintext 044D                            ?_TMR1_StartTimer 0070  
                                ??_TMR1_ISR 0072                             __CFG_PPS1WAY$ON 0000  
                                __pintentry 0004            ??_IOCCF0_DefaultInterruptHandler 0070  
           ?_IOCCF0_DefaultInterruptHandler 0070                             ?_PMD_Initialize 0070  
                        InitWigwagPattern@i 00AC                                _FlashPattern 0219  
                                   _OSCCON1 0919                                     _OSCCON3 091B  
                                   _OSCTUNE 091E                  ??_PatternCycleInputChanged 0072  
                                   _SLRCONA 030C                                     _SLRCONC 030E  
                          ?_TMR1_WriteTimer 0070                     ConstructStage@new_stage 0030  
                                ??_NewStage 0022                                  ??_SetLight 0073  
       PatternCycleInputChanged@delay_count 0074                       __end_of_CopyStageData 0364  
                      InitWigwagPattern@off 00B0                                     __ptext1 0430  
                                   __ptext2 0505                                     __ptext3 040E  
                                   __ptext4 04A2                                     __ptext5 0501  
                                   __ptext6 047D                                     __ptext7 04E7  
                                   __ptext8 04DF                                     __ptext9 03BE  
            ??_TMR1_DefaultInterruptHandler 0070                                   _T1CONbits 001B  
                                   _cur_sec 0047                       _OSCILLATOR_Initialize 04CD  
                       __size_of_SetOutputs 0022           __size_of_TMR1_SetInterruptHandler 0006  
                  ??_PIN_MANAGER_Initialize 0074                   ?_TMR1_SetInterruptHandler 0072  
                                 _IOCCFbits 0399                                     _temp_ms 004D  
                                 _IOCCNbits 0398                                   _IOCCPbits 0397  
                              ?_AppendStage 0035                  __size_of_SYSTEM_Initialize 0010  
                                   clrloop0 04C2                        end_of_initialization 0067  
                       _last_pc_input_state 007A                            ??_WDT_Initialize 0072  
                                 _PORTCbits 000E                     AssignLightStates@states 0074  
                          __CFG_FEXTOSC$OFF 0000                                  _start_time 0041  
                                _ts_trigger 0050                           __size_of_TMR1_ISR 0016  
                         CopyStageData@dest 002C                      ?_OSCILLATOR_Initialize 0070  
                       start_initialization 002A             __size_of_PIN_MANAGER_Initialize 002B  
                           AppendStage@head 0035                                ??_SetOutputs 0076  
                  __size_of_PIN_MANAGER_IOC 0009                    InitWigwagPattern@pattern 003D  
                         __size_of_NewStage 004F                            __CFG_LPBOREN$OFF 0000  
                  __size_of_TMR1_Initialize 0014                           __size_of_SetLight 0071  
                          ??_PMD_Initialize 0072                                 __pdataBANK0 005A  
                               __pdataBANK1 00B8                                 __pbssBIGRAM 20F0  
                               __pbssCOMMON 007A                       AppendStage@last_stage 003B  
                                 ___latbits 0002                          __end_of_SetOutputs 0430  
                             __pcstackBANK0 0020                               __pcstackBANK1 00A0  
                    InitWigwagPattern@i_770 00AE      __end_of_IOCCF0_DefaultInterruptHandler 0509  
   __size_of_IOCCF0_DefaultInterruptHandler 0001              _IOCCF0_DefaultInterruptHandler 0508  
                      __size_of_AppendStage 0058                                   __pnvBANK0 0054  
                    _PIN_MANAGER_Initialize 03BE            __end_of_TMR1_SetInterruptHandler 04ED  
                         _AssignLightStates 03E9                           _InitWigwagPattern 006B  
                        ?_AssignLightStates 0072                ??_INTERRUPT_InterruptManager 0072  
                        ?_InitWigwagPattern 003D                    __size_of_TMR1_StartTimer 0003  
                       ??_AssignLightStates 0075                         ??_InitWigwagPattern 003F  
                            __size_of_setup 001D                     __size_of_ConstructStage 002D  
                                  _LATCbits 010E                                   clear_ram0 04C1  
                                  _PIE0bits 0090                                    _PIE1bits 0091  
                  __size_of_TMR1_WriteTimer 0011                   __end_of_AssignLightStates 040E  
       __size_of_INTERRUPT_InterruptManager 0024                                    _PIR0bits 0010  
                                  _PIR1bits 0011           __size_of_PatternCycleInputChanged 002D  
                 ?_PatternCycleInputChanged 0070                   __end_of_InitWigwagPattern 01A8  
                                  _TMR1_ISR 0467                           ??_PIN_MANAGER_IOC 0070  
                         ??_TMR1_Initialize 0074                      __size_of_CopyStageData 0039  
                                  _NewStage 02DC                                    _SetLight 01A8  
                           _stage_list_iter 0045                     ??_OSCILLATOR_Initialize 0072  
                     InitWigwagPattern@F436 005A                       InitWigwagPattern@F439 00B8  
                  _TMR1_SetInterruptHandler 04E7                       InitWigwagPattern@head 00B2  
                     _TMR1_InterruptHandler 0054                     _IOCCF0_InterruptHandler 0058  
                                  __ptext10 04ED                                    __ptext11 04CD  
                                  __ptext20 01A8                                    __ptext12 006B  
                                  __ptext13 032B                                  _T1GCONbits 001C  
                                  __ptext22 0467                                    __ptext14 0364  
                                  __ptext23 0491                                    __ptext15 02DC  
                                  __ptext24 04F3                                    __ptext16 03E9  
                                  __ptext25 04D6                                    __ptext17 0284  
                                  __ptext26 04B2                                    __ptext18 0391  
                                  __ptext27 0508                                    __ptext19 0219  
              ??_IOCCF0_SetInterruptHandler 0074              InitWigwagPattern@right_side_on 00AA  
                         ??_TMR1_StartTimer 0072                                  _IOCCF0_ISR 04B2  
                                  _cur_hsec 0049                               __size_of_main 001A  
                __size_of_AssignLightStates 0025               InitWigwagPattern@left_side_on 00A8  
                __size_of_InitWigwagPattern 013D                                    int$flags 007E  
        __end_of_INTERRUPT_InterruptManager 0028                  _INTERRUPT_InterruptManager 0004  
                         ??_TMR1_WriteTimer 0072                               _CopyStageData 032B  
                       FlashPattern@pattern 0076                               ?_FlashPattern 0076  
       __size_of_IOCCF0_SetInterruptHandler 0006                                  _INTCONbits 000B  
                   __size_of_WDT_Initialize 0004                                    intlevel1 0000  
                            _ConstructStage 0364                     ?_PIN_MANAGER_Initialize 0070  
                         __CFG_CLKOUTEN$OFF 0000                              ?_CopyStageData 002C  
                            ??_FlashPattern 0020                               ??_AppendStage 0039  
          __end_of_PatternCycleInputChanged 03BE                      __end_of_ConstructStage 0391  
                               ?_IOCCF0_ISR 0070              __end_of_PIN_MANAGER_Initialize 03E9  
                           _PIN_MANAGER_IOC 04D6                                 _stage_stash 20F0  
                           _TMR1_Initialize 047D  
