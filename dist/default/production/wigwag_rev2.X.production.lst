

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed May 06 12:12:31 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18325
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x620,48
    45                           	dabs	1,0x5A0,80
    46                           	dabs	1,0x520,80
    47                           	dabs	1,0x4A0,80
    48                           	dabs	1,0x450,32
    49                           	dabs	1,0x22B0,0,_stage_stash
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.10
    53                           ; Generated 31/07/2019 GMT
    54                           ; 
    55                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F18325 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000E                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  008C                     	;# 
   120  008E                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0097                     	;# 
   127  009B                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010E                     	;# 
   135  0111                     	;# 
   136  0112                     	;# 
   137  0113                     	;# 
   138  0114                     	;# 
   139  0115                     	;# 
   140  0116                     	;# 
   141  0117                     	;# 
   142  0118                     	;# 
   143  0119                     	;# 
   144  018C                     	;# 
   145  018E                     	;# 
   146  0197                     	;# 
   147  0199                     	;# 
   148  0199                     	;# 
   149  0199                     	;# 
   150  019A                     	;# 
   151  019A                     	;# 
   152  019A                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019C                     	;# 
   159  019C                     	;# 
   160  019C                     	;# 
   161  019D                     	;# 
   162  019D                     	;# 
   163  019D                     	;# 
   164  019E                     	;# 
   165  019E                     	;# 
   166  019E                     	;# 
   167  019F                     	;# 
   168  019F                     	;# 
   169  019F                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  020C                     	;# 
   173  020E                     	;# 
   174  0211                     	;# 
   175  0211                     	;# 
   176  0212                     	;# 
   177  0212                     	;# 
   178  0213                     	;# 
   179  0213                     	;# 
   180  0214                     	;# 
   181  0214                     	;# 
   182  0215                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0216                     	;# 
   187  0216                     	;# 
   188  0217                     	;# 
   189  0217                     	;# 
   190  0219                     	;# 
   191  021A                     	;# 
   192  021B                     	;# 
   193  021C                     	;# 
   194  021D                     	;# 
   195  021D                     	;# 
   196  021E                     	;# 
   197  021F                     	;# 
   198  028C                     	;# 
   199  028E                     	;# 
   200  0291                     	;# 
   201  0291                     	;# 
   202  0292                     	;# 
   203  0293                     	;# 
   204  0294                     	;# 
   205  0295                     	;# 
   206  0295                     	;# 
   207  0296                     	;# 
   208  0297                     	;# 
   209  0298                     	;# 
   210  029F                     	;# 
   211  030C                     	;# 
   212  030E                     	;# 
   213  0311                     	;# 
   214  0311                     	;# 
   215  0312                     	;# 
   216  0313                     	;# 
   217  0314                     	;# 
   218  0315                     	;# 
   219  0315                     	;# 
   220  0316                     	;# 
   221  0317                     	;# 
   222  0318                     	;# 
   223  038C                     	;# 
   224  038E                     	;# 
   225  0391                     	;# 
   226  0392                     	;# 
   227  0393                     	;# 
   228  0397                     	;# 
   229  0398                     	;# 
   230  0399                     	;# 
   231  039A                     	;# 
   232  039C                     	;# 
   233  039D                     	;# 
   234  039E                     	;# 
   235  039F                     	;# 
   236  0411                     	;# 
   237  0411                     	;# 
   238  0412                     	;# 
   239  0413                     	;# 
   240  0414                     	;# 
   241  0415                     	;# 
   242  0416                     	;# 
   243  0417                     	;# 
   244  0418                     	;# 
   245  0418                     	;# 
   246  0419                     	;# 
   247  041A                     	;# 
   248  041B                     	;# 
   249  041C                     	;# 
   250  041D                     	;# 
   251  041E                     	;# 
   252  041F                     	;# 
   253  0498                     	;# 
   254  0498                     	;# 
   255  0499                     	;# 
   256  049A                     	;# 
   257  049B                     	;# 
   258  049B                     	;# 
   259  049C                     	;# 
   260  049D                     	;# 
   261  049E                     	;# 
   262  049F                     	;# 
   263  0617                     	;# 
   264  0618                     	;# 
   265  0619                     	;# 
   266  0619                     	;# 
   267  061A                     	;# 
   268  061B                     	;# 
   269  061C                     	;# 
   270  061C                     	;# 
   271  061F                     	;# 
   272  0691                     	;# 
   273  0692                     	;# 
   274  0693                     	;# 
   275  0694                     	;# 
   276  0695                     	;# 
   277  0696                     	;# 
   278  0697                     	;# 
   279  0698                     	;# 
   280  0699                     	;# 
   281  0711                     	;# 
   282  0712                     	;# 
   283  0713                     	;# 
   284  0714                     	;# 
   285  0715                     	;# 
   286  0716                     	;# 
   287  0717                     	;# 
   288  0718                     	;# 
   289  0719                     	;# 
   290  0891                     	;# 
   291  0891                     	;# 
   292  0891                     	;# 
   293  0891                     	;# 
   294  0891                     	;# 
   295  0891                     	;# 
   296  0892                     	;# 
   297  0892                     	;# 
   298  0892                     	;# 
   299  0893                     	;# 
   300  0893                     	;# 
   301  0893                     	;# 
   302  0893                     	;# 
   303  0893                     	;# 
   304  0893                     	;# 
   305  0894                     	;# 
   306  0894                     	;# 
   307  0894                     	;# 
   308  0895                     	;# 
   309  0895                     	;# 
   310  0895                     	;# 
   311  0896                     	;# 
   312  0896                     	;# 
   313  0896                     	;# 
   314  089B                     	;# 
   315  0911                     	;# 
   316  0912                     	;# 
   317  0913                     	;# 
   318  0914                     	;# 
   319  0915                     	;# 
   320  0916                     	;# 
   321  0918                     	;# 
   322  0919                     	;# 
   323  091A                     	;# 
   324  091B                     	;# 
   325  091C                     	;# 
   326  091D                     	;# 
   327  091E                     	;# 
   328  091F                     	;# 
   329  0E0F                     	;# 
   330  0E10                     	;# 
   331  0E11                     	;# 
   332  0E12                     	;# 
   333  0E13                     	;# 
   334  0E14                     	;# 
   335  0E15                     	;# 
   336  0E16                     	;# 
   337  0E17                     	;# 
   338  0E18                     	;# 
   339  0E19                     	;# 
   340  0E1A                     	;# 
   341  0E1B                     	;# 
   342  0E1C                     	;# 
   343  0E1D                     	;# 
   344  0E1E                     	;# 
   345  0E1F                     	;# 
   346  0E20                     	;# 
   347  0E21                     	;# 
   348  0E22                     	;# 
   349  0E24                     	;# 
   350  0E25                     	;# 
   351  0E28                     	;# 
   352  0E29                     	;# 
   353  0E2A                     	;# 
   354  0E2B                     	;# 
   355  0E2C                     	;# 
   356  0E2D                     	;# 
   357  0E2E                     	;# 
   358  0E2F                     	;# 
   359  0E90                     	;# 
   360  0E91                     	;# 
   361  0E92                     	;# 
   362  0E94                     	;# 
   363  0E95                     	;# 
   364  0EA0                     	;# 
   365  0EA1                     	;# 
   366  0EA2                     	;# 
   367  0EA3                     	;# 
   368  0EA4                     	;# 
   369  0EA5                     	;# 
   370  0F0F                     	;# 
   371  0F10                     	;# 
   372  0F11                     	;# 
   373  0F12                     	;# 
   374  0F13                     	;# 
   375  0F14                     	;# 
   376  0F15                     	;# 
   377  0F16                     	;# 
   378  0F17                     	;# 
   379  0F18                     	;# 
   380  0F19                     	;# 
   381  0F1A                     	;# 
   382  0F1B                     	;# 
   383  0F1C                     	;# 
   384  0F1D                     	;# 
   385  0F1E                     	;# 
   386  0F1F                     	;# 
   387  0F20                     	;# 
   388  0F21                     	;# 
   389  0F22                     	;# 
   390  0F23                     	;# 
   391  0F24                     	;# 
   392  0F25                     	;# 
   393  0F26                     	;# 
   394  0F27                     	;# 
   395  0F28                     	;# 
   396  0F29                     	;# 
   397  0F2A                     	;# 
   398  0F2B                     	;# 
   399  0F2C                     	;# 
   400  0F2D                     	;# 
   401  0F2E                     	;# 
   402  0F2F                     	;# 
   403  0F30                     	;# 
   404  0F31                     	;# 
   405  0F32                     	;# 
   406  0F33                     	;# 
   407  0F34                     	;# 
   408  0F35                     	;# 
   409  0F36                     	;# 
   410  0F37                     	;# 
   411  0FE4                     	;# 
   412  0FE5                     	;# 
   413  0FE6                     	;# 
   414  0FE7                     	;# 
   415  0FE8                     	;# 
   416  0FE9                     	;# 
   417  0FEA                     	;# 
   418  0FEB                     	;# 
   419  0FED                     	;# 
   420  0FEE                     	;# 
   421  0FEF                     	;# 
   422  0000                     	;# 
   423  0001                     	;# 
   424  0002                     	;# 
   425  0003                     	;# 
   426  0004                     	;# 
   427  0005                     	;# 
   428  0006                     	;# 
   429  0007                     	;# 
   430  0008                     	;# 
   431  0009                     	;# 
   432  000A                     	;# 
   433  000B                     	;# 
   434  000C                     	;# 
   435  000E                     	;# 
   436  0010                     	;# 
   437  0011                     	;# 
   438  0012                     	;# 
   439  0013                     	;# 
   440  0014                     	;# 
   441  0015                     	;# 
   442  0015                     	;# 
   443  0016                     	;# 
   444  0016                     	;# 
   445  0017                     	;# 
   446  0018                     	;# 
   447  0019                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001C                     	;# 
   452  001D                     	;# 
   453  001E                     	;# 
   454  001F                     	;# 
   455  008C                     	;# 
   456  008E                     	;# 
   457  0090                     	;# 
   458  0091                     	;# 
   459  0092                     	;# 
   460  0093                     	;# 
   461  0094                     	;# 
   462  0097                     	;# 
   463  009B                     	;# 
   464  009B                     	;# 
   465  009C                     	;# 
   466  009D                     	;# 
   467  009E                     	;# 
   468  009F                     	;# 
   469  010C                     	;# 
   470  010E                     	;# 
   471  0111                     	;# 
   472  0112                     	;# 
   473  0113                     	;# 
   474  0114                     	;# 
   475  0115                     	;# 
   476  0116                     	;# 
   477  0117                     	;# 
   478  0118                     	;# 
   479  0119                     	;# 
   480  018C                     	;# 
   481  018E                     	;# 
   482  0197                     	;# 
   483  0199                     	;# 
   484  0199                     	;# 
   485  0199                     	;# 
   486  019A                     	;# 
   487  019A                     	;# 
   488  019A                     	;# 
   489  019B                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019B                     	;# 
   493  019B                     	;# 
   494  019C                     	;# 
   495  019C                     	;# 
   496  019C                     	;# 
   497  019D                     	;# 
   498  019D                     	;# 
   499  019D                     	;# 
   500  019E                     	;# 
   501  019E                     	;# 
   502  019E                     	;# 
   503  019F                     	;# 
   504  019F                     	;# 
   505  019F                     	;# 
   506  019F                     	;# 
   507  019F                     	;# 
   508  020C                     	;# 
   509  020E                     	;# 
   510  0211                     	;# 
   511  0211                     	;# 
   512  0212                     	;# 
   513  0212                     	;# 
   514  0213                     	;# 
   515  0213                     	;# 
   516  0214                     	;# 
   517  0214                     	;# 
   518  0215                     	;# 
   519  0215                     	;# 
   520  0215                     	;# 
   521  0215                     	;# 
   522  0216                     	;# 
   523  0216                     	;# 
   524  0217                     	;# 
   525  0217                     	;# 
   526  0219                     	;# 
   527  021A                     	;# 
   528  021B                     	;# 
   529  021C                     	;# 
   530  021D                     	;# 
   531  021D                     	;# 
   532  021E                     	;# 
   533  021F                     	;# 
   534  028C                     	;# 
   535  028E                     	;# 
   536  0291                     	;# 
   537  0291                     	;# 
   538  0292                     	;# 
   539  0293                     	;# 
   540  0294                     	;# 
   541  0295                     	;# 
   542  0295                     	;# 
   543  0296                     	;# 
   544  0297                     	;# 
   545  0298                     	;# 
   546  029F                     	;# 
   547  030C                     	;# 
   548  030E                     	;# 
   549  0311                     	;# 
   550  0311                     	;# 
   551  0312                     	;# 
   552  0313                     	;# 
   553  0314                     	;# 
   554  0315                     	;# 
   555  0315                     	;# 
   556  0316                     	;# 
   557  0317                     	;# 
   558  0318                     	;# 
   559  038C                     	;# 
   560  038E                     	;# 
   561  0391                     	;# 
   562  0392                     	;# 
   563  0393                     	;# 
   564  0397                     	;# 
   565  0398                     	;# 
   566  0399                     	;# 
   567  039A                     	;# 
   568  039C                     	;# 
   569  039D                     	;# 
   570  039E                     	;# 
   571  039F                     	;# 
   572  0411                     	;# 
   573  0411                     	;# 
   574  0412                     	;# 
   575  0413                     	;# 
   576  0414                     	;# 
   577  0415                     	;# 
   578  0416                     	;# 
   579  0417                     	;# 
   580  0418                     	;# 
   581  0418                     	;# 
   582  0419                     	;# 
   583  041A                     	;# 
   584  041B                     	;# 
   585  041C                     	;# 
   586  041D                     	;# 
   587  041E                     	;# 
   588  041F                     	;# 
   589  0498                     	;# 
   590  0498                     	;# 
   591  0499                     	;# 
   592  049A                     	;# 
   593  049B                     	;# 
   594  049B                     	;# 
   595  049C                     	;# 
   596  049D                     	;# 
   597  049E                     	;# 
   598  049F                     	;# 
   599  0617                     	;# 
   600  0618                     	;# 
   601  0619                     	;# 
   602  0619                     	;# 
   603  061A                     	;# 
   604  061B                     	;# 
   605  061C                     	;# 
   606  061C                     	;# 
   607  061F                     	;# 
   608  0691                     	;# 
   609  0692                     	;# 
   610  0693                     	;# 
   611  0694                     	;# 
   612  0695                     	;# 
   613  0696                     	;# 
   614  0697                     	;# 
   615  0698                     	;# 
   616  0699                     	;# 
   617  0711                     	;# 
   618  0712                     	;# 
   619  0713                     	;# 
   620  0714                     	;# 
   621  0715                     	;# 
   622  0716                     	;# 
   623  0717                     	;# 
   624  0718                     	;# 
   625  0719                     	;# 
   626  0891                     	;# 
   627  0891                     	;# 
   628  0891                     	;# 
   629  0891                     	;# 
   630  0891                     	;# 
   631  0891                     	;# 
   632  0892                     	;# 
   633  0892                     	;# 
   634  0892                     	;# 
   635  0893                     	;# 
   636  0893                     	;# 
   637  0893                     	;# 
   638  0893                     	;# 
   639  0893                     	;# 
   640  0893                     	;# 
   641  0894                     	;# 
   642  0894                     	;# 
   643  0894                     	;# 
   644  0895                     	;# 
   645  0895                     	;# 
   646  0895                     	;# 
   647  0896                     	;# 
   648  0896                     	;# 
   649  0896                     	;# 
   650  089B                     	;# 
   651  0911                     	;# 
   652  0912                     	;# 
   653  0913                     	;# 
   654  0914                     	;# 
   655  0915                     	;# 
   656  0916                     	;# 
   657  0918                     	;# 
   658  0919                     	;# 
   659  091A                     	;# 
   660  091B                     	;# 
   661  091C                     	;# 
   662  091D                     	;# 
   663  091E                     	;# 
   664  091F                     	;# 
   665  0E0F                     	;# 
   666  0E10                     	;# 
   667  0E11                     	;# 
   668  0E12                     	;# 
   669  0E13                     	;# 
   670  0E14                     	;# 
   671  0E15                     	;# 
   672  0E16                     	;# 
   673  0E17                     	;# 
   674  0E18                     	;# 
   675  0E19                     	;# 
   676  0E1A                     	;# 
   677  0E1B                     	;# 
   678  0E1C                     	;# 
   679  0E1D                     	;# 
   680  0E1E                     	;# 
   681  0E1F                     	;# 
   682  0E20                     	;# 
   683  0E21                     	;# 
   684  0E22                     	;# 
   685  0E24                     	;# 
   686  0E25                     	;# 
   687  0E28                     	;# 
   688  0E29                     	;# 
   689  0E2A                     	;# 
   690  0E2B                     	;# 
   691  0E2C                     	;# 
   692  0E2D                     	;# 
   693  0E2E                     	;# 
   694  0E2F                     	;# 
   695  0E90                     	;# 
   696  0E91                     	;# 
   697  0E92                     	;# 
   698  0E94                     	;# 
   699  0E95                     	;# 
   700  0EA0                     	;# 
   701  0EA1                     	;# 
   702  0EA2                     	;# 
   703  0EA3                     	;# 
   704  0EA4                     	;# 
   705  0EA5                     	;# 
   706  0F0F                     	;# 
   707  0F10                     	;# 
   708  0F11                     	;# 
   709  0F12                     	;# 
   710  0F13                     	;# 
   711  0F14                     	;# 
   712  0F15                     	;# 
   713  0F16                     	;# 
   714  0F17                     	;# 
   715  0F18                     	;# 
   716  0F19                     	;# 
   717  0F1A                     	;# 
   718  0F1B                     	;# 
   719  0F1C                     	;# 
   720  0F1D                     	;# 
   721  0F1E                     	;# 
   722  0F1F                     	;# 
   723  0F20                     	;# 
   724  0F21                     	;# 
   725  0F22                     	;# 
   726  0F23                     	;# 
   727  0F24                     	;# 
   728  0F25                     	;# 
   729  0F26                     	;# 
   730  0F27                     	;# 
   731  0F28                     	;# 
   732  0F29                     	;# 
   733  0F2A                     	;# 
   734  0F2B                     	;# 
   735  0F2C                     	;# 
   736  0F2D                     	;# 
   737  0F2E                     	;# 
   738  0F2F                     	;# 
   739  0F30                     	;# 
   740  0F31                     	;# 
   741  0F32                     	;# 
   742  0F33                     	;# 
   743  0F34                     	;# 
   744  0F35                     	;# 
   745  0F36                     	;# 
   746  0F37                     	;# 
   747  0FE4                     	;# 
   748  0FE5                     	;# 
   749  0FE6                     	;# 
   750  0FE7                     	;# 
   751  0FE8                     	;# 
   752  0FE9                     	;# 
   753  0FEA                     	;# 
   754  0FEB                     	;# 
   755  0FED                     	;# 
   756  0FEE                     	;# 
   757  0FEF                     	;# 
   758  0000                     	;# 
   759  0001                     	;# 
   760  0002                     	;# 
   761  0003                     	;# 
   762  0004                     	;# 
   763  0005                     	;# 
   764  0006                     	;# 
   765  0007                     	;# 
   766  0008                     	;# 
   767  0009                     	;# 
   768  000A                     	;# 
   769  000B                     	;# 
   770  000C                     	;# 
   771  000E                     	;# 
   772  0010                     	;# 
   773  0011                     	;# 
   774  0012                     	;# 
   775  0013                     	;# 
   776  0014                     	;# 
   777  0015                     	;# 
   778  0015                     	;# 
   779  0016                     	;# 
   780  0016                     	;# 
   781  0017                     	;# 
   782  0018                     	;# 
   783  0019                     	;# 
   784  0019                     	;# 
   785  001A                     	;# 
   786  001B                     	;# 
   787  001C                     	;# 
   788  001D                     	;# 
   789  001E                     	;# 
   790  001F                     	;# 
   791  008C                     	;# 
   792  008E                     	;# 
   793  0090                     	;# 
   794  0091                     	;# 
   795  0092                     	;# 
   796  0093                     	;# 
   797  0094                     	;# 
   798  0097                     	;# 
   799  009B                     	;# 
   800  009B                     	;# 
   801  009C                     	;# 
   802  009D                     	;# 
   803  009E                     	;# 
   804  009F                     	;# 
   805  010C                     	;# 
   806  010E                     	;# 
   807  0111                     	;# 
   808  0112                     	;# 
   809  0113                     	;# 
   810  0114                     	;# 
   811  0115                     	;# 
   812  0116                     	;# 
   813  0117                     	;# 
   814  0118                     	;# 
   815  0119                     	;# 
   816  018C                     	;# 
   817  018E                     	;# 
   818  0197                     	;# 
   819  0199                     	;# 
   820  0199                     	;# 
   821  0199                     	;# 
   822  019A                     	;# 
   823  019A                     	;# 
   824  019A                     	;# 
   825  019B                     	;# 
   826  019B                     	;# 
   827  019B                     	;# 
   828  019B                     	;# 
   829  019B                     	;# 
   830  019C                     	;# 
   831  019C                     	;# 
   832  019C                     	;# 
   833  019D                     	;# 
   834  019D                     	;# 
   835  019D                     	;# 
   836  019E                     	;# 
   837  019E                     	;# 
   838  019E                     	;# 
   839  019F                     	;# 
   840  019F                     	;# 
   841  019F                     	;# 
   842  019F                     	;# 
   843  019F                     	;# 
   844  020C                     	;# 
   845  020E                     	;# 
   846  0211                     	;# 
   847  0211                     	;# 
   848  0212                     	;# 
   849  0212                     	;# 
   850  0213                     	;# 
   851  0213                     	;# 
   852  0214                     	;# 
   853  0214                     	;# 
   854  0215                     	;# 
   855  0215                     	;# 
   856  0215                     	;# 
   857  0215                     	;# 
   858  0216                     	;# 
   859  0216                     	;# 
   860  0217                     	;# 
   861  0217                     	;# 
   862  0219                     	;# 
   863  021A                     	;# 
   864  021B                     	;# 
   865  021C                     	;# 
   866  021D                     	;# 
   867  021D                     	;# 
   868  021E                     	;# 
   869  021F                     	;# 
   870  028C                     	;# 
   871  028E                     	;# 
   872  0291                     	;# 
   873  0291                     	;# 
   874  0292                     	;# 
   875  0293                     	;# 
   876  0294                     	;# 
   877  0295                     	;# 
   878  0295                     	;# 
   879  0296                     	;# 
   880  0297                     	;# 
   881  0298                     	;# 
   882  029F                     	;# 
   883  030C                     	;# 
   884  030E                     	;# 
   885  0311                     	;# 
   886  0311                     	;# 
   887  0312                     	;# 
   888  0313                     	;# 
   889  0314                     	;# 
   890  0315                     	;# 
   891  0315                     	;# 
   892  0316                     	;# 
   893  0317                     	;# 
   894  0318                     	;# 
   895  038C                     	;# 
   896  038E                     	;# 
   897  0391                     	;# 
   898  0392                     	;# 
   899  0393                     	;# 
   900  0397                     	;# 
   901  0398                     	;# 
   902  0399                     	;# 
   903  039A                     	;# 
   904  039C                     	;# 
   905  039D                     	;# 
   906  039E                     	;# 
   907  039F                     	;# 
   908  0411                     	;# 
   909  0411                     	;# 
   910  0412                     	;# 
   911  0413                     	;# 
   912  0414                     	;# 
   913  0415                     	;# 
   914  0416                     	;# 
   915  0417                     	;# 
   916  0418                     	;# 
   917  0418                     	;# 
   918  0419                     	;# 
   919  041A                     	;# 
   920  041B                     	;# 
   921  041C                     	;# 
   922  041D                     	;# 
   923  041E                     	;# 
   924  041F                     	;# 
   925  0498                     	;# 
   926  0498                     	;# 
   927  0499                     	;# 
   928  049A                     	;# 
   929  049B                     	;# 
   930  049B                     	;# 
   931  049C                     	;# 
   932  049D                     	;# 
   933  049E                     	;# 
   934  049F                     	;# 
   935  0617                     	;# 
   936  0618                     	;# 
   937  0619                     	;# 
   938  0619                     	;# 
   939  061A                     	;# 
   940  061B                     	;# 
   941  061C                     	;# 
   942  061C                     	;# 
   943  061F                     	;# 
   944  0691                     	;# 
   945  0692                     	;# 
   946  0693                     	;# 
   947  0694                     	;# 
   948  0695                     	;# 
   949  0696                     	;# 
   950  0697                     	;# 
   951  0698                     	;# 
   952  0699                     	;# 
   953  0711                     	;# 
   954  0712                     	;# 
   955  0713                     	;# 
   956  0714                     	;# 
   957  0715                     	;# 
   958  0716                     	;# 
   959  0717                     	;# 
   960  0718                     	;# 
   961  0719                     	;# 
   962  0891                     	;# 
   963  0891                     	;# 
   964  0891                     	;# 
   965  0891                     	;# 
   966  0891                     	;# 
   967  0891                     	;# 
   968  0892                     	;# 
   969  0892                     	;# 
   970  0892                     	;# 
   971  0893                     	;# 
   972  0893                     	;# 
   973  0893                     	;# 
   974  0893                     	;# 
   975  0893                     	;# 
   976  0893                     	;# 
   977  0894                     	;# 
   978  0894                     	;# 
   979  0894                     	;# 
   980  0895                     	;# 
   981  0895                     	;# 
   982  0895                     	;# 
   983  0896                     	;# 
   984  0896                     	;# 
   985  0896                     	;# 
   986  089B                     	;# 
   987  0911                     	;# 
   988  0912                     	;# 
   989  0913                     	;# 
   990  0914                     	;# 
   991  0915                     	;# 
   992  0916                     	;# 
   993  0918                     	;# 
   994  0919                     	;# 
   995  091A                     	;# 
   996  091B                     	;# 
   997  091C                     	;# 
   998  091D                     	;# 
   999  091E                     	;# 
  1000  091F                     	;# 
  1001  0E0F                     	;# 
  1002  0E10                     	;# 
  1003  0E11                     	;# 
  1004  0E12                     	;# 
  1005  0E13                     	;# 
  1006  0E14                     	;# 
  1007  0E15                     	;# 
  1008  0E16                     	;# 
  1009  0E17                     	;# 
  1010  0E18                     	;# 
  1011  0E19                     	;# 
  1012  0E1A                     	;# 
  1013  0E1B                     	;# 
  1014  0E1C                     	;# 
  1015  0E1D                     	;# 
  1016  0E1E                     	;# 
  1017  0E1F                     	;# 
  1018  0E20                     	;# 
  1019  0E21                     	;# 
  1020  0E22                     	;# 
  1021  0E24                     	;# 
  1022  0E25                     	;# 
  1023  0E28                     	;# 
  1024  0E29                     	;# 
  1025  0E2A                     	;# 
  1026  0E2B                     	;# 
  1027  0E2C                     	;# 
  1028  0E2D                     	;# 
  1029  0E2E                     	;# 
  1030  0E2F                     	;# 
  1031  0E90                     	;# 
  1032  0E91                     	;# 
  1033  0E92                     	;# 
  1034  0E94                     	;# 
  1035  0E95                     	;# 
  1036  0EA0                     	;# 
  1037  0EA1                     	;# 
  1038  0EA2                     	;# 
  1039  0EA3                     	;# 
  1040  0EA4                     	;# 
  1041  0EA5                     	;# 
  1042  0F0F                     	;# 
  1043  0F10                     	;# 
  1044  0F11                     	;# 
  1045  0F12                     	;# 
  1046  0F13                     	;# 
  1047  0F14                     	;# 
  1048  0F15                     	;# 
  1049  0F16                     	;# 
  1050  0F17                     	;# 
  1051  0F18                     	;# 
  1052  0F19                     	;# 
  1053  0F1A                     	;# 
  1054  0F1B                     	;# 
  1055  0F1C                     	;# 
  1056  0F1D                     	;# 
  1057  0F1E                     	;# 
  1058  0F1F                     	;# 
  1059  0F20                     	;# 
  1060  0F21                     	;# 
  1061  0F22                     	;# 
  1062  0F23                     	;# 
  1063  0F24                     	;# 
  1064  0F25                     	;# 
  1065  0F26                     	;# 
  1066  0F27                     	;# 
  1067  0F28                     	;# 
  1068  0F29                     	;# 
  1069  0F2A                     	;# 
  1070  0F2B                     	;# 
  1071  0F2C                     	;# 
  1072  0F2D                     	;# 
  1073  0F2E                     	;# 
  1074  0F2F                     	;# 
  1075  0F30                     	;# 
  1076  0F31                     	;# 
  1077  0F32                     	;# 
  1078  0F33                     	;# 
  1079  0F34                     	;# 
  1080  0F35                     	;# 
  1081  0F36                     	;# 
  1082  0F37                     	;# 
  1083  0FE4                     	;# 
  1084  0FE5                     	;# 
  1085  0FE6                     	;# 
  1086  0FE7                     	;# 
  1087  0FE8                     	;# 
  1088  0FE9                     	;# 
  1089  0FEA                     	;# 
  1090  0FEB                     	;# 
  1091  0FED                     	;# 
  1092  0FEE                     	;# 
  1093  0FEF                     	;# 
  1094  0000                     	;# 
  1095  0001                     	;# 
  1096  0002                     	;# 
  1097  0003                     	;# 
  1098  0004                     	;# 
  1099  0005                     	;# 
  1100  0006                     	;# 
  1101  0007                     	;# 
  1102  0008                     	;# 
  1103  0009                     	;# 
  1104  000A                     	;# 
  1105  000B                     	;# 
  1106  000C                     	;# 
  1107  000E                     	;# 
  1108  0010                     	;# 
  1109  0011                     	;# 
  1110  0012                     	;# 
  1111  0013                     	;# 
  1112  0014                     	;# 
  1113  0015                     	;# 
  1114  0015                     	;# 
  1115  0016                     	;# 
  1116  0016                     	;# 
  1117  0017                     	;# 
  1118  0018                     	;# 
  1119  0019                     	;# 
  1120  0019                     	;# 
  1121  001A                     	;# 
  1122  001B                     	;# 
  1123  001C                     	;# 
  1124  001D                     	;# 
  1125  001E                     	;# 
  1126  001F                     	;# 
  1127  008C                     	;# 
  1128  008E                     	;# 
  1129  0090                     	;# 
  1130  0091                     	;# 
  1131  0092                     	;# 
  1132  0093                     	;# 
  1133  0094                     	;# 
  1134  0097                     	;# 
  1135  009B                     	;# 
  1136  009B                     	;# 
  1137  009C                     	;# 
  1138  009D                     	;# 
  1139  009E                     	;# 
  1140  009F                     	;# 
  1141  010C                     	;# 
  1142  010E                     	;# 
  1143  0111                     	;# 
  1144  0112                     	;# 
  1145  0113                     	;# 
  1146  0114                     	;# 
  1147  0115                     	;# 
  1148  0116                     	;# 
  1149  0117                     	;# 
  1150  0118                     	;# 
  1151  0119                     	;# 
  1152  018C                     	;# 
  1153  018E                     	;# 
  1154  0197                     	;# 
  1155  0199                     	;# 
  1156  0199                     	;# 
  1157  0199                     	;# 
  1158  019A                     	;# 
  1159  019A                     	;# 
  1160  019A                     	;# 
  1161  019B                     	;# 
  1162  019B                     	;# 
  1163  019B                     	;# 
  1164  019B                     	;# 
  1165  019B                     	;# 
  1166  019C                     	;# 
  1167  019C                     	;# 
  1168  019C                     	;# 
  1169  019D                     	;# 
  1170  019D                     	;# 
  1171  019D                     	;# 
  1172  019E                     	;# 
  1173  019E                     	;# 
  1174  019E                     	;# 
  1175  019F                     	;# 
  1176  019F                     	;# 
  1177  019F                     	;# 
  1178  019F                     	;# 
  1179  019F                     	;# 
  1180  020C                     	;# 
  1181  020E                     	;# 
  1182  0211                     	;# 
  1183  0211                     	;# 
  1184  0212                     	;# 
  1185  0212                     	;# 
  1186  0213                     	;# 
  1187  0213                     	;# 
  1188  0214                     	;# 
  1189  0214                     	;# 
  1190  0215                     	;# 
  1191  0215                     	;# 
  1192  0215                     	;# 
  1193  0215                     	;# 
  1194  0216                     	;# 
  1195  0216                     	;# 
  1196  0217                     	;# 
  1197  0217                     	;# 
  1198  0219                     	;# 
  1199  021A                     	;# 
  1200  021B                     	;# 
  1201  021C                     	;# 
  1202  021D                     	;# 
  1203  021D                     	;# 
  1204  021E                     	;# 
  1205  021F                     	;# 
  1206  028C                     	;# 
  1207  028E                     	;# 
  1208  0291                     	;# 
  1209  0291                     	;# 
  1210  0292                     	;# 
  1211  0293                     	;# 
  1212  0294                     	;# 
  1213  0295                     	;# 
  1214  0295                     	;# 
  1215  0296                     	;# 
  1216  0297                     	;# 
  1217  0298                     	;# 
  1218  029F                     	;# 
  1219  030C                     	;# 
  1220  030E                     	;# 
  1221  0311                     	;# 
  1222  0311                     	;# 
  1223  0312                     	;# 
  1224  0313                     	;# 
  1225  0314                     	;# 
  1226  0315                     	;# 
  1227  0315                     	;# 
  1228  0316                     	;# 
  1229  0317                     	;# 
  1230  0318                     	;# 
  1231  038C                     	;# 
  1232  038E                     	;# 
  1233  0391                     	;# 
  1234  0392                     	;# 
  1235  0393                     	;# 
  1236  0397                     	;# 
  1237  0398                     	;# 
  1238  0399                     	;# 
  1239  039A                     	;# 
  1240  039C                     	;# 
  1241  039D                     	;# 
  1242  039E                     	;# 
  1243  039F                     	;# 
  1244  0411                     	;# 
  1245  0411                     	;# 
  1246  0412                     	;# 
  1247  0413                     	;# 
  1248  0414                     	;# 
  1249  0415                     	;# 
  1250  0416                     	;# 
  1251  0417                     	;# 
  1252  0418                     	;# 
  1253  0418                     	;# 
  1254  0419                     	;# 
  1255  041A                     	;# 
  1256  041B                     	;# 
  1257  041C                     	;# 
  1258  041D                     	;# 
  1259  041E                     	;# 
  1260  041F                     	;# 
  1261  0498                     	;# 
  1262  0498                     	;# 
  1263  0499                     	;# 
  1264  049A                     	;# 
  1265  049B                     	;# 
  1266  049B                     	;# 
  1267  049C                     	;# 
  1268  049D                     	;# 
  1269  049E                     	;# 
  1270  049F                     	;# 
  1271  0617                     	;# 
  1272  0618                     	;# 
  1273  0619                     	;# 
  1274  0619                     	;# 
  1275  061A                     	;# 
  1276  061B                     	;# 
  1277  061C                     	;# 
  1278  061C                     	;# 
  1279  061F                     	;# 
  1280  0691                     	;# 
  1281  0692                     	;# 
  1282  0693                     	;# 
  1283  0694                     	;# 
  1284  0695                     	;# 
  1285  0696                     	;# 
  1286  0697                     	;# 
  1287  0698                     	;# 
  1288  0699                     	;# 
  1289  0711                     	;# 
  1290  0712                     	;# 
  1291  0713                     	;# 
  1292  0714                     	;# 
  1293  0715                     	;# 
  1294  0716                     	;# 
  1295  0717                     	;# 
  1296  0718                     	;# 
  1297  0719                     	;# 
  1298  0891                     	;# 
  1299  0891                     	;# 
  1300  0891                     	;# 
  1301  0891                     	;# 
  1302  0891                     	;# 
  1303  0891                     	;# 
  1304  0892                     	;# 
  1305  0892                     	;# 
  1306  0892                     	;# 
  1307  0893                     	;# 
  1308  0893                     	;# 
  1309  0893                     	;# 
  1310  0893                     	;# 
  1311  0893                     	;# 
  1312  0893                     	;# 
  1313  0894                     	;# 
  1314  0894                     	;# 
  1315  0894                     	;# 
  1316  0895                     	;# 
  1317  0895                     	;# 
  1318  0895                     	;# 
  1319  0896                     	;# 
  1320  0896                     	;# 
  1321  0896                     	;# 
  1322  089B                     	;# 
  1323  0911                     	;# 
  1324  0912                     	;# 
  1325  0913                     	;# 
  1326  0914                     	;# 
  1327  0915                     	;# 
  1328  0916                     	;# 
  1329  0918                     	;# 
  1330  0919                     	;# 
  1331  091A                     	;# 
  1332  091B                     	;# 
  1333  091C                     	;# 
  1334  091D                     	;# 
  1335  091E                     	;# 
  1336  091F                     	;# 
  1337  0E0F                     	;# 
  1338  0E10                     	;# 
  1339  0E11                     	;# 
  1340  0E12                     	;# 
  1341  0E13                     	;# 
  1342  0E14                     	;# 
  1343  0E15                     	;# 
  1344  0E16                     	;# 
  1345  0E17                     	;# 
  1346  0E18                     	;# 
  1347  0E19                     	;# 
  1348  0E1A                     	;# 
  1349  0E1B                     	;# 
  1350  0E1C                     	;# 
  1351  0E1D                     	;# 
  1352  0E1E                     	;# 
  1353  0E1F                     	;# 
  1354  0E20                     	;# 
  1355  0E21                     	;# 
  1356  0E22                     	;# 
  1357  0E24                     	;# 
  1358  0E25                     	;# 
  1359  0E28                     	;# 
  1360  0E29                     	;# 
  1361  0E2A                     	;# 
  1362  0E2B                     	;# 
  1363  0E2C                     	;# 
  1364  0E2D                     	;# 
  1365  0E2E                     	;# 
  1366  0E2F                     	;# 
  1367  0E90                     	;# 
  1368  0E91                     	;# 
  1369  0E92                     	;# 
  1370  0E94                     	;# 
  1371  0E95                     	;# 
  1372  0EA0                     	;# 
  1373  0EA1                     	;# 
  1374  0EA2                     	;# 
  1375  0EA3                     	;# 
  1376  0EA4                     	;# 
  1377  0EA5                     	;# 
  1378  0F0F                     	;# 
  1379  0F10                     	;# 
  1380  0F11                     	;# 
  1381  0F12                     	;# 
  1382  0F13                     	;# 
  1383  0F14                     	;# 
  1384  0F15                     	;# 
  1385  0F16                     	;# 
  1386  0F17                     	;# 
  1387  0F18                     	;# 
  1388  0F19                     	;# 
  1389  0F1A                     	;# 
  1390  0F1B                     	;# 
  1391  0F1C                     	;# 
  1392  0F1D                     	;# 
  1393  0F1E                     	;# 
  1394  0F1F                     	;# 
  1395  0F20                     	;# 
  1396  0F21                     	;# 
  1397  0F22                     	;# 
  1398  0F23                     	;# 
  1399  0F24                     	;# 
  1400  0F25                     	;# 
  1401  0F26                     	;# 
  1402  0F27                     	;# 
  1403  0F28                     	;# 
  1404  0F29                     	;# 
  1405  0F2A                     	;# 
  1406  0F2B                     	;# 
  1407  0F2C                     	;# 
  1408  0F2D                     	;# 
  1409  0F2E                     	;# 
  1410  0F2F                     	;# 
  1411  0F30                     	;# 
  1412  0F31                     	;# 
  1413  0F32                     	;# 
  1414  0F33                     	;# 
  1415  0F34                     	;# 
  1416  0F35                     	;# 
  1417  0F36                     	;# 
  1418  0F37                     	;# 
  1419  0FE4                     	;# 
  1420  0FE5                     	;# 
  1421  0FE6                     	;# 
  1422  0FE7                     	;# 
  1423  0FE8                     	;# 
  1424  0FE9                     	;# 
  1425  0FEA                     	;# 
  1426  0FEB                     	;# 
  1427  0FED                     	;# 
  1428  0FEE                     	;# 
  1429  0FEF                     	;# 
  1430  0000                     	;# 
  1431  0001                     	;# 
  1432  0002                     	;# 
  1433  0003                     	;# 
  1434  0004                     	;# 
  1435  0005                     	;# 
  1436  0006                     	;# 
  1437  0007                     	;# 
  1438  0008                     	;# 
  1439  0009                     	;# 
  1440  000A                     	;# 
  1441  000B                     	;# 
  1442  000C                     	;# 
  1443  000E                     	;# 
  1444  0010                     	;# 
  1445  0011                     	;# 
  1446  0012                     	;# 
  1447  0013                     	;# 
  1448  0014                     	;# 
  1449  0015                     	;# 
  1450  0015                     	;# 
  1451  0016                     	;# 
  1452  0016                     	;# 
  1453  0017                     	;# 
  1454  0018                     	;# 
  1455  0019                     	;# 
  1456  0019                     	;# 
  1457  001A                     	;# 
  1458  001B                     	;# 
  1459  001C                     	;# 
  1460  001D                     	;# 
  1461  001E                     	;# 
  1462  001F                     	;# 
  1463  008C                     	;# 
  1464  008E                     	;# 
  1465  0090                     	;# 
  1466  0091                     	;# 
  1467  0092                     	;# 
  1468  0093                     	;# 
  1469  0094                     	;# 
  1470  0097                     	;# 
  1471  009B                     	;# 
  1472  009B                     	;# 
  1473  009C                     	;# 
  1474  009D                     	;# 
  1475  009E                     	;# 
  1476  009F                     	;# 
  1477  010C                     	;# 
  1478  010E                     	;# 
  1479  0111                     	;# 
  1480  0112                     	;# 
  1481  0113                     	;# 
  1482  0114                     	;# 
  1483  0115                     	;# 
  1484  0116                     	;# 
  1485  0117                     	;# 
  1486  0118                     	;# 
  1487  0119                     	;# 
  1488  018C                     	;# 
  1489  018E                     	;# 
  1490  0197                     	;# 
  1491  0199                     	;# 
  1492  0199                     	;# 
  1493  0199                     	;# 
  1494  019A                     	;# 
  1495  019A                     	;# 
  1496  019A                     	;# 
  1497  019B                     	;# 
  1498  019B                     	;# 
  1499  019B                     	;# 
  1500  019B                     	;# 
  1501  019B                     	;# 
  1502  019C                     	;# 
  1503  019C                     	;# 
  1504  019C                     	;# 
  1505  019D                     	;# 
  1506  019D                     	;# 
  1507  019D                     	;# 
  1508  019E                     	;# 
  1509  019E                     	;# 
  1510  019E                     	;# 
  1511  019F                     	;# 
  1512  019F                     	;# 
  1513  019F                     	;# 
  1514  019F                     	;# 
  1515  019F                     	;# 
  1516  020C                     	;# 
  1517  020E                     	;# 
  1518  0211                     	;# 
  1519  0211                     	;# 
  1520  0212                     	;# 
  1521  0212                     	;# 
  1522  0213                     	;# 
  1523  0213                     	;# 
  1524  0214                     	;# 
  1525  0214                     	;# 
  1526  0215                     	;# 
  1527  0215                     	;# 
  1528  0215                     	;# 
  1529  0215                     	;# 
  1530  0216                     	;# 
  1531  0216                     	;# 
  1532  0217                     	;# 
  1533  0217                     	;# 
  1534  0219                     	;# 
  1535  021A                     	;# 
  1536  021B                     	;# 
  1537  021C                     	;# 
  1538  021D                     	;# 
  1539  021D                     	;# 
  1540  021E                     	;# 
  1541  021F                     	;# 
  1542  028C                     	;# 
  1543  028E                     	;# 
  1544  0291                     	;# 
  1545  0291                     	;# 
  1546  0292                     	;# 
  1547  0293                     	;# 
  1548  0294                     	;# 
  1549  0295                     	;# 
  1550  0295                     	;# 
  1551  0296                     	;# 
  1552  0297                     	;# 
  1553  0298                     	;# 
  1554  029F                     	;# 
  1555  030C                     	;# 
  1556  030E                     	;# 
  1557  0311                     	;# 
  1558  0311                     	;# 
  1559  0312                     	;# 
  1560  0313                     	;# 
  1561  0314                     	;# 
  1562  0315                     	;# 
  1563  0315                     	;# 
  1564  0316                     	;# 
  1565  0317                     	;# 
  1566  0318                     	;# 
  1567  038C                     	;# 
  1568  038E                     	;# 
  1569  0391                     	;# 
  1570  0392                     	;# 
  1571  0393                     	;# 
  1572  0397                     	;# 
  1573  0398                     	;# 
  1574  0399                     	;# 
  1575  039A                     	;# 
  1576  039C                     	;# 
  1577  039D                     	;# 
  1578  039E                     	;# 
  1579  039F                     	;# 
  1580  0411                     	;# 
  1581  0411                     	;# 
  1582  0412                     	;# 
  1583  0413                     	;# 
  1584  0414                     	;# 
  1585  0415                     	;# 
  1586  0416                     	;# 
  1587  0417                     	;# 
  1588  0418                     	;# 
  1589  0418                     	;# 
  1590  0419                     	;# 
  1591  041A                     	;# 
  1592  041B                     	;# 
  1593  041C                     	;# 
  1594  041D                     	;# 
  1595  041E                     	;# 
  1596  041F                     	;# 
  1597  0498                     	;# 
  1598  0498                     	;# 
  1599  0499                     	;# 
  1600  049A                     	;# 
  1601  049B                     	;# 
  1602  049B                     	;# 
  1603  049C                     	;# 
  1604  049D                     	;# 
  1605  049E                     	;# 
  1606  049F                     	;# 
  1607  0617                     	;# 
  1608  0618                     	;# 
  1609  0619                     	;# 
  1610  0619                     	;# 
  1611  061A                     	;# 
  1612  061B                     	;# 
  1613  061C                     	;# 
  1614  061C                     	;# 
  1615  061F                     	;# 
  1616  0691                     	;# 
  1617  0692                     	;# 
  1618  0693                     	;# 
  1619  0694                     	;# 
  1620  0695                     	;# 
  1621  0696                     	;# 
  1622  0697                     	;# 
  1623  0698                     	;# 
  1624  0699                     	;# 
  1625  0711                     	;# 
  1626  0712                     	;# 
  1627  0713                     	;# 
  1628  0714                     	;# 
  1629  0715                     	;# 
  1630  0716                     	;# 
  1631  0717                     	;# 
  1632  0718                     	;# 
  1633  0719                     	;# 
  1634  0891                     	;# 
  1635  0891                     	;# 
  1636  0891                     	;# 
  1637  0891                     	;# 
  1638  0891                     	;# 
  1639  0891                     	;# 
  1640  0892                     	;# 
  1641  0892                     	;# 
  1642  0892                     	;# 
  1643  0893                     	;# 
  1644  0893                     	;# 
  1645  0893                     	;# 
  1646  0893                     	;# 
  1647  0893                     	;# 
  1648  0893                     	;# 
  1649  0894                     	;# 
  1650  0894                     	;# 
  1651  0894                     	;# 
  1652  0895                     	;# 
  1653  0895                     	;# 
  1654  0895                     	;# 
  1655  0896                     	;# 
  1656  0896                     	;# 
  1657  0896                     	;# 
  1658  089B                     	;# 
  1659  0911                     	;# 
  1660  0912                     	;# 
  1661  0913                     	;# 
  1662  0914                     	;# 
  1663  0915                     	;# 
  1664  0916                     	;# 
  1665  0918                     	;# 
  1666  0919                     	;# 
  1667  091A                     	;# 
  1668  091B                     	;# 
  1669  091C                     	;# 
  1670  091D                     	;# 
  1671  091E                     	;# 
  1672  091F                     	;# 
  1673  0E0F                     	;# 
  1674  0E10                     	;# 
  1675  0E11                     	;# 
  1676  0E12                     	;# 
  1677  0E13                     	;# 
  1678  0E14                     	;# 
  1679  0E15                     	;# 
  1680  0E16                     	;# 
  1681  0E17                     	;# 
  1682  0E18                     	;# 
  1683  0E19                     	;# 
  1684  0E1A                     	;# 
  1685  0E1B                     	;# 
  1686  0E1C                     	;# 
  1687  0E1D                     	;# 
  1688  0E1E                     	;# 
  1689  0E1F                     	;# 
  1690  0E20                     	;# 
  1691  0E21                     	;# 
  1692  0E22                     	;# 
  1693  0E24                     	;# 
  1694  0E25                     	;# 
  1695  0E28                     	;# 
  1696  0E29                     	;# 
  1697  0E2A                     	;# 
  1698  0E2B                     	;# 
  1699  0E2C                     	;# 
  1700  0E2D                     	;# 
  1701  0E2E                     	;# 
  1702  0E2F                     	;# 
  1703  0E90                     	;# 
  1704  0E91                     	;# 
  1705  0E92                     	;# 
  1706  0E94                     	;# 
  1707  0E95                     	;# 
  1708  0EA0                     	;# 
  1709  0EA1                     	;# 
  1710  0EA2                     	;# 
  1711  0EA3                     	;# 
  1712  0EA4                     	;# 
  1713  0EA5                     	;# 
  1714  0F0F                     	;# 
  1715  0F10                     	;# 
  1716  0F11                     	;# 
  1717  0F12                     	;# 
  1718  0F13                     	;# 
  1719  0F14                     	;# 
  1720  0F15                     	;# 
  1721  0F16                     	;# 
  1722  0F17                     	;# 
  1723  0F18                     	;# 
  1724  0F19                     	;# 
  1725  0F1A                     	;# 
  1726  0F1B                     	;# 
  1727  0F1C                     	;# 
  1728  0F1D                     	;# 
  1729  0F1E                     	;# 
  1730  0F1F                     	;# 
  1731  0F20                     	;# 
  1732  0F21                     	;# 
  1733  0F22                     	;# 
  1734  0F23                     	;# 
  1735  0F24                     	;# 
  1736  0F25                     	;# 
  1737  0F26                     	;# 
  1738  0F27                     	;# 
  1739  0F28                     	;# 
  1740  0F29                     	;# 
  1741  0F2A                     	;# 
  1742  0F2B                     	;# 
  1743  0F2C                     	;# 
  1744  0F2D                     	;# 
  1745  0F2E                     	;# 
  1746  0F2F                     	;# 
  1747  0F30                     	;# 
  1748  0F31                     	;# 
  1749  0F32                     	;# 
  1750  0F33                     	;# 
  1751  0F34                     	;# 
  1752  0F35                     	;# 
  1753  0F36                     	;# 
  1754  0F37                     	;# 
  1755  0FE4                     	;# 
  1756  0FE5                     	;# 
  1757  0FE6                     	;# 
  1758  0FE7                     	;# 
  1759  0FE8                     	;# 
  1760  0FE9                     	;# 
  1761  0FEA                     	;# 
  1762  0FEB                     	;# 
  1763  0FED                     	;# 
  1764  0FEE                     	;# 
  1765  0FEF                     	;# 
  1766  0000                     	;# 
  1767  0001                     	;# 
  1768  0002                     	;# 
  1769  0003                     	;# 
  1770  0004                     	;# 
  1771  0005                     	;# 
  1772  0006                     	;# 
  1773  0007                     	;# 
  1774  0008                     	;# 
  1775  0009                     	;# 
  1776  000A                     	;# 
  1777  000B                     	;# 
  1778  000C                     	;# 
  1779  000E                     	;# 
  1780  0010                     	;# 
  1781  0011                     	;# 
  1782  0012                     	;# 
  1783  0013                     	;# 
  1784  0014                     	;# 
  1785  0015                     	;# 
  1786  0015                     	;# 
  1787  0016                     	;# 
  1788  0016                     	;# 
  1789  0017                     	;# 
  1790  0018                     	;# 
  1791  0019                     	;# 
  1792  0019                     	;# 
  1793  001A                     	;# 
  1794  001B                     	;# 
  1795  001C                     	;# 
  1796  001D                     	;# 
  1797  001E                     	;# 
  1798  001F                     	;# 
  1799  008C                     	;# 
  1800  008E                     	;# 
  1801  0090                     	;# 
  1802  0091                     	;# 
  1803  0092                     	;# 
  1804  0093                     	;# 
  1805  0094                     	;# 
  1806  0097                     	;# 
  1807  009B                     	;# 
  1808  009B                     	;# 
  1809  009C                     	;# 
  1810  009D                     	;# 
  1811  009E                     	;# 
  1812  009F                     	;# 
  1813  010C                     	;# 
  1814  010E                     	;# 
  1815  0111                     	;# 
  1816  0112                     	;# 
  1817  0113                     	;# 
  1818  0114                     	;# 
  1819  0115                     	;# 
  1820  0116                     	;# 
  1821  0117                     	;# 
  1822  0118                     	;# 
  1823  0119                     	;# 
  1824  018C                     	;# 
  1825  018E                     	;# 
  1826  0197                     	;# 
  1827  0199                     	;# 
  1828  0199                     	;# 
  1829  0199                     	;# 
  1830  019A                     	;# 
  1831  019A                     	;# 
  1832  019A                     	;# 
  1833  019B                     	;# 
  1834  019B                     	;# 
  1835  019B                     	;# 
  1836  019B                     	;# 
  1837  019B                     	;# 
  1838  019C                     	;# 
  1839  019C                     	;# 
  1840  019C                     	;# 
  1841  019D                     	;# 
  1842  019D                     	;# 
  1843  019D                     	;# 
  1844  019E                     	;# 
  1845  019E                     	;# 
  1846  019E                     	;# 
  1847  019F                     	;# 
  1848  019F                     	;# 
  1849  019F                     	;# 
  1850  019F                     	;# 
  1851  019F                     	;# 
  1852  020C                     	;# 
  1853  020E                     	;# 
  1854  0211                     	;# 
  1855  0211                     	;# 
  1856  0212                     	;# 
  1857  0212                     	;# 
  1858  0213                     	;# 
  1859  0213                     	;# 
  1860  0214                     	;# 
  1861  0214                     	;# 
  1862  0215                     	;# 
  1863  0215                     	;# 
  1864  0215                     	;# 
  1865  0215                     	;# 
  1866  0216                     	;# 
  1867  0216                     	;# 
  1868  0217                     	;# 
  1869  0217                     	;# 
  1870  0219                     	;# 
  1871  021A                     	;# 
  1872  021B                     	;# 
  1873  021C                     	;# 
  1874  021D                     	;# 
  1875  021D                     	;# 
  1876  021E                     	;# 
  1877  021F                     	;# 
  1878  028C                     	;# 
  1879  028E                     	;# 
  1880  0291                     	;# 
  1881  0291                     	;# 
  1882  0292                     	;# 
  1883  0293                     	;# 
  1884  0294                     	;# 
  1885  0295                     	;# 
  1886  0295                     	;# 
  1887  0296                     	;# 
  1888  0297                     	;# 
  1889  0298                     	;# 
  1890  029F                     	;# 
  1891  030C                     	;# 
  1892  030E                     	;# 
  1893  0311                     	;# 
  1894  0311                     	;# 
  1895  0312                     	;# 
  1896  0313                     	;# 
  1897  0314                     	;# 
  1898  0315                     	;# 
  1899  0315                     	;# 
  1900  0316                     	;# 
  1901  0317                     	;# 
  1902  0318                     	;# 
  1903  038C                     	;# 
  1904  038E                     	;# 
  1905  0391                     	;# 
  1906  0392                     	;# 
  1907  0393                     	;# 
  1908  0397                     	;# 
  1909  0398                     	;# 
  1910  0399                     	;# 
  1911  039A                     	;# 
  1912  039C                     	;# 
  1913  039D                     	;# 
  1914  039E                     	;# 
  1915  039F                     	;# 
  1916  0411                     	;# 
  1917  0411                     	;# 
  1918  0412                     	;# 
  1919  0413                     	;# 
  1920  0414                     	;# 
  1921  0415                     	;# 
  1922  0416                     	;# 
  1923  0417                     	;# 
  1924  0418                     	;# 
  1925  0418                     	;# 
  1926  0419                     	;# 
  1927  041A                     	;# 
  1928  041B                     	;# 
  1929  041C                     	;# 
  1930  041D                     	;# 
  1931  041E                     	;# 
  1932  041F                     	;# 
  1933  0498                     	;# 
  1934  0498                     	;# 
  1935  0499                     	;# 
  1936  049A                     	;# 
  1937  049B                     	;# 
  1938  049B                     	;# 
  1939  049C                     	;# 
  1940  049D                     	;# 
  1941  049E                     	;# 
  1942  049F                     	;# 
  1943  0617                     	;# 
  1944  0618                     	;# 
  1945  0619                     	;# 
  1946  0619                     	;# 
  1947  061A                     	;# 
  1948  061B                     	;# 
  1949  061C                     	;# 
  1950  061C                     	;# 
  1951  061F                     	;# 
  1952  0691                     	;# 
  1953  0692                     	;# 
  1954  0693                     	;# 
  1955  0694                     	;# 
  1956  0695                     	;# 
  1957  0696                     	;# 
  1958  0697                     	;# 
  1959  0698                     	;# 
  1960  0699                     	;# 
  1961  0711                     	;# 
  1962  0712                     	;# 
  1963  0713                     	;# 
  1964  0714                     	;# 
  1965  0715                     	;# 
  1966  0716                     	;# 
  1967  0717                     	;# 
  1968  0718                     	;# 
  1969  0719                     	;# 
  1970  0891                     	;# 
  1971  0891                     	;# 
  1972  0891                     	;# 
  1973  0891                     	;# 
  1974  0891                     	;# 
  1975  0891                     	;# 
  1976  0892                     	;# 
  1977  0892                     	;# 
  1978  0892                     	;# 
  1979  0893                     	;# 
  1980  0893                     	;# 
  1981  0893                     	;# 
  1982  0893                     	;# 
  1983  0893                     	;# 
  1984  0893                     	;# 
  1985  0894                     	;# 
  1986  0894                     	;# 
  1987  0894                     	;# 
  1988  0895                     	;# 
  1989  0895                     	;# 
  1990  0895                     	;# 
  1991  0896                     	;# 
  1992  0896                     	;# 
  1993  0896                     	;# 
  1994  089B                     	;# 
  1995  0911                     	;# 
  1996  0912                     	;# 
  1997  0913                     	;# 
  1998  0914                     	;# 
  1999  0915                     	;# 
  2000  0916                     	;# 
  2001  0918                     	;# 
  2002  0919                     	;# 
  2003  091A                     	;# 
  2004  091B                     	;# 
  2005  091C                     	;# 
  2006  091D                     	;# 
  2007  091E                     	;# 
  2008  091F                     	;# 
  2009  0E0F                     	;# 
  2010  0E10                     	;# 
  2011  0E11                     	;# 
  2012  0E12                     	;# 
  2013  0E13                     	;# 
  2014  0E14                     	;# 
  2015  0E15                     	;# 
  2016  0E16                     	;# 
  2017  0E17                     	;# 
  2018  0E18                     	;# 
  2019  0E19                     	;# 
  2020  0E1A                     	;# 
  2021  0E1B                     	;# 
  2022  0E1C                     	;# 
  2023  0E1D                     	;# 
  2024  0E1E                     	;# 
  2025  0E1F                     	;# 
  2026  0E20                     	;# 
  2027  0E21                     	;# 
  2028  0E22                     	;# 
  2029  0E24                     	;# 
  2030  0E25                     	;# 
  2031  0E28                     	;# 
  2032  0E29                     	;# 
  2033  0E2A                     	;# 
  2034  0E2B                     	;# 
  2035  0E2C                     	;# 
  2036  0E2D                     	;# 
  2037  0E2E                     	;# 
  2038  0E2F                     	;# 
  2039  0E90                     	;# 
  2040  0E91                     	;# 
  2041  0E92                     	;# 
  2042  0E94                     	;# 
  2043  0E95                     	;# 
  2044  0EA0                     	;# 
  2045  0EA1                     	;# 
  2046  0EA2                     	;# 
  2047  0EA3                     	;# 
  2048  0EA4                     	;# 
  2049  0EA5                     	;# 
  2050  0F0F                     	;# 
  2051  0F10                     	;# 
  2052  0F11                     	;# 
  2053  0F12                     	;# 
  2054  0F13                     	;# 
  2055  0F14                     	;# 
  2056  0F15                     	;# 
  2057  0F16                     	;# 
  2058  0F17                     	;# 
  2059  0F18                     	;# 
  2060  0F19                     	;# 
  2061  0F1A                     	;# 
  2062  0F1B                     	;# 
  2063  0F1C                     	;# 
  2064  0F1D                     	;# 
  2065  0F1E                     	;# 
  2066  0F1F                     	;# 
  2067  0F20                     	;# 
  2068  0F21                     	;# 
  2069  0F22                     	;# 
  2070  0F23                     	;# 
  2071  0F24                     	;# 
  2072  0F25                     	;# 
  2073  0F26                     	;# 
  2074  0F27                     	;# 
  2075  0F28                     	;# 
  2076  0F29                     	;# 
  2077  0F2A                     	;# 
  2078  0F2B                     	;# 
  2079  0F2C                     	;# 
  2080  0F2D                     	;# 
  2081  0F2E                     	;# 
  2082  0F2F                     	;# 
  2083  0F30                     	;# 
  2084  0F31                     	;# 
  2085  0F32                     	;# 
  2086  0F33                     	;# 
  2087  0F34                     	;# 
  2088  0F35                     	;# 
  2089  0F36                     	;# 
  2090  0F37                     	;# 
  2091  0FE4                     	;# 
  2092  0FE5                     	;# 
  2093  0FE6                     	;# 
  2094  0FE7                     	;# 
  2095  0FE8                     	;# 
  2096  0FE9                     	;# 
  2097  0FEA                     	;# 
  2098  0FEB                     	;# 
  2099  0FED                     	;# 
  2100  0FEE                     	;# 
  2101  0FEF                     	;# 
  2102  0000                     	;# 
  2103  0001                     	;# 
  2104  0002                     	;# 
  2105  0003                     	;# 
  2106  0004                     	;# 
  2107  0005                     	;# 
  2108  0006                     	;# 
  2109  0007                     	;# 
  2110  0008                     	;# 
  2111  0009                     	;# 
  2112  000A                     	;# 
  2113  000B                     	;# 
  2114  000C                     	;# 
  2115  000E                     	;# 
  2116  0010                     	;# 
  2117  0011                     	;# 
  2118  0012                     	;# 
  2119  0013                     	;# 
  2120  0014                     	;# 
  2121  0015                     	;# 
  2122  0015                     	;# 
  2123  0016                     	;# 
  2124  0016                     	;# 
  2125  0017                     	;# 
  2126  0018                     	;# 
  2127  0019                     	;# 
  2128  0019                     	;# 
  2129  001A                     	;# 
  2130  001B                     	;# 
  2131  001C                     	;# 
  2132  001D                     	;# 
  2133  001E                     	;# 
  2134  001F                     	;# 
  2135  008C                     	;# 
  2136  008E                     	;# 
  2137  0090                     	;# 
  2138  0091                     	;# 
  2139  0092                     	;# 
  2140  0093                     	;# 
  2141  0094                     	;# 
  2142  0097                     	;# 
  2143  009B                     	;# 
  2144  009B                     	;# 
  2145  009C                     	;# 
  2146  009D                     	;# 
  2147  009E                     	;# 
  2148  009F                     	;# 
  2149  010C                     	;# 
  2150  010E                     	;# 
  2151  0111                     	;# 
  2152  0112                     	;# 
  2153  0113                     	;# 
  2154  0114                     	;# 
  2155  0115                     	;# 
  2156  0116                     	;# 
  2157  0117                     	;# 
  2158  0118                     	;# 
  2159  0119                     	;# 
  2160  018C                     	;# 
  2161  018E                     	;# 
  2162  0197                     	;# 
  2163  0199                     	;# 
  2164  0199                     	;# 
  2165  0199                     	;# 
  2166  019A                     	;# 
  2167  019A                     	;# 
  2168  019A                     	;# 
  2169  019B                     	;# 
  2170  019B                     	;# 
  2171  019B                     	;# 
  2172  019B                     	;# 
  2173  019B                     	;# 
  2174  019C                     	;# 
  2175  019C                     	;# 
  2176  019C                     	;# 
  2177  019D                     	;# 
  2178  019D                     	;# 
  2179  019D                     	;# 
  2180  019E                     	;# 
  2181  019E                     	;# 
  2182  019E                     	;# 
  2183  019F                     	;# 
  2184  019F                     	;# 
  2185  019F                     	;# 
  2186  019F                     	;# 
  2187  019F                     	;# 
  2188  020C                     	;# 
  2189  020E                     	;# 
  2190  0211                     	;# 
  2191  0211                     	;# 
  2192  0212                     	;# 
  2193  0212                     	;# 
  2194  0213                     	;# 
  2195  0213                     	;# 
  2196  0214                     	;# 
  2197  0214                     	;# 
  2198  0215                     	;# 
  2199  0215                     	;# 
  2200  0215                     	;# 
  2201  0215                     	;# 
  2202  0216                     	;# 
  2203  0216                     	;# 
  2204  0217                     	;# 
  2205  0217                     	;# 
  2206  0219                     	;# 
  2207  021A                     	;# 
  2208  021B                     	;# 
  2209  021C                     	;# 
  2210  021D                     	;# 
  2211  021D                     	;# 
  2212  021E                     	;# 
  2213  021F                     	;# 
  2214  028C                     	;# 
  2215  028E                     	;# 
  2216  0291                     	;# 
  2217  0291                     	;# 
  2218  0292                     	;# 
  2219  0293                     	;# 
  2220  0294                     	;# 
  2221  0295                     	;# 
  2222  0295                     	;# 
  2223  0296                     	;# 
  2224  0297                     	;# 
  2225  0298                     	;# 
  2226  029F                     	;# 
  2227  030C                     	;# 
  2228  030E                     	;# 
  2229  0311                     	;# 
  2230  0311                     	;# 
  2231  0312                     	;# 
  2232  0313                     	;# 
  2233  0314                     	;# 
  2234  0315                     	;# 
  2235  0315                     	;# 
  2236  0316                     	;# 
  2237  0317                     	;# 
  2238  0318                     	;# 
  2239  038C                     	;# 
  2240  038E                     	;# 
  2241  0391                     	;# 
  2242  0392                     	;# 
  2243  0393                     	;# 
  2244  0397                     	;# 
  2245  0398                     	;# 
  2246  0399                     	;# 
  2247  039A                     	;# 
  2248  039C                     	;# 
  2249  039D                     	;# 
  2250  039E                     	;# 
  2251  039F                     	;# 
  2252  0411                     	;# 
  2253  0411                     	;# 
  2254  0412                     	;# 
  2255  0413                     	;# 
  2256  0414                     	;# 
  2257  0415                     	;# 
  2258  0416                     	;# 
  2259  0417                     	;# 
  2260  0418                     	;# 
  2261  0418                     	;# 
  2262  0419                     	;# 
  2263  041A                     	;# 
  2264  041B                     	;# 
  2265  041C                     	;# 
  2266  041D                     	;# 
  2267  041E                     	;# 
  2268  041F                     	;# 
  2269  0498                     	;# 
  2270  0498                     	;# 
  2271  0499                     	;# 
  2272  049A                     	;# 
  2273  049B                     	;# 
  2274  049B                     	;# 
  2275  049C                     	;# 
  2276  049D                     	;# 
  2277  049E                     	;# 
  2278  049F                     	;# 
  2279  0617                     	;# 
  2280  0618                     	;# 
  2281  0619                     	;# 
  2282  0619                     	;# 
  2283  061A                     	;# 
  2284  061B                     	;# 
  2285  061C                     	;# 
  2286  061C                     	;# 
  2287  061F                     	;# 
  2288  0691                     	;# 
  2289  0692                     	;# 
  2290  0693                     	;# 
  2291  0694                     	;# 
  2292  0695                     	;# 
  2293  0696                     	;# 
  2294  0697                     	;# 
  2295  0698                     	;# 
  2296  0699                     	;# 
  2297  0711                     	;# 
  2298  0712                     	;# 
  2299  0713                     	;# 
  2300  0714                     	;# 
  2301  0715                     	;# 
  2302  0716                     	;# 
  2303  0717                     	;# 
  2304  0718                     	;# 
  2305  0719                     	;# 
  2306  0891                     	;# 
  2307  0891                     	;# 
  2308  0891                     	;# 
  2309  0891                     	;# 
  2310  0891                     	;# 
  2311  0891                     	;# 
  2312  0892                     	;# 
  2313  0892                     	;# 
  2314  0892                     	;# 
  2315  0893                     	;# 
  2316  0893                     	;# 
  2317  0893                     	;# 
  2318  0893                     	;# 
  2319  0893                     	;# 
  2320  0893                     	;# 
  2321  0894                     	;# 
  2322  0894                     	;# 
  2323  0894                     	;# 
  2324  0895                     	;# 
  2325  0895                     	;# 
  2326  0895                     	;# 
  2327  0896                     	;# 
  2328  0896                     	;# 
  2329  0896                     	;# 
  2330  089B                     	;# 
  2331  0911                     	;# 
  2332  0912                     	;# 
  2333  0913                     	;# 
  2334  0914                     	;# 
  2335  0915                     	;# 
  2336  0916                     	;# 
  2337  0918                     	;# 
  2338  0919                     	;# 
  2339  091A                     	;# 
  2340  091B                     	;# 
  2341  091C                     	;# 
  2342  091D                     	;# 
  2343  091E                     	;# 
  2344  091F                     	;# 
  2345  0E0F                     	;# 
  2346  0E10                     	;# 
  2347  0E11                     	;# 
  2348  0E12                     	;# 
  2349  0E13                     	;# 
  2350  0E14                     	;# 
  2351  0E15                     	;# 
  2352  0E16                     	;# 
  2353  0E17                     	;# 
  2354  0E18                     	;# 
  2355  0E19                     	;# 
  2356  0E1A                     	;# 
  2357  0E1B                     	;# 
  2358  0E1C                     	;# 
  2359  0E1D                     	;# 
  2360  0E1E                     	;# 
  2361  0E1F                     	;# 
  2362  0E20                     	;# 
  2363  0E21                     	;# 
  2364  0E22                     	;# 
  2365  0E24                     	;# 
  2366  0E25                     	;# 
  2367  0E28                     	;# 
  2368  0E29                     	;# 
  2369  0E2A                     	;# 
  2370  0E2B                     	;# 
  2371  0E2C                     	;# 
  2372  0E2D                     	;# 
  2373  0E2E                     	;# 
  2374  0E2F                     	;# 
  2375  0E90                     	;# 
  2376  0E91                     	;# 
  2377  0E92                     	;# 
  2378  0E94                     	;# 
  2379  0E95                     	;# 
  2380  0EA0                     	;# 
  2381  0EA1                     	;# 
  2382  0EA2                     	;# 
  2383  0EA3                     	;# 
  2384  0EA4                     	;# 
  2385  0EA5                     	;# 
  2386  0F0F                     	;# 
  2387  0F10                     	;# 
  2388  0F11                     	;# 
  2389  0F12                     	;# 
  2390  0F13                     	;# 
  2391  0F14                     	;# 
  2392  0F15                     	;# 
  2393  0F16                     	;# 
  2394  0F17                     	;# 
  2395  0F18                     	;# 
  2396  0F19                     	;# 
  2397  0F1A                     	;# 
  2398  0F1B                     	;# 
  2399  0F1C                     	;# 
  2400  0F1D                     	;# 
  2401  0F1E                     	;# 
  2402  0F1F                     	;# 
  2403  0F20                     	;# 
  2404  0F21                     	;# 
  2405  0F22                     	;# 
  2406  0F23                     	;# 
  2407  0F24                     	;# 
  2408  0F25                     	;# 
  2409  0F26                     	;# 
  2410  0F27                     	;# 
  2411  0F28                     	;# 
  2412  0F29                     	;# 
  2413  0F2A                     	;# 
  2414  0F2B                     	;# 
  2415  0F2C                     	;# 
  2416  0F2D                     	;# 
  2417  0F2E                     	;# 
  2418  0F2F                     	;# 
  2419  0F30                     	;# 
  2420  0F31                     	;# 
  2421  0F32                     	;# 
  2422  0F33                     	;# 
  2423  0F34                     	;# 
  2424  0F35                     	;# 
  2425  0F36                     	;# 
  2426  0F37                     	;# 
  2427  0FE4                     	;# 
  2428  0FE5                     	;# 
  2429  0FE6                     	;# 
  2430  0FE7                     	;# 
  2431  0FE8                     	;# 
  2432  0FE9                     	;# 
  2433  0FEA                     	;# 
  2434  0FEB                     	;# 
  2435  0FED                     	;# 
  2436  0FEE                     	;# 
  2437  0FEF                     	;# 
  2438  0000                     	;# 
  2439  0001                     	;# 
  2440  0002                     	;# 
  2441  0003                     	;# 
  2442  0004                     	;# 
  2443  0005                     	;# 
  2444  0006                     	;# 
  2445  0007                     	;# 
  2446  0008                     	;# 
  2447  0009                     	;# 
  2448  000A                     	;# 
  2449  000B                     	;# 
  2450  000C                     	;# 
  2451  000E                     	;# 
  2452  0010                     	;# 
  2453  0011                     	;# 
  2454  0012                     	;# 
  2455  0013                     	;# 
  2456  0014                     	;# 
  2457  0015                     	;# 
  2458  0015                     	;# 
  2459  0016                     	;# 
  2460  0016                     	;# 
  2461  0017                     	;# 
  2462  0018                     	;# 
  2463  0019                     	;# 
  2464  0019                     	;# 
  2465  001A                     	;# 
  2466  001B                     	;# 
  2467  001C                     	;# 
  2468  001D                     	;# 
  2469  001E                     	;# 
  2470  001F                     	;# 
  2471  008C                     	;# 
  2472  008E                     	;# 
  2473  0090                     	;# 
  2474  0091                     	;# 
  2475  0092                     	;# 
  2476  0093                     	;# 
  2477  0094                     	;# 
  2478  0097                     	;# 
  2479  009B                     	;# 
  2480  009B                     	;# 
  2481  009C                     	;# 
  2482  009D                     	;# 
  2483  009E                     	;# 
  2484  009F                     	;# 
  2485  010C                     	;# 
  2486  010E                     	;# 
  2487  0111                     	;# 
  2488  0112                     	;# 
  2489  0113                     	;# 
  2490  0114                     	;# 
  2491  0115                     	;# 
  2492  0116                     	;# 
  2493  0117                     	;# 
  2494  0118                     	;# 
  2495  0119                     	;# 
  2496  018C                     	;# 
  2497  018E                     	;# 
  2498  0197                     	;# 
  2499  0199                     	;# 
  2500  0199                     	;# 
  2501  0199                     	;# 
  2502  019A                     	;# 
  2503  019A                     	;# 
  2504  019A                     	;# 
  2505  019B                     	;# 
  2506  019B                     	;# 
  2507  019B                     	;# 
  2508  019B                     	;# 
  2509  019B                     	;# 
  2510  019C                     	;# 
  2511  019C                     	;# 
  2512  019C                     	;# 
  2513  019D                     	;# 
  2514  019D                     	;# 
  2515  019D                     	;# 
  2516  019E                     	;# 
  2517  019E                     	;# 
  2518  019E                     	;# 
  2519  019F                     	;# 
  2520  019F                     	;# 
  2521  019F                     	;# 
  2522  019F                     	;# 
  2523  019F                     	;# 
  2524  020C                     	;# 
  2525  020E                     	;# 
  2526  0211                     	;# 
  2527  0211                     	;# 
  2528  0212                     	;# 
  2529  0212                     	;# 
  2530  0213                     	;# 
  2531  0213                     	;# 
  2532  0214                     	;# 
  2533  0214                     	;# 
  2534  0215                     	;# 
  2535  0215                     	;# 
  2536  0215                     	;# 
  2537  0215                     	;# 
  2538  0216                     	;# 
  2539  0216                     	;# 
  2540  0217                     	;# 
  2541  0217                     	;# 
  2542  0219                     	;# 
  2543  021A                     	;# 
  2544  021B                     	;# 
  2545  021C                     	;# 
  2546  021D                     	;# 
  2547  021D                     	;# 
  2548  021E                     	;# 
  2549  021F                     	;# 
  2550  028C                     	;# 
  2551  028E                     	;# 
  2552  0291                     	;# 
  2553  0291                     	;# 
  2554  0292                     	;# 
  2555  0293                     	;# 
  2556  0294                     	;# 
  2557  0295                     	;# 
  2558  0295                     	;# 
  2559  0296                     	;# 
  2560  0297                     	;# 
  2561  0298                     	;# 
  2562  029F                     	;# 
  2563  030C                     	;# 
  2564  030E                     	;# 
  2565  0311                     	;# 
  2566  0311                     	;# 
  2567  0312                     	;# 
  2568  0313                     	;# 
  2569  0314                     	;# 
  2570  0315                     	;# 
  2571  0315                     	;# 
  2572  0316                     	;# 
  2573  0317                     	;# 
  2574  0318                     	;# 
  2575  038C                     	;# 
  2576  038E                     	;# 
  2577  0391                     	;# 
  2578  0392                     	;# 
  2579  0393                     	;# 
  2580  0397                     	;# 
  2581  0398                     	;# 
  2582  0399                     	;# 
  2583  039A                     	;# 
  2584  039C                     	;# 
  2585  039D                     	;# 
  2586  039E                     	;# 
  2587  039F                     	;# 
  2588  0411                     	;# 
  2589  0411                     	;# 
  2590  0412                     	;# 
  2591  0413                     	;# 
  2592  0414                     	;# 
  2593  0415                     	;# 
  2594  0416                     	;# 
  2595  0417                     	;# 
  2596  0418                     	;# 
  2597  0418                     	;# 
  2598  0419                     	;# 
  2599  041A                     	;# 
  2600  041B                     	;# 
  2601  041C                     	;# 
  2602  041D                     	;# 
  2603  041E                     	;# 
  2604  041F                     	;# 
  2605  0498                     	;# 
  2606  0498                     	;# 
  2607  0499                     	;# 
  2608  049A                     	;# 
  2609  049B                     	;# 
  2610  049B                     	;# 
  2611  049C                     	;# 
  2612  049D                     	;# 
  2613  049E                     	;# 
  2614  049F                     	;# 
  2615  0617                     	;# 
  2616  0618                     	;# 
  2617  0619                     	;# 
  2618  0619                     	;# 
  2619  061A                     	;# 
  2620  061B                     	;# 
  2621  061C                     	;# 
  2622  061C                     	;# 
  2623  061F                     	;# 
  2624  0691                     	;# 
  2625  0692                     	;# 
  2626  0693                     	;# 
  2627  0694                     	;# 
  2628  0695                     	;# 
  2629  0696                     	;# 
  2630  0697                     	;# 
  2631  0698                     	;# 
  2632  0699                     	;# 
  2633  0711                     	;# 
  2634  0712                     	;# 
  2635  0713                     	;# 
  2636  0714                     	;# 
  2637  0715                     	;# 
  2638  0716                     	;# 
  2639  0717                     	;# 
  2640  0718                     	;# 
  2641  0719                     	;# 
  2642  0891                     	;# 
  2643  0891                     	;# 
  2644  0891                     	;# 
  2645  0891                     	;# 
  2646  0891                     	;# 
  2647  0891                     	;# 
  2648  0892                     	;# 
  2649  0892                     	;# 
  2650  0892                     	;# 
  2651  0893                     	;# 
  2652  0893                     	;# 
  2653  0893                     	;# 
  2654  0893                     	;# 
  2655  0893                     	;# 
  2656  0893                     	;# 
  2657  0894                     	;# 
  2658  0894                     	;# 
  2659  0894                     	;# 
  2660  0895                     	;# 
  2661  0895                     	;# 
  2662  0895                     	;# 
  2663  0896                     	;# 
  2664  0896                     	;# 
  2665  0896                     	;# 
  2666  089B                     	;# 
  2667  0911                     	;# 
  2668  0912                     	;# 
  2669  0913                     	;# 
  2670  0914                     	;# 
  2671  0915                     	;# 
  2672  0916                     	;# 
  2673  0918                     	;# 
  2674  0919                     	;# 
  2675  091A                     	;# 
  2676  091B                     	;# 
  2677  091C                     	;# 
  2678  091D                     	;# 
  2679  091E                     	;# 
  2680  091F                     	;# 
  2681  0E0F                     	;# 
  2682  0E10                     	;# 
  2683  0E11                     	;# 
  2684  0E12                     	;# 
  2685  0E13                     	;# 
  2686  0E14                     	;# 
  2687  0E15                     	;# 
  2688  0E16                     	;# 
  2689  0E17                     	;# 
  2690  0E18                     	;# 
  2691  0E19                     	;# 
  2692  0E1A                     	;# 
  2693  0E1B                     	;# 
  2694  0E1C                     	;# 
  2695  0E1D                     	;# 
  2696  0E1E                     	;# 
  2697  0E1F                     	;# 
  2698  0E20                     	;# 
  2699  0E21                     	;# 
  2700  0E22                     	;# 
  2701  0E24                     	;# 
  2702  0E25                     	;# 
  2703  0E28                     	;# 
  2704  0E29                     	;# 
  2705  0E2A                     	;# 
  2706  0E2B                     	;# 
  2707  0E2C                     	;# 
  2708  0E2D                     	;# 
  2709  0E2E                     	;# 
  2710  0E2F                     	;# 
  2711  0E90                     	;# 
  2712  0E91                     	;# 
  2713  0E92                     	;# 
  2714  0E94                     	;# 
  2715  0E95                     	;# 
  2716  0EA0                     	;# 
  2717  0EA1                     	;# 
  2718  0EA2                     	;# 
  2719  0EA3                     	;# 
  2720  0EA4                     	;# 
  2721  0EA5                     	;# 
  2722  0F0F                     	;# 
  2723  0F10                     	;# 
  2724  0F11                     	;# 
  2725  0F12                     	;# 
  2726  0F13                     	;# 
  2727  0F14                     	;# 
  2728  0F15                     	;# 
  2729  0F16                     	;# 
  2730  0F17                     	;# 
  2731  0F18                     	;# 
  2732  0F19                     	;# 
  2733  0F1A                     	;# 
  2734  0F1B                     	;# 
  2735  0F1C                     	;# 
  2736  0F1D                     	;# 
  2737  0F1E                     	;# 
  2738  0F1F                     	;# 
  2739  0F20                     	;# 
  2740  0F21                     	;# 
  2741  0F22                     	;# 
  2742  0F23                     	;# 
  2743  0F24                     	;# 
  2744  0F25                     	;# 
  2745  0F26                     	;# 
  2746  0F27                     	;# 
  2747  0F28                     	;# 
  2748  0F29                     	;# 
  2749  0F2A                     	;# 
  2750  0F2B                     	;# 
  2751  0F2C                     	;# 
  2752  0F2D                     	;# 
  2753  0F2E                     	;# 
  2754  0F2F                     	;# 
  2755  0F30                     	;# 
  2756  0F31                     	;# 
  2757  0F32                     	;# 
  2758  0F33                     	;# 
  2759  0F34                     	;# 
  2760  0F35                     	;# 
  2761  0F36                     	;# 
  2762  0F37                     	;# 
  2763  0FE4                     	;# 
  2764  0FE5                     	;# 
  2765  0FE6                     	;# 
  2766  0FE7                     	;# 
  2767  0FE8                     	;# 
  2768  0FE9                     	;# 
  2769  0FEA                     	;# 
  2770  0FEB                     	;# 
  2771  0FED                     	;# 
  2772  0FEE                     	;# 
  2773  0FEF                     	;# 
  2774  0000                     	;# 
  2775  0001                     	;# 
  2776  0002                     	;# 
  2777  0003                     	;# 
  2778  0004                     	;# 
  2779  0005                     	;# 
  2780  0006                     	;# 
  2781  0007                     	;# 
  2782  0008                     	;# 
  2783  0009                     	;# 
  2784  000A                     	;# 
  2785  000B                     	;# 
  2786  000C                     	;# 
  2787  000E                     	;# 
  2788  0010                     	;# 
  2789  0011                     	;# 
  2790  0012                     	;# 
  2791  0013                     	;# 
  2792  0014                     	;# 
  2793  0015                     	;# 
  2794  0015                     	;# 
  2795  0016                     	;# 
  2796  0016                     	;# 
  2797  0017                     	;# 
  2798  0018                     	;# 
  2799  0019                     	;# 
  2800  0019                     	;# 
  2801  001A                     	;# 
  2802  001B                     	;# 
  2803  001C                     	;# 
  2804  001D                     	;# 
  2805  001E                     	;# 
  2806  001F                     	;# 
  2807  008C                     	;# 
  2808  008E                     	;# 
  2809  0090                     	;# 
  2810  0091                     	;# 
  2811  0092                     	;# 
  2812  0093                     	;# 
  2813  0094                     	;# 
  2814  0097                     	;# 
  2815  009B                     	;# 
  2816  009B                     	;# 
  2817  009C                     	;# 
  2818  009D                     	;# 
  2819  009E                     	;# 
  2820  009F                     	;# 
  2821  010C                     	;# 
  2822  010E                     	;# 
  2823  0111                     	;# 
  2824  0112                     	;# 
  2825  0113                     	;# 
  2826  0114                     	;# 
  2827  0115                     	;# 
  2828  0116                     	;# 
  2829  0117                     	;# 
  2830  0118                     	;# 
  2831  0119                     	;# 
  2832  018C                     	;# 
  2833  018E                     	;# 
  2834  0197                     	;# 
  2835  0199                     	;# 
  2836  0199                     	;# 
  2837  0199                     	;# 
  2838  019A                     	;# 
  2839  019A                     	;# 
  2840  019A                     	;# 
  2841  019B                     	;# 
  2842  019B                     	;# 
  2843  019B                     	;# 
  2844  019B                     	;# 
  2845  019B                     	;# 
  2846  019C                     	;# 
  2847  019C                     	;# 
  2848  019C                     	;# 
  2849  019D                     	;# 
  2850  019D                     	;# 
  2851  019D                     	;# 
  2852  019E                     	;# 
  2853  019E                     	;# 
  2854  019E                     	;# 
  2855  019F                     	;# 
  2856  019F                     	;# 
  2857  019F                     	;# 
  2858  019F                     	;# 
  2859  019F                     	;# 
  2860  020C                     	;# 
  2861  020E                     	;# 
  2862  0211                     	;# 
  2863  0211                     	;# 
  2864  0212                     	;# 
  2865  0212                     	;# 
  2866  0213                     	;# 
  2867  0213                     	;# 
  2868  0214                     	;# 
  2869  0214                     	;# 
  2870  0215                     	;# 
  2871  0215                     	;# 
  2872  0215                     	;# 
  2873  0215                     	;# 
  2874  0216                     	;# 
  2875  0216                     	;# 
  2876  0217                     	;# 
  2877  0217                     	;# 
  2878  0219                     	;# 
  2879  021A                     	;# 
  2880  021B                     	;# 
  2881  021C                     	;# 
  2882  021D                     	;# 
  2883  021D                     	;# 
  2884  021E                     	;# 
  2885  021F                     	;# 
  2886  028C                     	;# 
  2887  028E                     	;# 
  2888  0291                     	;# 
  2889  0291                     	;# 
  2890  0292                     	;# 
  2891  0293                     	;# 
  2892  0294                     	;# 
  2893  0295                     	;# 
  2894  0295                     	;# 
  2895  0296                     	;# 
  2896  0297                     	;# 
  2897  0298                     	;# 
  2898  029F                     	;# 
  2899  030C                     	;# 
  2900  030E                     	;# 
  2901  0311                     	;# 
  2902  0311                     	;# 
  2903  0312                     	;# 
  2904  0313                     	;# 
  2905  0314                     	;# 
  2906  0315                     	;# 
  2907  0315                     	;# 
  2908  0316                     	;# 
  2909  0317                     	;# 
  2910  0318                     	;# 
  2911  038C                     	;# 
  2912  038E                     	;# 
  2913  0391                     	;# 
  2914  0392                     	;# 
  2915  0393                     	;# 
  2916  0397                     	;# 
  2917  0398                     	;# 
  2918  0399                     	;# 
  2919  039A                     	;# 
  2920  039C                     	;# 
  2921  039D                     	;# 
  2922  039E                     	;# 
  2923  039F                     	;# 
  2924  0411                     	;# 
  2925  0411                     	;# 
  2926  0412                     	;# 
  2927  0413                     	;# 
  2928  0414                     	;# 
  2929  0415                     	;# 
  2930  0416                     	;# 
  2931  0417                     	;# 
  2932  0418                     	;# 
  2933  0418                     	;# 
  2934  0419                     	;# 
  2935  041A                     	;# 
  2936  041B                     	;# 
  2937  041C                     	;# 
  2938  041D                     	;# 
  2939  041E                     	;# 
  2940  041F                     	;# 
  2941  0498                     	;# 
  2942  0498                     	;# 
  2943  0499                     	;# 
  2944  049A                     	;# 
  2945  049B                     	;# 
  2946  049B                     	;# 
  2947  049C                     	;# 
  2948  049D                     	;# 
  2949  049E                     	;# 
  2950  049F                     	;# 
  2951  0617                     	;# 
  2952  0618                     	;# 
  2953  0619                     	;# 
  2954  0619                     	;# 
  2955  061A                     	;# 
  2956  061B                     	;# 
  2957  061C                     	;# 
  2958  061C                     	;# 
  2959  061F                     	;# 
  2960  0691                     	;# 
  2961  0692                     	;# 
  2962  0693                     	;# 
  2963  0694                     	;# 
  2964  0695                     	;# 
  2965  0696                     	;# 
  2966  0697                     	;# 
  2967  0698                     	;# 
  2968  0699                     	;# 
  2969  0711                     	;# 
  2970  0712                     	;# 
  2971  0713                     	;# 
  2972  0714                     	;# 
  2973  0715                     	;# 
  2974  0716                     	;# 
  2975  0717                     	;# 
  2976  0718                     	;# 
  2977  0719                     	;# 
  2978  0891                     	;# 
  2979  0891                     	;# 
  2980  0891                     	;# 
  2981  0891                     	;# 
  2982  0891                     	;# 
  2983  0891                     	;# 
  2984  0892                     	;# 
  2985  0892                     	;# 
  2986  0892                     	;# 
  2987  0893                     	;# 
  2988  0893                     	;# 
  2989  0893                     	;# 
  2990  0893                     	;# 
  2991  0893                     	;# 
  2992  0893                     	;# 
  2993  0894                     	;# 
  2994  0894                     	;# 
  2995  0894                     	;# 
  2996  0895                     	;# 
  2997  0895                     	;# 
  2998  0895                     	;# 
  2999  0896                     	;# 
  3000  0896                     	;# 
  3001  0896                     	;# 
  3002  089B                     	;# 
  3003  0911                     	;# 
  3004  0912                     	;# 
  3005  0913                     	;# 
  3006  0914                     	;# 
  3007  0915                     	;# 
  3008  0916                     	;# 
  3009  0918                     	;# 
  3010  0919                     	;# 
  3011  091A                     	;# 
  3012  091B                     	;# 
  3013  091C                     	;# 
  3014  091D                     	;# 
  3015  091E                     	;# 
  3016  091F                     	;# 
  3017  0E0F                     	;# 
  3018  0E10                     	;# 
  3019  0E11                     	;# 
  3020  0E12                     	;# 
  3021  0E13                     	;# 
  3022  0E14                     	;# 
  3023  0E15                     	;# 
  3024  0E16                     	;# 
  3025  0E17                     	;# 
  3026  0E18                     	;# 
  3027  0E19                     	;# 
  3028  0E1A                     	;# 
  3029  0E1B                     	;# 
  3030  0E1C                     	;# 
  3031  0E1D                     	;# 
  3032  0E1E                     	;# 
  3033  0E1F                     	;# 
  3034  0E20                     	;# 
  3035  0E21                     	;# 
  3036  0E22                     	;# 
  3037  0E24                     	;# 
  3038  0E25                     	;# 
  3039  0E28                     	;# 
  3040  0E29                     	;# 
  3041  0E2A                     	;# 
  3042  0E2B                     	;# 
  3043  0E2C                     	;# 
  3044  0E2D                     	;# 
  3045  0E2E                     	;# 
  3046  0E2F                     	;# 
  3047  0E90                     	;# 
  3048  0E91                     	;# 
  3049  0E92                     	;# 
  3050  0E94                     	;# 
  3051  0E95                     	;# 
  3052  0EA0                     	;# 
  3053  0EA1                     	;# 
  3054  0EA2                     	;# 
  3055  0EA3                     	;# 
  3056  0EA4                     	;# 
  3057  0EA5                     	;# 
  3058  0F0F                     	;# 
  3059  0F10                     	;# 
  3060  0F11                     	;# 
  3061  0F12                     	;# 
  3062  0F13                     	;# 
  3063  0F14                     	;# 
  3064  0F15                     	;# 
  3065  0F16                     	;# 
  3066  0F17                     	;# 
  3067  0F18                     	;# 
  3068  0F19                     	;# 
  3069  0F1A                     	;# 
  3070  0F1B                     	;# 
  3071  0F1C                     	;# 
  3072  0F1D                     	;# 
  3073  0F1E                     	;# 
  3074  0F1F                     	;# 
  3075  0F20                     	;# 
  3076  0F21                     	;# 
  3077  0F22                     	;# 
  3078  0F23                     	;# 
  3079  0F24                     	;# 
  3080  0F25                     	;# 
  3081  0F26                     	;# 
  3082  0F27                     	;# 
  3083  0F28                     	;# 
  3084  0F29                     	;# 
  3085  0F2A                     	;# 
  3086  0F2B                     	;# 
  3087  0F2C                     	;# 
  3088  0F2D                     	;# 
  3089  0F2E                     	;# 
  3090  0F2F                     	;# 
  3091  0F30                     	;# 
  3092  0F31                     	;# 
  3093  0F32                     	;# 
  3094  0F33                     	;# 
  3095  0F34                     	;# 
  3096  0F35                     	;# 
  3097  0F36                     	;# 
  3098  0F37                     	;# 
  3099  0FE4                     	;# 
  3100  0FE5                     	;# 
  3101  0FE6                     	;# 
  3102  0FE7                     	;# 
  3103  0FE8                     	;# 
  3104  0FE9                     	;# 
  3105  0FEA                     	;# 
  3106  0FEB                     	;# 
  3107  0FED                     	;# 
  3108  0FEE                     	;# 
  3109  0FEF                     	;# 
  3110  0000                     	;# 
  3111  0001                     	;# 
  3112  0002                     	;# 
  3113  0003                     	;# 
  3114  0004                     	;# 
  3115  0005                     	;# 
  3116  0006                     	;# 
  3117  0007                     	;# 
  3118  0008                     	;# 
  3119  0009                     	;# 
  3120  000A                     	;# 
  3121  000B                     	;# 
  3122  000C                     	;# 
  3123  000E                     	;# 
  3124  0010                     	;# 
  3125  0011                     	;# 
  3126  0012                     	;# 
  3127  0013                     	;# 
  3128  0014                     	;# 
  3129  0015                     	;# 
  3130  0015                     	;# 
  3131  0016                     	;# 
  3132  0016                     	;# 
  3133  0017                     	;# 
  3134  0018                     	;# 
  3135  0019                     	;# 
  3136  0019                     	;# 
  3137  001A                     	;# 
  3138  001B                     	;# 
  3139  001C                     	;# 
  3140  001D                     	;# 
  3141  001E                     	;# 
  3142  001F                     	;# 
  3143  008C                     	;# 
  3144  008E                     	;# 
  3145  0090                     	;# 
  3146  0091                     	;# 
  3147  0092                     	;# 
  3148  0093                     	;# 
  3149  0094                     	;# 
  3150  0097                     	;# 
  3151  009B                     	;# 
  3152  009B                     	;# 
  3153  009C                     	;# 
  3154  009D                     	;# 
  3155  009E                     	;# 
  3156  009F                     	;# 
  3157  010C                     	;# 
  3158  010E                     	;# 
  3159  0111                     	;# 
  3160  0112                     	;# 
  3161  0113                     	;# 
  3162  0114                     	;# 
  3163  0115                     	;# 
  3164  0116                     	;# 
  3165  0117                     	;# 
  3166  0118                     	;# 
  3167  0119                     	;# 
  3168  018C                     	;# 
  3169  018E                     	;# 
  3170  0197                     	;# 
  3171  0199                     	;# 
  3172  0199                     	;# 
  3173  0199                     	;# 
  3174  019A                     	;# 
  3175  019A                     	;# 
  3176  019A                     	;# 
  3177  019B                     	;# 
  3178  019B                     	;# 
  3179  019B                     	;# 
  3180  019B                     	;# 
  3181  019B                     	;# 
  3182  019C                     	;# 
  3183  019C                     	;# 
  3184  019C                     	;# 
  3185  019D                     	;# 
  3186  019D                     	;# 
  3187  019D                     	;# 
  3188  019E                     	;# 
  3189  019E                     	;# 
  3190  019E                     	;# 
  3191  019F                     	;# 
  3192  019F                     	;# 
  3193  019F                     	;# 
  3194  019F                     	;# 
  3195  019F                     	;# 
  3196  020C                     	;# 
  3197  020E                     	;# 
  3198  0211                     	;# 
  3199  0211                     	;# 
  3200  0212                     	;# 
  3201  0212                     	;# 
  3202  0213                     	;# 
  3203  0213                     	;# 
  3204  0214                     	;# 
  3205  0214                     	;# 
  3206  0215                     	;# 
  3207  0215                     	;# 
  3208  0215                     	;# 
  3209  0215                     	;# 
  3210  0216                     	;# 
  3211  0216                     	;# 
  3212  0217                     	;# 
  3213  0217                     	;# 
  3214  0219                     	;# 
  3215  021A                     	;# 
  3216  021B                     	;# 
  3217  021C                     	;# 
  3218  021D                     	;# 
  3219  021D                     	;# 
  3220  021E                     	;# 
  3221  021F                     	;# 
  3222  028C                     	;# 
  3223  028E                     	;# 
  3224  0291                     	;# 
  3225  0291                     	;# 
  3226  0292                     	;# 
  3227  0293                     	;# 
  3228  0294                     	;# 
  3229  0295                     	;# 
  3230  0295                     	;# 
  3231  0296                     	;# 
  3232  0297                     	;# 
  3233  0298                     	;# 
  3234  029F                     	;# 
  3235  030C                     	;# 
  3236  030E                     	;# 
  3237  0311                     	;# 
  3238  0311                     	;# 
  3239  0312                     	;# 
  3240  0313                     	;# 
  3241  0314                     	;# 
  3242  0315                     	;# 
  3243  0315                     	;# 
  3244  0316                     	;# 
  3245  0317                     	;# 
  3246  0318                     	;# 
  3247  038C                     	;# 
  3248  038E                     	;# 
  3249  0391                     	;# 
  3250  0392                     	;# 
  3251  0393                     	;# 
  3252  0397                     	;# 
  3253  0398                     	;# 
  3254  0399                     	;# 
  3255  039A                     	;# 
  3256  039C                     	;# 
  3257  039D                     	;# 
  3258  039E                     	;# 
  3259  039F                     	;# 
  3260  0411                     	;# 
  3261  0411                     	;# 
  3262  0412                     	;# 
  3263  0413                     	;# 
  3264  0414                     	;# 
  3265  0415                     	;# 
  3266  0416                     	;# 
  3267  0417                     	;# 
  3268  0418                     	;# 
  3269  0418                     	;# 
  3270  0419                     	;# 
  3271  041A                     	;# 
  3272  041B                     	;# 
  3273  041C                     	;# 
  3274  041D                     	;# 
  3275  041E                     	;# 
  3276  041F                     	;# 
  3277  0498                     	;# 
  3278  0498                     	;# 
  3279  0499                     	;# 
  3280  049A                     	;# 
  3281  049B                     	;# 
  3282  049B                     	;# 
  3283  049C                     	;# 
  3284  049D                     	;# 
  3285  049E                     	;# 
  3286  049F                     	;# 
  3287  0617                     	;# 
  3288  0618                     	;# 
  3289  0619                     	;# 
  3290  0619                     	;# 
  3291  061A                     	;# 
  3292  061B                     	;# 
  3293  061C                     	;# 
  3294  061C                     	;# 
  3295  061F                     	;# 
  3296  0691                     	;# 
  3297  0692                     	;# 
  3298  0693                     	;# 
  3299  0694                     	;# 
  3300  0695                     	;# 
  3301  0696                     	;# 
  3302  0697                     	;# 
  3303  0698                     	;# 
  3304  0699                     	;# 
  3305  0711                     	;# 
  3306  0712                     	;# 
  3307  0713                     	;# 
  3308  0714                     	;# 
  3309  0715                     	;# 
  3310  0716                     	;# 
  3311  0717                     	;# 
  3312  0718                     	;# 
  3313  0719                     	;# 
  3314  0891                     	;# 
  3315  0891                     	;# 
  3316  0891                     	;# 
  3317  0891                     	;# 
  3318  0891                     	;# 
  3319  0891                     	;# 
  3320  0892                     	;# 
  3321  0892                     	;# 
  3322  0892                     	;# 
  3323  0893                     	;# 
  3324  0893                     	;# 
  3325  0893                     	;# 
  3326  0893                     	;# 
  3327  0893                     	;# 
  3328  0893                     	;# 
  3329  0894                     	;# 
  3330  0894                     	;# 
  3331  0894                     	;# 
  3332  0895                     	;# 
  3333  0895                     	;# 
  3334  0895                     	;# 
  3335  0896                     	;# 
  3336  0896                     	;# 
  3337  0896                     	;# 
  3338  089B                     	;# 
  3339  0911                     	;# 
  3340  0912                     	;# 
  3341  0913                     	;# 
  3342  0914                     	;# 
  3343  0915                     	;# 
  3344  0916                     	;# 
  3345  0918                     	;# 
  3346  0919                     	;# 
  3347  091A                     	;# 
  3348  091B                     	;# 
  3349  091C                     	;# 
  3350  091D                     	;# 
  3351  091E                     	;# 
  3352  091F                     	;# 
  3353  0E0F                     	;# 
  3354  0E10                     	;# 
  3355  0E11                     	;# 
  3356  0E12                     	;# 
  3357  0E13                     	;# 
  3358  0E14                     	;# 
  3359  0E15                     	;# 
  3360  0E16                     	;# 
  3361  0E17                     	;# 
  3362  0E18                     	;# 
  3363  0E19                     	;# 
  3364  0E1A                     	;# 
  3365  0E1B                     	;# 
  3366  0E1C                     	;# 
  3367  0E1D                     	;# 
  3368  0E1E                     	;# 
  3369  0E1F                     	;# 
  3370  0E20                     	;# 
  3371  0E21                     	;# 
  3372  0E22                     	;# 
  3373  0E24                     	;# 
  3374  0E25                     	;# 
  3375  0E28                     	;# 
  3376  0E29                     	;# 
  3377  0E2A                     	;# 
  3378  0E2B                     	;# 
  3379  0E2C                     	;# 
  3380  0E2D                     	;# 
  3381  0E2E                     	;# 
  3382  0E2F                     	;# 
  3383  0E90                     	;# 
  3384  0E91                     	;# 
  3385  0E92                     	;# 
  3386  0E94                     	;# 
  3387  0E95                     	;# 
  3388  0EA0                     	;# 
  3389  0EA1                     	;# 
  3390  0EA2                     	;# 
  3391  0EA3                     	;# 
  3392  0EA4                     	;# 
  3393  0EA5                     	;# 
  3394  0F0F                     	;# 
  3395  0F10                     	;# 
  3396  0F11                     	;# 
  3397  0F12                     	;# 
  3398  0F13                     	;# 
  3399  0F14                     	;# 
  3400  0F15                     	;# 
  3401  0F16                     	;# 
  3402  0F17                     	;# 
  3403  0F18                     	;# 
  3404  0F19                     	;# 
  3405  0F1A                     	;# 
  3406  0F1B                     	;# 
  3407  0F1C                     	;# 
  3408  0F1D                     	;# 
  3409  0F1E                     	;# 
  3410  0F1F                     	;# 
  3411  0F20                     	;# 
  3412  0F21                     	;# 
  3413  0F22                     	;# 
  3414  0F23                     	;# 
  3415  0F24                     	;# 
  3416  0F25                     	;# 
  3417  0F26                     	;# 
  3418  0F27                     	;# 
  3419  0F28                     	;# 
  3420  0F29                     	;# 
  3421  0F2A                     	;# 
  3422  0F2B                     	;# 
  3423  0F2C                     	;# 
  3424  0F2D                     	;# 
  3425  0F2E                     	;# 
  3426  0F2F                     	;# 
  3427  0F30                     	;# 
  3428  0F31                     	;# 
  3429  0F32                     	;# 
  3430  0F33                     	;# 
  3431  0F34                     	;# 
  3432  0F35                     	;# 
  3433  0F36                     	;# 
  3434  0F37                     	;# 
  3435  0FE4                     	;# 
  3436  0FE5                     	;# 
  3437  0FE6                     	;# 
  3438  0FE7                     	;# 
  3439  0FE8                     	;# 
  3440  0FE9                     	;# 
  3441  0FEA                     	;# 
  3442  0FEB                     	;# 
  3443  0FED                     	;# 
  3444  0FEE                     	;# 
  3445  0FEF                     	;_stage_stash
  3446                           
  3447 ;; Function _TMR1_DefaultInterruptHandler is unused but had its address taken
  3448  0000                     
  3449                           	psect	idataBANK0
  3450  04B0                     __pidataBANK0:	
  3451                           
  3452                           ;initializer for InitWigwagPattern@F436
  3453  04B0  3401               	retlw	1
  3454  04B1  3400               	retlw	0
  3455  04B2  3401               	retlw	1
  3456  04B3  3400               	retlw	0
  3457                           
  3458                           	psect	idataBANK1
  3459  04B4                     __pidataBANK1:	
  3460                           
  3461                           ;initializer for InitWigwagPattern@F439
  3462  04B4  3400               	retlw	0
  3463  04B5  3401               	retlw	1
  3464  04B6  3400               	retlw	0
  3465  04B7  3401               	retlw	1
  3466                           
  3467                           	psect	nvBANK0
  3468  0054                     __pnvBANK0:	
  3469  0054                     _TMR1_InterruptHandler:	
  3470  0054                     	ds	2
  3471  0056                     _timer1ReloadVal:	
  3472  0056                     	ds	2
  3473  0058                     _IOCCF0_InterruptHandler:	
  3474  0058                     	ds	2
  3475  000E                     _PORTCbits	set	14
  3476  001C                     _T1GCONbits	set	28
  3477  001B                     _T1CONbits	set	27
  3478  001B                     _T1CON	set	27
  3479  0019                     _TMR1L	set	25
  3480  001A                     _TMR1H	set	26
  3481  001C                     _T1GCON	set	28
  3482  0011                     _PIR1bits	set	17
  3483  000B                     _INTCONbits	set	11
  3484  0010                     _PIR0bits	set	16
  3485  0091                     _PIE1bits	set	145
  3486  0090                     _PIE0bits	set	144
  3487  008E                     _TRISC	set	142
  3488  008C                     _TRISA	set	140
  3489  0097                     _WDTCON	set	151
  3490  010E                     _LATCbits	set	270
  3491  010E                     _LATC	set	270
  3492  010C                     _LATA	set	268
  3493  018C                     _ANSELA	set	396
  3494  018E                     _ANSELC	set	398
  3495  020E                     _WPUC	set	526
  3496  020C                     _WPUA	set	524
  3497  028E                     _ODCONC	set	654
  3498  028C                     _ODCONA	set	652
  3499  030E                     _SLRCONC	set	782
  3500  030C                     _SLRCONA	set	780
  3501  0397                     _IOCCPbits	set	919
  3502  0398                     _IOCCNbits	set	920
  3503  0399                     _IOCCFbits	set	921
  3504  038E                     _INLVLC	set	910
  3505  038C                     _INLVLA	set	908
  3506  0916                     _PMD5	set	2326
  3507  0915                     _PMD4	set	2325
  3508  0914                     _PMD3	set	2324
  3509  0913                     _PMD2	set	2323
  3510  0912                     _PMD1	set	2322
  3511  0911                     _PMD0	set	2321
  3512  091E                     _OSCTUNE	set	2334
  3513  091F                     _OSCFRQ	set	2335
  3514  091D                     _OSCEN	set	2333
  3515  091B                     _OSCCON3	set	2331
  3516  0919                     _OSCCON1	set	2329
  3517                           
  3518                           ; #config settings
  3519  0000                     
  3520                           	psect	cinit
  3521  002A                     start_initialization:	
  3522  002A                     __initialization:		;BIGRAM
  3523                           
  3524                           ; Initialize objects allocated to BANK0
  3525  002A  3184  24B0  3180   	fcall	__pidataBANK0	;fetch initializer
  3526  002D  00DA               	movwf	__pdataBANK0& (0+127)
  3527  002E  3184  24B1  3180   	fcall	__pidataBANK0+1	;fetch initializer
  3528  0031  00DB               	movwf	(__pdataBANK0+1)& (0+127)
  3529  0032  3184  24B2  3180   	fcall	__pidataBANK0+2	;fetch initializer
  3530  0035  00DC               	movwf	(__pdataBANK0+2)& (0+127)
  3531  0036  3184  24B3  3180   	fcall	__pidataBANK0+3	;fetch initializer
  3532  0039  00DD               	movwf	(__pdataBANK0+3)& (0+127)
  3533                           
  3534                           ; Initialize objects allocated to BANK1
  3535  003A  0021               	movlb	1	; select bank1
  3536  003B  3184  24B4  3180   	fcall	__pidataBANK1	;fetch initializer
  3537  003E  00B8               	movwf	__pdataBANK1& (0+127)
  3538  003F  3184  24B5  3180   	fcall	__pidataBANK1+1	;fetch initializer
  3539  0042  00B9               	movwf	(__pdataBANK1+1)& (0+127)
  3540  0043  3184  24B6  3180   	fcall	__pidataBANK1+2	;fetch initializer
  3541  0046  00BA               	movwf	(__pdataBANK1+2)& (0+127)
  3542  0047  3184  24B7  3180   	fcall	__pidataBANK1+3	;fetch initializer
  3543  004A  00BB               	movwf	(__pdataBANK1+3)& (0+127)
  3544                           
  3545                           ; Clear objects allocated to BIGRAM
  3546  004B  30B0               	movlw	low (0+8880)
  3547  004C  0084               	movwf	4
  3548  004D  3022               	movlw	high (0+8880)
  3549  004E  0085               	movwf	5
  3550  004F  3040               	movlw	64
  3551  0050  00FE               	movwf	btemp
  3552  0051  3001               	movlw	1
  3553  0052  00FF               	movwf	btemp+1
  3554  0053  3184  247E  3180   	fcall	clear_ram0
  3555                           
  3556                           ; Clear objects allocated to COMMON
  3557  0056  01FA               	clrf	__pbssCOMMON& (0+127)
  3558  0057  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  3559                           
  3560                           ; Clear objects allocated to BANK0
  3561  0058  3041               	movlw	low __pbssBANK0
  3562  0059  0084               	movwf	4
  3563  005A  3000               	movlw	high __pbssBANK0
  3564  005B  0085               	movwf	5
  3565  005C  3013               	movlw	19
  3566  005D  00FE               	movwf	btemp
  3567  005E  3000               	movlw	0
  3568  005F  00FF               	movwf	btemp+1
  3569  0060  3184  247E  3180   	fcall	clear_ram0
  3570                           
  3571                           ; Clear objects allocated to BANK1
  3572  0063  01B4               	clrf	__pbssBANK1& (0+127)
  3573  0064  01B5               	clrf	(__pbssBANK1+1)& (0+127)
  3574  0065  01B6               	clrf	(__pbssBANK1+2)& (0+127)
  3575  0066  01B7               	clrf	(__pbssBANK1+3)& (0+127)
  3576  0067                     end_of_initialization:	
  3577                           ;End of C runtime variable initialization code
  3578                           
  3579  0067                     __end_of__initialization:	
  3580  0067  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3581  0068  0020               	movlb	0
  3582  0069  3184  2C0E         	ljmp	_main	;jump to C main() function
  3583                           
  3584                           	psect	bssCOMMON
  3585  007A                     __pbssCOMMON:	
  3586  007A                     _current_stage:	
  3587  007A                     	ds	2
  3588                           
  3589                           	psect	bssBANK0
  3590  0041                     __pbssBANK0:	
  3591  0041                     _start_time:	
  3592  0041                     	ds	2
  3593  0043                     _stage_list_iter:	
  3594  0043                     	ds	2
  3595  0045                     _cur_sec:	
  3596  0045                     	ds	2
  3597  0047                     _cur_hsec:	
  3598  0047                     	ds	2
  3599  0049                     _cur_ms:	
  3600  0049                     	ds	2
  3601  004B                     _temp_ms:	
  3602  004B                     	ds	2
  3603  004D                     _update_stage:	
  3604  004D                     	ds	1
  3605  004E                     _last_pc_input_state:	
  3606  004E                     	ds	1
  3607  004F                     _cur_pc_input_state:	
  3608  004F                     	ds	1
  3609  0050                     _ts_trigger:	
  3610  0050                     	ds	1
  3611  0051                     _Wigwag:	
  3612  0051                     	ds	3
  3613                           
  3614                           	psect	dataBANK0
  3615  005A                     __pdataBANK0:	
  3616  005A                     InitWigwagPattern@F436:	
  3617  005A                     	ds	4
  3618                           
  3619                           	psect	bssBANK1
  3620  00B4                     __pbssBANK1:	
  3621  00B4                     NewStage@F411:	
  3622  00B4                     	ds	4
  3623                           
  3624                           	psect	dataBANK1
  3625  00B8                     __pdataBANK1:	
  3626  00B8                     InitWigwagPattern@F439:	
  3627  00B8                     	ds	4
  3628                           
  3629                           	psect	clrtext
  3630  047E                     clear_ram0:	
  3631                           ;	Called with FSR0 containing the base address, and
  3632                           ;	btemp/btemp+1 has the size to clear
  3633                           
  3634  047E  0064               	clrwdt	;clear the watchdog before getting into this loop
  3635  047F                     clrloop0:	
  3636  047F  0180               	clrf	0	;clear RAM location pointed to by FSR
  3637  0480  3101               	addfsr 0,1
  3638  0481  3001               	movlw	1
  3639  0482  02FE               	subwf	btemp,f
  3640  0483  3000               	movlw	0
  3641  0484  3BFF               	subwfb	btemp+1,f
  3642  0485  087F               	movf	btemp+1,w
  3643  0486  047E               	iorwf	btemp,w
  3644  0487  1D03               	skipz
  3645  0488  2C7F               	goto	clrloop0	;have we reached the end yet?
  3646  0489  3400               	retlw	0	;all done for this memory range, return
  3647                           
  3648                           	psect	cstackBANK1
  3649  00A0                     __pcstackBANK1:	
  3650  00A0                     InitWigwagPattern@left_side_states:	
  3651                           
  3652                           ; 4 bytes @ 0x0
  3653  00A0                     	ds	4
  3654  00A4                     InitWigwagPattern@right_side_states:	
  3655                           
  3656                           ; 4 bytes @ 0x4
  3657  00A4                     	ds	4
  3658  00A8                     InitWigwagPattern@left_side_on:	
  3659                           
  3660                           ; 2 bytes @ 0x8
  3661  00A8                     	ds	2
  3662  00AA                     InitWigwagPattern@right_side_on:	
  3663                           
  3664                           ; 2 bytes @ 0xA
  3665  00AA                     	ds	2
  3666  00AC                     InitWigwagPattern@i:	
  3667                           
  3668                           ; 2 bytes @ 0xC
  3669  00AC                     	ds	2
  3670  00AE                     InitWigwagPattern@i_759:	
  3671                           
  3672                           ; 2 bytes @ 0xE
  3673  00AE                     	ds	2
  3674  00B0                     InitWigwagPattern@off:	
  3675                           
  3676                           ; 2 bytes @ 0x10
  3677  00B0                     	ds	2
  3678  00B2                     InitWigwagPattern@head:	
  3679                           
  3680                           ; 2 bytes @ 0x12
  3681  00B2                     	ds	2
  3682                           
  3683                           	psect	cstackCOMMON
  3684  0070                     __pcstackCOMMON:	
  3685  0070                     ?_PMD_Initialize:	
  3686  0070                     ?_PIN_MANAGER_Initialize:	
  3687                           ; 1 bytes @ 0x0
  3688                           
  3689  0070                     ?_OSCILLATOR_Initialize:	
  3690                           ; 1 bytes @ 0x0
  3691                           
  3692  0070                     ?_WDT_Initialize:	
  3693                           ; 1 bytes @ 0x0
  3694                           
  3695  0070                     ?_TMR1_Initialize:	
  3696                           ; 1 bytes @ 0x0
  3697                           
  3698  0070                     ?_IOCCF0_DefaultInterruptHandler:	
  3699                           ; 1 bytes @ 0x0
  3700                           
  3701  0070                     ??_IOCCF0_DefaultInterruptHandler:	
  3702                           ; 1 bytes @ 0x0
  3703                           
  3704  0070                     ?_IOCCF0_ISR:	
  3705                           ; 1 bytes @ 0x0
  3706                           
  3707  0070                     ??_IOCCF0_ISR:	
  3708                           ; 1 bytes @ 0x0
  3709                           
  3710  0070                     ?_TMR1_ISR:	
  3711                           ; 1 bytes @ 0x0
  3712                           
  3713  0070                     ?_SetOutputs:	
  3714                           ; 1 bytes @ 0x0
  3715                           
  3716  0070                     ?_PatternCycleInputChanged:	
  3717                           ; 1 bytes @ 0x0
  3718                           
  3719  0070                     ?_SYSTEM_Initialize:	
  3720                           ; 1 bytes @ 0x0
  3721                           
  3722  0070                     ?_PIN_MANAGER_IOC:	
  3723                           ; 1 bytes @ 0x0
  3724                           
  3725  0070                     ??_PIN_MANAGER_IOC:	
  3726                           ; 1 bytes @ 0x0
  3727                           
  3728  0070                     ?_INTERRUPT_InterruptManager:	
  3729                           ; 1 bytes @ 0x0
  3730                           
  3731  0070                     ?_TMR1_StartTimer:	
  3732                           ; 1 bytes @ 0x0
  3733                           
  3734  0070                     ?_TMR1_WriteTimer:	
  3735                           ; 1 bytes @ 0x0
  3736                           
  3737  0070                     ?_setup:	
  3738                           ; 1 bytes @ 0x0
  3739                           
  3740  0070                     ?_main:	
  3741                           ; 1 bytes @ 0x0
  3742                           
  3743  0070                     TMR1_WriteTimer@timerVal:	
  3744                           ; 1 bytes @ 0x0
  3745                           
  3746                           
  3747                           ; 2 bytes @ 0x0
  3748  0070                     	ds	2
  3749  0072                     ??_PMD_Initialize:	
  3750  0072                     ??_OSCILLATOR_Initialize:	
  3751                           ; 1 bytes @ 0x2
  3752                           
  3753  0072                     ??_WDT_Initialize:	
  3754                           ; 1 bytes @ 0x2
  3755                           
  3756  0072                     ?_IOCCF0_SetInterruptHandler:	
  3757                           ; 1 bytes @ 0x2
  3758                           
  3759  0072                     ??_TMR1_ISR:	
  3760                           ; 1 bytes @ 0x2
  3761                           
  3762  0072                     ?_TMR1_SetInterruptHandler:	
  3763                           ; 1 bytes @ 0x2
  3764                           
  3765  0072                     ??_PatternCycleInputChanged:	
  3766                           ; 1 bytes @ 0x2
  3767                           
  3768  0072                     ??_INTERRUPT_InterruptManager:	
  3769                           ; 1 bytes @ 0x2
  3770                           
  3771  0072                     ??_TMR1_StartTimer:	
  3772                           ; 1 bytes @ 0x2
  3773                           
  3774  0072                     ??_TMR1_WriteTimer:	
  3775                           ; 1 bytes @ 0x2
  3776                           
  3777  0072                     ?_SetLight:	
  3778                           ; 1 bytes @ 0x2
  3779                           
  3780  0072                     ?_AssignLightStates:	
  3781                           ; 1 bytes @ 0x2
  3782                           
  3783  0072                     SetLight@state:	
  3784                           ; 1 bytes @ 0x2
  3785                           
  3786  0072                     IOCCF0_SetInterruptHandler@InterruptHandler:	
  3787                           ; 1 bytes @ 0x2
  3788                           
  3789  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  3790                           ; 2 bytes @ 0x2
  3791                           
  3792  0072                     AssignLightStates@stage:	
  3793                           ; 2 bytes @ 0x2
  3794                           
  3795                           
  3796                           ; 2 bytes @ 0x2
  3797  0072                     	ds	1
  3798  0073                     ??_SetLight:	
  3799                           
  3800                           ; 1 bytes @ 0x3
  3801  0073                     	ds	1
  3802  0074                     ??_PIN_MANAGER_Initialize:	
  3803  0074                     ??_TMR1_Initialize:	
  3804                           ; 1 bytes @ 0x4
  3805                           
  3806  0074                     ??_IOCCF0_SetInterruptHandler:	
  3807                           ; 1 bytes @ 0x4
  3808                           
  3809  0074                     ??_TMR1_SetInterruptHandler:	
  3810                           ; 1 bytes @ 0x4
  3811                           
  3812  0074                     ??_SYSTEM_Initialize:	
  3813                           ; 1 bytes @ 0x4
  3814                           
  3815  0074                     AssignLightStates@states:	
  3816                           ; 1 bytes @ 0x4
  3817                           
  3818  0074                     PatternCycleInputChanged@delay_count:	
  3819                           ; 1 bytes @ 0x4
  3820                           
  3821                           
  3822                           ; 2 bytes @ 0x4
  3823  0074                     	ds	1
  3824  0075                     ??_AssignLightStates:	
  3825  0075                     SetLight@light:	
  3826                           ; 1 bytes @ 0x5
  3827                           
  3828                           
  3829                           ; 1 bytes @ 0x5
  3830  0075                     	ds	1
  3831  0076                     ??_SetOutputs:	
  3832  0076                     ?_FlashPattern:	
  3833                           ; 1 bytes @ 0x6
  3834                           
  3835  0076                     FlashPattern@pattern:	
  3836                           ; 1 bytes @ 0x6
  3837                           
  3838                           
  3839                           ; 2 bytes @ 0x6
  3840  0076                     	ds	1
  3841  0077                     ?_NewStage:	
  3842  0077                     SetOutputs@state:	
  3843                           ; 2 bytes @ 0x7
  3844                           
  3845                           
  3846                           ; 1 bytes @ 0x7
  3847  0077                     	ds	1
  3848  0078                     FlashPattern@current_time:	
  3849                           
  3850                           ; 2 bytes @ 0x8
  3851  0078                     	ds	1
  3852  0079                     ??_ConstructStage:	
  3853                           
  3854                           ; 1 bytes @ 0x9
  3855  0079                     	ds	1
  3856  007A                     ??_setup:	
  3857                           
  3858                           	psect	cstackBANK0
  3859  0020                     __pcstackBANK0:	
  3860                           ; 1 bytes @ 0xA
  3861                           
  3862  0020                     ??_FlashPattern:	
  3863  0020                     AssignLightStates@i:	
  3864                           ; 1 bytes @ 0x0
  3865                           
  3866                           
  3867                           ; 2 bytes @ 0x0
  3868  0020                     	ds	2
  3869  0022                     ??_NewStage:	
  3870                           
  3871                           ; 1 bytes @ 0x2
  3872  0022                     	ds	4
  3873  0026                     NewStage@init_states:	
  3874                           
  3875                           ; 4 bytes @ 0x6
  3876  0026                     	ds	4
  3877  002A                     NewStage@new_stage:	
  3878                           
  3879                           ; 2 bytes @ 0xA
  3880  002A                     	ds	2
  3881  002C                     ?_CopyStageData:	
  3882  002C                     ?_ConstructStage:	
  3883                           ; 2 bytes @ 0xC
  3884                           
  3885  002C                     ConstructStage@time_ms:	
  3886                           ; 2 bytes @ 0xC
  3887                           
  3888  002C                     CopyStageData@dest:	
  3889                           ; 2 bytes @ 0xC
  3890                           
  3891                           
  3892                           ; 2 bytes @ 0xC
  3893  002C                     	ds	2
  3894  002E                     ConstructStage@next:	
  3895  002E                     CopyStageData@source:	
  3896                           ; 1 bytes @ 0xE
  3897                           
  3898                           
  3899                           ; 2 bytes @ 0xE
  3900  002E                     	ds	1
  3901  002F                     ConstructStage@states:	
  3902                           
  3903                           ; 1 bytes @ 0xF
  3904  002F                     	ds	1
  3905  0030                     ??_CopyStageData:	
  3906  0030                     ConstructStage@new_stage:	
  3907                           ; 1 bytes @ 0x10
  3908                           
  3909                           
  3910                           ; 2 bytes @ 0x10
  3911  0030                     	ds	3
  3912  0033                     CopyStageData@i:	
  3913                           
  3914                           ; 2 bytes @ 0x13
  3915  0033                     	ds	2
  3916  0035                     ?_AppendStage:	
  3917  0035                     AppendStage@head:	
  3918                           ; 1 bytes @ 0x15
  3919                           
  3920                           
  3921                           ; 2 bytes @ 0x15
  3922  0035                     	ds	2
  3923  0037                     AppendStage@new_stage:	
  3924                           
  3925                           ; 2 bytes @ 0x17
  3926  0037                     	ds	2
  3927  0039                     ??_AppendStage:	
  3928                           
  3929                           ; 1 bytes @ 0x19
  3930  0039                     	ds	2
  3931  003B                     AppendStage@last_stage:	
  3932                           
  3933                           ; 2 bytes @ 0x1B
  3934  003B                     	ds	2
  3935  003D                     ?_InitWigwagPattern:	
  3936  003D                     InitWigwagPattern@pattern:	
  3937                           ; 1 bytes @ 0x1D
  3938                           
  3939                           
  3940                           ; 2 bytes @ 0x1D
  3941  003D                     	ds	2
  3942  003F                     ??_InitWigwagPattern:	
  3943                           
  3944                           ; 1 bytes @ 0x1F
  3945  003F                     	ds	1
  3946  0040                     ??_main:	
  3947                           
  3948                           ; 1 bytes @ 0x20
  3949  0040                     	ds	1
  3950                           
  3951                           	psect	maintext
  3952  040E                     __pmaintext:	
  3953 ;;
  3954 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3955 ;;
  3956 ;; *************** function _main *****************
  3957 ;; Defined at:
  3958 ;;		line 46 in file "main.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;		None
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : B1F/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3974 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3975 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3976 ;;Total ram usage:        1 bytes
  3977 ;; Hardware stack levels required when called:    9
  3978 ;; This function calls:
  3979 ;;		_FlashPattern
  3980 ;;		_PatternCycleInputChanged
  3981 ;;		_setup
  3982 ;; This function is called by:
  3983 ;;		Startup code after reset
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           
  3988                           ;psect for function _main
  3989  040E                     _main:	
  3990  040E                     l1878:	
  3991                           ;incstack = 0
  3992                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3993                           
  3994                           
  3995                           ;main.c: 48:     setup();
  3996  040E  3183  23F1  3184   	fcall	_setup
  3997  0411                     l1880:	
  3998                           
  3999                           ;main.c: 51:     {;main.c: 52:         cur_pc_input_state = PORTCbits.RC5;
  4000  0411  3000               	movlw	0
  4001  0412  0020               	movlb	0	; select bank0
  4002  0413  1A8E               	btfsc	14,5	;volatile
  4003  0414  3001               	movlw	1
  4004  0415  00CF               	movwf	_cur_pc_input_state
  4005  0416                     l1882:	
  4006                           
  4007                           ;main.c: 57:         if ( PatternCycleInputChanged() )
  4008  0416  3183  2325  3184   	fcall	_PatternCycleInputChanged
  4009  0419                     l1884:	
  4010                           
  4011                           ;main.c: 71:         last_pc_input_state = cur_pc_input_state;
  4012  0419  0020               	movlb	0	; select bank0
  4013  041A  084F               	movf	_cur_pc_input_state,w
  4014  041B  00C0               	movwf	??_main
  4015  041C  0840               	movf	??_main,w
  4016  041D  00CE               	movwf	_last_pc_input_state
  4017  041E                     l1886:	
  4018                           
  4019                           ;main.c: 73:         FlashPattern( &Wigwag );
  4020  041E  3051               	movlw	low _Wigwag
  4021  041F  00F6               	movwf	FlashPattern@pattern
  4022  0420  3000               	movlw	high _Wigwag
  4023  0421  00F7               	movwf	FlashPattern@pattern+1
  4024  0422  3181  21A8  3184   	fcall	_FlashPattern
  4025  0425  2C11               	goto	l1880
  4026  0426  3180  2828         	ljmp	start
  4027  0428                     __end_of_main:	
  4028                           
  4029                           	psect	text1
  4030  03F1                     __ptext1:	
  4031 ;; *************** function _setup *****************
  4032 ;; Defined at:
  4033 ;;		line 25 in file "main.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;		None
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;		None
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  1    wreg      void 
  4040 ;; Registers used:
  4041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4051 ;;Total ram usage:        0 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; Hardware stack levels required when called:    8
  4054 ;; This function calls:
  4055 ;;		_InitWigwagPattern
  4056 ;;		_SYSTEM_Initialize
  4057 ;;		_SetOutputs
  4058 ;;		_TMR1_Initialize
  4059 ;;		_TMR1_StartTimer
  4060 ;; This function is called by:
  4061 ;;		_main
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           
  4066                           ;psect for function _setup
  4067  03F1                     _setup:	
  4068  03F1                     l1848:	
  4069                           ;incstack = 0
  4070                           ; Regs used in _setup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4071                           
  4072                           
  4073                           ;main.c: 28:     SYSTEM_Initialize();
  4074  03F1  3184  2450  3183   	fcall	_SYSTEM_Initialize
  4075  03F4                     l1850:	
  4076                           
  4077                           ;main.c: 30:     (INTCONbits.GIE = 1);
  4078  03F4  178B               	bsf	11,7	;volatile
  4079  03F5                     l1852:	
  4080                           
  4081                           ;main.c: 33:     (INTCONbits.PEIE = 1);
  4082  03F5  170B               	bsf	11,6	;volatile
  4083                           
  4084                           ;main.c: 36:     TMR1_Initialize();
  4085  03F6  3184  2428  3183   	fcall	_TMR1_Initialize
  4086  03F9                     l1854:	
  4087                           
  4088                           ;main.c: 37:     TMR1_StartTimer();
  4089  03F9  3184  24BC  3183   	fcall	_TMR1_StartTimer
  4090  03FC                     l1856:	
  4091                           
  4092                           ;main.c: 40:     SetOutputs( 0 );
  4093  03FC  3000               	movlw	0
  4094  03FD  3183  23CF  3183   	fcall	_SetOutputs
  4095  0400                     l1858:	
  4096                           
  4097                           ;main.c: 42:     InitWigwagPattern( &Wigwag );
  4098  0400  3051               	movlw	low _Wigwag
  4099  0401  0020               	movlb	0	; select bank0
  4100  0402  00BD               	movwf	InitWigwagPattern@pattern
  4101  0403  3000               	movlw	high _Wigwag
  4102  0404  00BE               	movwf	InitWigwagPattern@pattern+1
  4103  0405  3180  206B  3183   	fcall	_InitWigwagPattern
  4104  0408                     l1860:	
  4105                           
  4106                           ;main.c: 43:     current_stage = Wigwag.first_stage;
  4107  0408  0020               	movlb	0	; select bank0
  4108  0409  0853               	movf	_Wigwag+2,w
  4109  040A  00FB               	movwf	_current_stage+1
  4110  040B  0852               	movf	_Wigwag+1,w
  4111  040C  00FA               	movwf	_current_stage
  4112  040D                     l268:	
  4113  040D  0008               	return
  4114  040E                     __end_of_setup:	
  4115                           
  4116                           	psect	text2
  4117  04BC                     __ptext2:	
  4118 ;; *************** function _TMR1_StartTimer *****************
  4119 ;; Defined at:
  4120 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;		None
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;		None
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  1    wreg      void 
  4127 ;; Registers used:
  4128 ;;		None
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4138 ;;Total ram usage:        0 bytes
  4139 ;; Hardware stack levels used:    1
  4140 ;; Hardware stack levels required when called:    4
  4141 ;; This function calls:
  4142 ;;		Nothing
  4143 ;; This function is called by:
  4144 ;;		_setup
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148                           
  4149                           ;psect for function _TMR1_StartTimer
  4150  04BC                     _TMR1_StartTimer:	
  4151  04BC                     l1546:	
  4152                           ;incstack = 0
  4153                           ; Regs used in _TMR1_StartTimer: []
  4154                           
  4155                           
  4156                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  4157  04BC  0020               	movlb	0	; select bank0
  4158  04BD  141B               	bsf	27,0	;volatile
  4159  04BE                     l192:	
  4160  04BE  0008               	return
  4161  04BF                     __end_of_TMR1_StartTimer:	
  4162                           
  4163                           	psect	text3
  4164  03CF                     __ptext3:	
  4165 ;; *************** function _SetOutputs *****************
  4166 ;; Defined at:
  4167 ;;		line 30 in file "Lights.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  state           1    wreg     const _Bool 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  state           1    7[COMMON] const _Bool 
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  1    wreg      void 
  4174 ;; Registers used:
  4175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4182 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4183 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4184 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4185 ;;Total ram usage:        2 bytes
  4186 ;; Hardware stack levels used:    1
  4187 ;; Hardware stack levels required when called:    5
  4188 ;; This function calls:
  4189 ;;		_SetLight
  4190 ;; This function is called by:
  4191 ;;		_setup
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           
  4196                           ;psect for function _SetOutputs
  4197  03CF                     _SetOutputs:	
  4198                           
  4199                           ;incstack = 0
  4200                           ; Regs used in _SetOutputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4201                           ;SetOutputs@state stored from wreg
  4202  03CF  00F7               	movwf	SetOutputs@state
  4203  03D0                     l1804:	
  4204                           
  4205                           ;Lights.c: 30: void SetOutputs( const _Bool state );Lights.c: 31: {;Lights.c: 32:     Se
      +                          tLight( L1, state );
  4206  03D0  0877               	movf	SetOutputs@state,w
  4207  03D1  00F6               	movwf	??_SetOutputs
  4208  03D2  0876               	movf	??_SetOutputs,w
  4209  03D3  00F2               	movwf	SetLight@state
  4210  03D4  3000               	movlw	0
  4211  03D5  3182  22F3  3183   	fcall	_SetLight
  4212                           
  4213                           ;Lights.c: 33:     SetLight( L2, state );
  4214  03D8  0877               	movf	SetOutputs@state,w
  4215  03D9  00F6               	movwf	??_SetOutputs
  4216  03DA  0876               	movf	??_SetOutputs,w
  4217  03DB  00F2               	movwf	SetLight@state
  4218  03DC  3001               	movlw	1
  4219  03DD  3182  22F3  3183   	fcall	_SetLight
  4220                           
  4221                           ;Lights.c: 34:     SetLight( L3, state );
  4222  03E0  0877               	movf	SetOutputs@state,w
  4223  03E1  00F6               	movwf	??_SetOutputs
  4224  03E2  0876               	movf	??_SetOutputs,w
  4225  03E3  00F2               	movwf	SetLight@state
  4226  03E4  3002               	movlw	2
  4227  03E5  3182  22F3  3183   	fcall	_SetLight
  4228                           
  4229                           ;Lights.c: 35:     SetLight( L4, state );
  4230  03E8  0877               	movf	SetOutputs@state,w
  4231  03E9  00F6               	movwf	??_SetOutputs
  4232  03EA  0876               	movf	??_SetOutputs,w
  4233  03EB  00F2               	movwf	SetLight@state
  4234  03EC  3003               	movlw	3
  4235  03ED  3182  22F3  3183   	fcall	_SetLight
  4236  03F0                     l329:	
  4237  03F0  0008               	return
  4238  03F1                     __end_of_SetOutputs:	
  4239                           
  4240                           	psect	text4
  4241  0450                     __ptext4:	
  4242 ;; *************** function _SYSTEM_Initialize *****************
  4243 ;; Defined at:
  4244 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;		None
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;		None
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  1    wreg      void 
  4251 ;; Registers used:
  4252 ;;		wreg, status,2, status,0, pclath, cstack
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4262 ;;Total ram usage:        0 bytes
  4263 ;; Hardware stack levels used:    1
  4264 ;; Hardware stack levels required when called:    6
  4265 ;; This function calls:
  4266 ;;		_OSCILLATOR_Initialize
  4267 ;;		_PIN_MANAGER_Initialize
  4268 ;;		_PMD_Initialize
  4269 ;;		_TMR1_Initialize
  4270 ;;		_WDT_Initialize
  4271 ;; This function is called by:
  4272 ;;		_setup
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           
  4277                           ;psect for function _SYSTEM_Initialize
  4278  0450                     _SYSTEM_Initialize:	
  4279  0450                     l1530:	
  4280                           ;incstack = 0
  4281                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4282                           
  4283                           
  4284                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  4285  0450  3184  249C  3184   	fcall	_PMD_Initialize
  4286  0453                     l1532:	
  4287                           
  4288                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4289  0453  3183  2380  3184   	fcall	_PIN_MANAGER_Initialize
  4290  0456                     l1534:	
  4291                           
  4292                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4293  0456  3184  248A  3184   	fcall	_OSCILLATOR_Initialize
  4294  0459                     l1536:	
  4295                           
  4296                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4297  0459  3184  24B8  3184   	fcall	_WDT_Initialize
  4298  045C                     l1538:	
  4299                           
  4300                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  4301  045C  3184  2428  3184   	fcall	_TMR1_Initialize
  4302  045F                     l47:	
  4303  045F  0008               	return
  4304  0460                     __end_of_SYSTEM_Initialize:	
  4305                           
  4306                           	psect	text5
  4307  04B8                     __ptext5:	
  4308 ;; *************** function _WDT_Initialize *****************
  4309 ;; Defined at:
  4310 ;;		line 74 in file "mcc_generated_files/mcc.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;		None
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;		None
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      void 
  4317 ;; Registers used:
  4318 ;;		wreg
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4328 ;;Total ram usage:        0 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:    4
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_SYSTEM_Initialize
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           
  4339                           ;psect for function _WDT_Initialize
  4340  04B8                     _WDT_Initialize:	
  4341  04B8                     l1462:	
  4342                           ;incstack = 0
  4343                           ; Regs used in _WDT_Initialize: [wreg]
  4344                           
  4345                           
  4346                           ;mcc_generated_files/mcc.c: 77:     WDTCON = 0x16;
  4347  04B8  3016               	movlw	22
  4348  04B9  0021               	movlb	1	; select bank1
  4349  04BA  0097               	movwf	23	;volatile
  4350  04BB                     l53:	
  4351  04BB  0008               	return
  4352  04BC                     __end_of_WDT_Initialize:	
  4353                           
  4354                           	psect	text6
  4355  0428                     __ptext6:	
  4356 ;; *************** function _TMR1_Initialize *****************
  4357 ;; Defined at:
  4358 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;		None
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;		None
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  1    wreg      void 
  4365 ;; Registers used:
  4366 ;;		wreg, status,2, status,0, pclath, cstack
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4376 ;;Total ram usage:        0 bytes
  4377 ;; Hardware stack levels used:    1
  4378 ;; Hardware stack levels required when called:    5
  4379 ;; This function calls:
  4380 ;;		_TMR1_SetInterruptHandler
  4381 ;; This function is called by:
  4382 ;;		_SYSTEM_Initialize
  4383 ;;		_setup
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           
  4388                           ;psect for function _TMR1_Initialize
  4389  0428                     _TMR1_Initialize:	
  4390  0428                     l1464:	
  4391                           ;incstack = 0
  4392                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4393                           
  4394                           
  4395                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4396  0428  0020               	movlb	0	; select bank0
  4397  0429  019C               	clrf	28	;volatile
  4398  042A                     l1466:	
  4399                           
  4400                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xFF;
  4401  042A  30FF               	movlw	255
  4402  042B  009A               	movwf	26	;volatile
  4403  042C                     l1468:	
  4404                           
  4405                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x00;
  4406  042C  0199               	clrf	25	;volatile
  4407  042D                     l1470:	
  4408                           
  4409                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  4410  042D  1011               	bcf	17,0	;volatile
  4411                           
  4412                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4413  042E  081A               	movf	26,w	;volatile
  4414  042F  00D7               	movwf	_timer1ReloadVal+1	;volatile
  4415  0430  0819               	movf	25,w	;volatile
  4416  0431  00D6               	movwf	_timer1ReloadVal	;volatile
  4417  0432                     l1472:	
  4418                           
  4419                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  4420  0432  0021               	movlb	1	; select bank1
  4421  0433  1411               	bsf	17,0	;volatile
  4422  0434                     l1474:	
  4423                           
  4424                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4425  0434  3000               	movlw	0
  4426  0435  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  4427  0436  3000               	movlw	0
  4428  0437  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  4429  0438  3184  24A4  3184   	fcall	_TMR1_SetInterruptHandler
  4430  043B                     l1476:	
  4431                           
  4432                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
  4433  043B  3001               	movlw	1
  4434  043C  0020               	movlb	0	; select bank0
  4435  043D  009B               	movwf	27	;volatile
  4436  043E                     l189:	
  4437  043E  0008               	return
  4438  043F                     __end_of_TMR1_Initialize:	
  4439                           
  4440                           	psect	text7
  4441  04A4                     __ptext7:	
  4442 ;; *************** function _TMR1_SetInterruptHandler *****************
  4443 ;; Defined at:
  4444 ;;		line 173 in file "mcc_generated_files/tmr1.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4447 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;		None
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  1    wreg      void 
  4452 ;; Registers used:
  4453 ;;		wreg
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4462 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4463 ;;Total ram usage:        2 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; Hardware stack levels required when called:    4
  4466 ;; This function calls:
  4467 ;;		Nothing
  4468 ;; This function is called by:
  4469 ;;		_TMR1_Initialize
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           
  4474                           ;psect for function _TMR1_SetInterruptHandler
  4475  04A4                     _TMR1_SetInterruptHandler:	
  4476  04A4                     l1400:	
  4477                           ;incstack = 0
  4478                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  4479                           
  4480                           
  4481                           ;mcc_generated_files/tmr1.c: 174:     TMR1_InterruptHandler = InterruptHandler;
  4482  04A4  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  4483  04A5  0020               	movlb	0	; select bank0
  4484  04A6  00D5               	movwf	_TMR1_InterruptHandler+1
  4485  04A7  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  4486  04A8  00D4               	movwf	_TMR1_InterruptHandler
  4487  04A9                     l218:	
  4488  04A9  0008               	return
  4489  04AA                     __end_of_TMR1_SetInterruptHandler:	
  4490                           
  4491                           	psect	text8
  4492  049C                     __ptext8:	
  4493 ;; *************** function _PMD_Initialize *****************
  4494 ;; Defined at:
  4495 ;;		line 80 in file "mcc_generated_files/mcc.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;		None
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;		None
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		status,2
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4513 ;;Total ram usage:        0 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    4
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_SYSTEM_Initialize
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           
  4524                           ;psect for function _PMD_Initialize
  4525  049C                     _PMD_Initialize:	
  4526  049C                     l1424:	
  4527                           ;incstack = 0
  4528                           ; Regs used in _PMD_Initialize: [status,2]
  4529                           
  4530                           
  4531                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
  4532  049C  0032               	movlb	18	; select bank18
  4533  049D  0191               	clrf	17	;volatile
  4534                           
  4535                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
  4536  049E  0192               	clrf	18	;volatile
  4537                           
  4538                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
  4539  049F  0193               	clrf	19	;volatile
  4540                           
  4541                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
  4542  04A0  0194               	clrf	20	;volatile
  4543                           
  4544                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
  4545  04A1  0195               	clrf	21	;volatile
  4546                           
  4547                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
  4548  04A2  0196               	clrf	22	;volatile
  4549  04A3                     l56:	
  4550  04A3  0008               	return
  4551  04A4                     __end_of_PMD_Initialize:	
  4552                           
  4553                           	psect	text9
  4554  0380                     __ptext9:	
  4555 ;; *************** function _PIN_MANAGER_Initialize *****************
  4556 ;; Defined at:
  4557 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;		None
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      void 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0, pclath, cstack
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4575 ;;Total ram usage:        0 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    5
  4578 ;; This function calls:
  4579 ;;		_IOCCF0_SetInterruptHandler
  4580 ;; This function is called by:
  4581 ;;		_SYSTEM_Initialize
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           
  4586                           ;psect for function _PIN_MANAGER_Initialize
  4587  0380                     _PIN_MANAGER_Initialize:	
  4588  0380                     l1426:	
  4589                           ;incstack = 0
  4590                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4591                           
  4592                           
  4593                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4594  0380  0022               	movlb	2	; select bank2
  4595  0381  018C               	clrf	12	;volatile
  4596  0382                     l1428:	
  4597                           
  4598                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x20;
  4599  0382  3020               	movlw	32
  4600  0383  008E               	movwf	14	;volatile
  4601  0384                     l1430:	
  4602                           
  4603                           ;mcc_generated_files/pin_manager.c: 68:     TRISA = 0x37;
  4604  0384  3037               	movlw	55
  4605  0385  0021               	movlb	1	; select bank1
  4606  0386  008C               	movwf	12	;volatile
  4607  0387                     l1432:	
  4608                           
  4609                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x21;
  4610  0387  3021               	movlw	33
  4611  0388  008E               	movwf	14	;volatile
  4612  0389                     l1434:	
  4613                           
  4614                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  4615  0389  0023               	movlb	3	; select bank3
  4616  038A  018E               	clrf	14	;volatile
  4617                           
  4618                           ;mcc_generated_files/pin_manager.c: 75:     ANSELA = 0x33;
  4619  038B  3033               	movlw	51
  4620  038C  008C               	movwf	12	;volatile
  4621  038D                     l1436:	
  4622                           
  4623                           ;mcc_generated_files/pin_manager.c: 80:     WPUA = 0x00;
  4624  038D  0024               	movlb	4	; select bank4
  4625  038E  018C               	clrf	12	;volatile
  4626  038F                     l1438:	
  4627                           
  4628                           ;mcc_generated_files/pin_manager.c: 81:     WPUC = 0x00;
  4629  038F  018E               	clrf	14	;volatile
  4630  0390                     l1440:	
  4631                           
  4632                           ;mcc_generated_files/pin_manager.c: 86:     ODCONA = 0x00;
  4633  0390  0025               	movlb	5	; select bank5
  4634  0391  018C               	clrf	12	;volatile
  4635  0392                     l1442:	
  4636                           
  4637                           ;mcc_generated_files/pin_manager.c: 87:     ODCONC = 0x00;
  4638  0392  018E               	clrf	14	;volatile
  4639                           
  4640                           ;mcc_generated_files/pin_manager.c: 92:     SLRCONA = 0x37;
  4641  0393  3037               	movlw	55
  4642  0394  0026               	movlb	6	; select bank6
  4643  0395  008C               	movwf	12	;volatile
  4644                           
  4645                           ;mcc_generated_files/pin_manager.c: 93:     SLRCONC = 0x3F;
  4646  0396  303F               	movlw	63
  4647  0397  008E               	movwf	14	;volatile
  4648                           
  4649                           ;mcc_generated_files/pin_manager.c: 98:     INLVLA = 0x3F;
  4650  0398  303F               	movlw	63
  4651  0399  0027               	movlb	7	; select bank7
  4652  039A  008C               	movwf	12	;volatile
  4653                           
  4654                           ;mcc_generated_files/pin_manager.c: 99:     INLVLC = 0x3F;
  4655  039B  303F               	movlw	63
  4656  039C  008E               	movwf	14	;volatile
  4657  039D                     l1444:	
  4658                           
  4659                           ;mcc_generated_files/pin_manager.c: 106:     IOCCFbits.IOCCF0 = 0;
  4660  039D  1019               	bcf	25,0	;volatile
  4661  039E                     l1446:	
  4662                           
  4663                           ;mcc_generated_files/pin_manager.c: 108:     IOCCNbits.IOCCN0 = 0;
  4664  039E  1018               	bcf	24,0	;volatile
  4665  039F                     l1448:	
  4666                           
  4667                           ;mcc_generated_files/pin_manager.c: 110:     IOCCPbits.IOCCP0 = 1;
  4668  039F  1417               	bsf	23,0	;volatile
  4669  03A0                     l1450:	
  4670                           
  4671                           ;mcc_generated_files/pin_manager.c: 115:     IOCCF0_SetInterruptHandler(IOCCF0_DefaultIn
      +                          terruptHandler);
  4672  03A0  30BF               	movlw	low _IOCCF0_DefaultInterruptHandler
  4673  03A1  00F2               	movwf	IOCCF0_SetInterruptHandler@InterruptHandler
  4674  03A2  3004               	movlw	high _IOCCF0_DefaultInterruptHandler
  4675  03A3  00F3               	movwf	IOCCF0_SetInterruptHandler@InterruptHandler+1
  4676  03A4  3184  24AA  3183   	fcall	_IOCCF0_SetInterruptHandler
  4677  03A7                     l1452:	
  4678                           
  4679                           ;mcc_generated_files/pin_manager.c: 118:     PIE0bits.IOCIE = 1;
  4680  03A7  0021               	movlb	1	; select bank1
  4681  03A8  1610               	bsf	16,4	;volatile
  4682  03A9                     l105:	
  4683  03A9  0008               	return
  4684  03AA                     __end_of_PIN_MANAGER_Initialize:	
  4685                           
  4686                           	psect	text10
  4687  04AA                     __ptext10:	
  4688 ;; *************** function _IOCCF0_SetInterruptHandler *****************
  4689 ;; Defined at:
  4690 ;;		line 149 in file "mcc_generated_files/pin_manager.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4693 ;;		 -> IOCCF0_DefaultInterruptHandler(1), 
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;		None
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      void 
  4698 ;; Registers used:
  4699 ;;		wreg
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;Total ram usage:        2 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    4
  4712 ;; This function calls:
  4713 ;;		Nothing
  4714 ;; This function is called by:
  4715 ;;		_PIN_MANAGER_Initialize
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           
  4720                           ;psect for function _IOCCF0_SetInterruptHandler
  4721  04AA                     _IOCCF0_SetInterruptHandler:	
  4722  04AA                     l1398:	
  4723                           ;incstack = 0
  4724                           ; Regs used in _IOCCF0_SetInterruptHandler: [wreg]
  4725                           
  4726                           
  4727                           ;mcc_generated_files/pin_manager.c: 150:     IOCCF0_InterruptHandler = InterruptHandler;
  4728  04AA  0873               	movf	IOCCF0_SetInterruptHandler@InterruptHandler+1,w
  4729  04AB  0020               	movlb	0	; select bank0
  4730  04AC  00D9               	movwf	_IOCCF0_InterruptHandler+1
  4731  04AD  0872               	movf	IOCCF0_SetInterruptHandler@InterruptHandler,w
  4732  04AE  00D8               	movwf	_IOCCF0_InterruptHandler
  4733  04AF                     l116:	
  4734  04AF  0008               	return
  4735  04B0                     __end_of_IOCCF0_SetInterruptHandler:	
  4736                           
  4737                           	psect	text11
  4738  048A                     __ptext11:	
  4739 ;; *************** function _OSCILLATOR_Initialize *****************
  4740 ;; Defined at:
  4741 ;;		line 60 in file "mcc_generated_files/mcc.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;		None
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;		None
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      void 
  4748 ;; Registers used:
  4749 ;;		wreg, status,2
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4759 ;;Total ram usage:        0 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; Hardware stack levels required when called:    4
  4762 ;; This function calls:
  4763 ;;		Nothing
  4764 ;; This function is called by:
  4765 ;;		_SYSTEM_Initialize
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           
  4770                           ;psect for function _OSCILLATOR_Initialize
  4771  048A                     _OSCILLATOR_Initialize:	
  4772  048A                     l1454:	
  4773                           ;incstack = 0
  4774                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4775                           
  4776                           
  4777                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
  4778  048A  3062               	movlw	98
  4779  048B  0032               	movlb	18	; select bank18
  4780  048C  0099               	movwf	25	;volatile
  4781  048D                     l1456:	
  4782                           
  4783                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  4784  048D  019B               	clrf	27	;volatile
  4785  048E                     l1458:	
  4786                           
  4787                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  4788  048E  019D               	clrf	29	;volatile
  4789                           
  4790                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x03;
  4791  048F  3003               	movlw	3
  4792  0490  009F               	movwf	31	;volatile
  4793  0491                     l1460:	
  4794                           
  4795                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  4796  0491  019E               	clrf	30	;volatile
  4797  0492                     l50:	
  4798  0492  0008               	return
  4799  0493                     __end_of_OSCILLATOR_Initialize:	
  4800                           
  4801                           	psect	text12
  4802  006B                     __ptext12:	
  4803 ;; *************** function _InitWigwagPattern *****************
  4804 ;; Defined at:
  4805 ;;		line 87 in file "Pattern.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  pattern         2   29[BANK0 ] PTR struct Pattern
  4808 ;;		 -> Wigwag(3), 
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  i               2   14[BANK1 ] int 
  4811 ;;  i               2   12[BANK1 ] int 
  4812 ;;  right_side_s    4    4[BANK1 ] _Bool [4]
  4813 ;;  left_side_st    4    0[BANK1 ] _Bool [4]
  4814 ;;  head            2   18[BANK1 ] PTR struct Stage
  4815 ;;		 -> stage_stash(320), NULL(0), 
  4816 ;;  off             2   16[BANK1 ] PTR struct Stage
  4817 ;;		 -> stage_stash(320), NULL(0), 
  4818 ;;  right_side_o    2   10[BANK1 ] PTR struct Stage
  4819 ;;		 -> stage_stash(320), NULL(0), 
  4820 ;;  left_side_on    2    8[BANK1 ] PTR struct Stage
  4821 ;;		 -> stage_stash(320), NULL(0), 
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  1    wreg      void 
  4824 ;; Registers used:
  4825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4831 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4832 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  4833 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4834 ;;      Totals:         0       3      20       0       0       0       0       0       0       0       0       0       
      +0       0
  4835 ;;Total ram usage:       23 bytes
  4836 ;; Hardware stack levels used:    1
  4837 ;; Hardware stack levels required when called:    7
  4838 ;; This function calls:
  4839 ;;		_AppendStage
  4840 ;;		_ConstructStage
  4841 ;;		_CopyStageData
  4842 ;;		_NewStage
  4843 ;; This function is called by:
  4844 ;;		_setup
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           
  4849                           ;psect for function _InitWigwagPattern
  4850  006B                     _InitWigwagPattern:	
  4851  006B                     l1806:	
  4852                           ;incstack = 0
  4853                           ; Regs used in _InitWigwagPattern: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4854                           
  4855                           
  4856                           ;Pattern.c: 87: void InitWigwagPattern( struct Pattern* pattern );Pattern.c: 88: {;Patte
      +                          rn.c: 89:     pattern->name = WIGWAG;
  4857  006B  0020               	movlb	0	; select bank0
  4858  006C  083D               	movf	InitWigwagPattern@pattern,w
  4859  006D  0086               	movwf	6
  4860  006E  083E               	movf	InitWigwagPattern@pattern+1,w
  4861  006F  0087               	movwf	7
  4862  0070  0181               	clrf	1
  4863  0071                     l1808:	
  4864                           
  4865                           ;Pattern.c: 92:     _Bool left_side_states[NUM_LIGHTS] = { 1, 0, 1, 0 };
  4866  0071  085D               	movf	InitWigwagPattern@F436+3,w
  4867  0072  0021               	movlb	1	; select bank1
  4868  0073  00A3               	movwf	(InitWigwagPattern@left_side_states+3)^(0+128)
  4869  0074  0020               	movlb	0	; select bank0
  4870  0075  085C               	movf	InitWigwagPattern@F436+2,w
  4871  0076  0021               	movlb	1	; select bank1
  4872  0077  00A2               	movwf	(InitWigwagPattern@left_side_states+2)^(0+128)
  4873  0078  0020               	movlb	0	; select bank0
  4874  0079  085B               	movf	InitWigwagPattern@F436+1,w
  4875  007A  0021               	movlb	1	; select bank1
  4876  007B  00A1               	movwf	(InitWigwagPattern@left_side_states+1)^(0+128)
  4877  007C  0020               	movlb	0	; select bank0
  4878  007D  085A               	movf	InitWigwagPattern@F436,w
  4879  007E  0021               	movlb	1	; select bank1
  4880  007F  00A0               	movwf	InitWigwagPattern@left_side_states^(0+128)
  4881  0080                     l1810:	
  4882                           
  4883                           ;Pattern.c: 93:     struct Stage* left_side_on = ConstructStage( left_side_states, 120, 
      +                          ((void*)0) );
  4884  0080  3078               	movlw	120
  4885  0081  0020               	movlb	0	; select bank0
  4886  0082  00AC               	movwf	ConstructStage@time_ms
  4887  0083  3000               	movlw	0
  4888  0084  00AD               	movwf	ConstructStage@time_ms+1
  4889  0085  01AE               	clrf	ConstructStage@next
  4890  0086  30A0               	movlw	(low (InitWigwagPattern@left_side_states| 0))& (0+255)
  4891  0087  3183  2353  3180   	fcall	_ConstructStage
  4892  008A  0020               	movlb	0	; select bank0
  4893  008B  082D               	movf	?_ConstructStage+1,w
  4894  008C  0021               	movlb	1	; select bank1
  4895  008D  00A9               	movwf	(InitWigwagPattern@left_side_on+1)^(0+128)
  4896  008E  0020               	movlb	0	; select bank0
  4897  008F  082C               	movf	?_ConstructStage,w
  4898  0090  0021               	movlb	1	; select bank1
  4899  0091  00A8               	movwf	InitWigwagPattern@left_side_on^(0+128)
  4900  0092                     l1812:	
  4901                           
  4902                           ;Pattern.c: 95:     _Bool right_side_states[NUM_LIGHTS] = { 0, 1, 0, 1 };
  4903  0092  083B               	movf	(InitWigwagPattern@F439+3)^(0+128),w
  4904  0093  00A7               	movwf	(InitWigwagPattern@right_side_states+3)^(0+128)
  4905  0094  083A               	movf	(InitWigwagPattern@F439+2)^(0+128),w
  4906  0095  00A6               	movwf	(InitWigwagPattern@right_side_states+2)^(0+128)
  4907  0096  0839               	movf	(InitWigwagPattern@F439+1)^(0+128),w
  4908  0097  00A5               	movwf	(InitWigwagPattern@right_side_states+1)^(0+128)
  4909  0098  0838               	movf	InitWigwagPattern@F439^(0+128),w
  4910  0099  00A4               	movwf	InitWigwagPattern@right_side_states^(0+128)
  4911  009A                     l1814:	
  4912                           
  4913                           ;Pattern.c: 96:     struct Stage* right_side_on = ConstructStage( right_side_states, 120
      +                          , ((void*)0) );
  4914  009A  3078               	movlw	120
  4915  009B  0020               	movlb	0	; select bank0
  4916  009C  00AC               	movwf	ConstructStage@time_ms
  4917  009D  3000               	movlw	0
  4918  009E  00AD               	movwf	ConstructStage@time_ms+1
  4919  009F  01AE               	clrf	ConstructStage@next
  4920  00A0  30A4               	movlw	(low (InitWigwagPattern@right_side_states| 0))& (0+255)
  4921  00A1  3183  2353  3180   	fcall	_ConstructStage
  4922  00A4  0020               	movlb	0	; select bank0
  4923  00A5  082D               	movf	?_ConstructStage+1,w
  4924  00A6  0021               	movlb	1	; select bank1
  4925  00A7  00AB               	movwf	(InitWigwagPattern@right_side_on+1)^(0+128)
  4926  00A8  0020               	movlb	0	; select bank0
  4927  00A9  082C               	movf	?_ConstructStage,w
  4928  00AA  0021               	movlb	1	; select bank1
  4929  00AB  00AA               	movwf	InitWigwagPattern@right_side_on^(0+128)
  4930  00AC                     l1816:	
  4931                           
  4932                           ;Pattern.c: 98:     struct Stage* off = NewStage();
  4933  00AC  3182  226B  3180   	fcall	_NewStage
  4934  00AF  0878               	movf	?_NewStage+1,w
  4935  00B0  0021               	movlb	1	; select bank1
  4936  00B1  00B1               	movwf	(InitWigwagPattern@off+1)^(0+128)
  4937  00B2  0877               	movf	?_NewStage,w
  4938  00B3  00B0               	movwf	InitWigwagPattern@off^(0+128)
  4939  00B4                     l1818:	
  4940                           
  4941                           ;Pattern.c: 100:     pattern->first_stage = NewStage();
  4942  00B4  3182  226B  3180   	fcall	_NewStage
  4943  00B7  0020               	movlb	0	; select bank0
  4944  00B8  083D               	movf	InitWigwagPattern@pattern,w
  4945  00B9  0086               	movwf	6
  4946  00BA  083E               	movf	InitWigwagPattern@pattern+1,w
  4947  00BB  0087               	movwf	7
  4948  00BC  3141               	addfsr 1,1
  4949  00BD  0877               	movf	?_NewStage,w
  4950  00BE  3FC0               	movwi [0]fsr1
  4951  00BF  0878               	movf	?_NewStage+1,w
  4952  00C0  3FC1               	movwi [1]fsr1
  4953  00C1                     l1820:	
  4954                           
  4955                           ;Pattern.c: 101:     struct Stage* head = pattern->first_stage;
  4956  00C1  083D               	movf	InitWigwagPattern@pattern,w
  4957  00C2  0086               	movwf	6
  4958  00C3  083E               	movf	InitWigwagPattern@pattern+1,w
  4959  00C4  0087               	movwf	7
  4960  00C5  3141               	addfsr 1,1
  4961  00C6  3F40               	moviw [0]fsr1
  4962  00C7  0021               	movlb	1	; select bank1
  4963  00C8  00B2               	movwf	InitWigwagPattern@head^(0+128)
  4964  00C9  3F41               	moviw [1]fsr1
  4965  00CA  00B3               	movwf	(InitWigwagPattern@head+1)^(0+128)
  4966  00CB                     l1822:	
  4967                           
  4968                           ;Pattern.c: 104:     for( int i = 0; i < 3; i++ )
  4969  00CB  01AC               	clrf	InitWigwagPattern@i^(0+128)
  4970  00CC  01AD               	clrf	(InitWigwagPattern@i+1)^(0+128)
  4971  00CD                     l1828:	
  4972                           
  4973                           ;Pattern.c: 105:     {;Pattern.c: 106:         AppendStage( head, CopyStageData( NewStag
      +                          e(), left_side_on ) );
  4974  00CD  0021               	movlb	1	; select bank1
  4975  00CE  0833               	movf	(InitWigwagPattern@head+1)^(0+128),w
  4976  00CF  0020               	movlb	0	; select bank0
  4977  00D0  00B6               	movwf	AppendStage@head+1
  4978  00D1  0021               	movlb	1	; select bank1
  4979  00D2  0832               	movf	InitWigwagPattern@head^(0+128),w
  4980  00D3  0020               	movlb	0	; select bank0
  4981  00D4  00B5               	movwf	AppendStage@head
  4982  00D5  3182  226B  3180   	fcall	_NewStage
  4983  00D8  0878               	movf	?_NewStage+1,w
  4984  00D9  0020               	movlb	0	; select bank0
  4985  00DA  00AD               	movwf	CopyStageData@dest+1
  4986  00DB  0877               	movf	?_NewStage,w
  4987  00DC  00AC               	movwf	CopyStageData@dest
  4988  00DD  0021               	movlb	1	; select bank1
  4989  00DE  0829               	movf	(InitWigwagPattern@left_side_on+1)^(0+128),w
  4990  00DF  0020               	movlb	0	; select bank0
  4991  00E0  00AF               	movwf	CopyStageData@source+1
  4992  00E1  0021               	movlb	1	; select bank1
  4993  00E2  0828               	movf	InitWigwagPattern@left_side_on^(0+128),w
  4994  00E3  0020               	movlb	0	; select bank0
  4995  00E4  00AE               	movwf	CopyStageData@source
  4996  00E5  3182  22BA  3180   	fcall	_CopyStageData
  4997  00E8  0020               	movlb	0	; select bank0
  4998  00E9  082D               	movf	?_CopyStageData+1,w
  4999  00EA  00B8               	movwf	AppendStage@new_stage+1
  5000  00EB  082C               	movf	?_CopyStageData,w
  5001  00EC  00B7               	movwf	AppendStage@new_stage
  5002  00ED  3182  2213  3180   	fcall	_AppendStage
  5003                           
  5004                           ;Pattern.c: 107:         AppendStage( head, CopyStageData( NewStage(), off ) );
  5005  00F0  0021               	movlb	1	; select bank1
  5006  00F1  0833               	movf	(InitWigwagPattern@head+1)^(0+128),w
  5007  00F2  0020               	movlb	0	; select bank0
  5008  00F3  00B6               	movwf	AppendStage@head+1
  5009  00F4  0021               	movlb	1	; select bank1
  5010  00F5  0832               	movf	InitWigwagPattern@head^(0+128),w
  5011  00F6  0020               	movlb	0	; select bank0
  5012  00F7  00B5               	movwf	AppendStage@head
  5013  00F8  3182  226B  3180   	fcall	_NewStage
  5014  00FB  0878               	movf	?_NewStage+1,w
  5015  00FC  0020               	movlb	0	; select bank0
  5016  00FD  00AD               	movwf	CopyStageData@dest+1
  5017  00FE  0877               	movf	?_NewStage,w
  5018  00FF  00AC               	movwf	CopyStageData@dest
  5019  0100  0021               	movlb	1	; select bank1
  5020  0101  0831               	movf	(InitWigwagPattern@off+1)^(0+128),w
  5021  0102  0020               	movlb	0	; select bank0
  5022  0103  00AF               	movwf	CopyStageData@source+1
  5023  0104  0021               	movlb	1	; select bank1
  5024  0105  0830               	movf	InitWigwagPattern@off^(0+128),w
  5025  0106  0020               	movlb	0	; select bank0
  5026  0107  00AE               	movwf	CopyStageData@source
  5027  0108  3182  22BA  3180   	fcall	_CopyStageData
  5028  010B  0020               	movlb	0	; select bank0
  5029  010C  082D               	movf	?_CopyStageData+1,w
  5030  010D  00B8               	movwf	AppendStage@new_stage+1
  5031  010E  082C               	movf	?_CopyStageData,w
  5032  010F  00B7               	movwf	AppendStage@new_stage
  5033  0110  3182  2213  3180   	fcall	_AppendStage
  5034  0113                     l1830:	
  5035                           
  5036                           ;Pattern.c: 108:     }
  5037  0113  3001               	movlw	1
  5038  0114  0021               	movlb	1	; select bank1
  5039  0115  07AC               	addwf	InitWigwagPattern@i^(0+128),f
  5040  0116  3000               	movlw	0
  5041  0117  3DAD               	addwfc	(InitWigwagPattern@i+1)^(0+128),f
  5042  0118                     l1832:	
  5043  0118  082D               	movf	(InitWigwagPattern@i+1)^(0+128),w
  5044  0119  3A80               	xorlw	128
  5045  011A  0020               	movlb	0	; select bank0
  5046  011B  00BF               	movwf	??_InitWigwagPattern
  5047  011C  3080               	movlw	128
  5048  011D  023F               	subwf	??_InitWigwagPattern,w
  5049  011E  1D03               	skipz
  5050  011F  2923               	goto	u475
  5051  0120  3003               	movlw	3
  5052  0121  0021               	movlb	1	; select bank1
  5053  0122  022C               	subwf	InitWigwagPattern@i^(0+128),w
  5054  0123                     u475:	
  5055  0123  1C03               	skipc
  5056  0124  2926               	goto	u471
  5057  0125  2927               	goto	u470
  5058  0126                     u471:	
  5059  0126  28CD               	goto	l1828
  5060  0127                     u470:	
  5061  0127                     l1834:	
  5062                           
  5063                           ;Pattern.c: 110:     AppendStage( head, CopyStageData( NewStage(), off ) );
  5064  0127  0021               	movlb	1	; select bank1
  5065  0128  0833               	movf	(InitWigwagPattern@head+1)^(0+128),w
  5066  0129  0020               	movlb	0	; select bank0
  5067  012A  00B6               	movwf	AppendStage@head+1
  5068  012B  0021               	movlb	1	; select bank1
  5069  012C  0832               	movf	InitWigwagPattern@head^(0+128),w
  5070  012D  0020               	movlb	0	; select bank0
  5071  012E  00B5               	movwf	AppendStage@head
  5072  012F  3182  226B  3180   	fcall	_NewStage
  5073  0132  0878               	movf	?_NewStage+1,w
  5074  0133  0020               	movlb	0	; select bank0
  5075  0134  00AD               	movwf	CopyStageData@dest+1
  5076  0135  0877               	movf	?_NewStage,w
  5077  0136  00AC               	movwf	CopyStageData@dest
  5078  0137  0021               	movlb	1	; select bank1
  5079  0138  0831               	movf	(InitWigwagPattern@off+1)^(0+128),w
  5080  0139  0020               	movlb	0	; select bank0
  5081  013A  00AF               	movwf	CopyStageData@source+1
  5082  013B  0021               	movlb	1	; select bank1
  5083  013C  0830               	movf	InitWigwagPattern@off^(0+128),w
  5084  013D  0020               	movlb	0	; select bank0
  5085  013E  00AE               	movwf	CopyStageData@source
  5086  013F  3182  22BA  3180   	fcall	_CopyStageData
  5087  0142  0020               	movlb	0	; select bank0
  5088  0143  082D               	movf	?_CopyStageData+1,w
  5089  0144  00B8               	movwf	AppendStage@new_stage+1
  5090  0145  082C               	movf	?_CopyStageData,w
  5091  0146  00B7               	movwf	AppendStage@new_stage
  5092  0147  3182  2213  3180   	fcall	_AppendStage
  5093  014A                     l1836:	
  5094                           
  5095                           ;Pattern.c: 112:     for( int i = 0; i < 3; i++ )
  5096  014A  0021               	movlb	1	; select bank1
  5097  014B  01AE               	clrf	InitWigwagPattern@i_759^(0+128)
  5098  014C  01AF               	clrf	(InitWigwagPattern@i_759+1)^(0+128)
  5099  014D                     l1842:	
  5100                           
  5101                           ;Pattern.c: 113:     {;Pattern.c: 114:         AppendStage( head, CopyStageData( NewStag
      +                          e(), right_side_on ) );
  5102  014D  0021               	movlb	1	; select bank1
  5103  014E  0833               	movf	(InitWigwagPattern@head+1)^(0+128),w
  5104  014F  0020               	movlb	0	; select bank0
  5105  0150  00B6               	movwf	AppendStage@head+1
  5106  0151  0021               	movlb	1	; select bank1
  5107  0152  0832               	movf	InitWigwagPattern@head^(0+128),w
  5108  0153  0020               	movlb	0	; select bank0
  5109  0154  00B5               	movwf	AppendStage@head
  5110  0155  3182  226B  3180   	fcall	_NewStage
  5111  0158  0878               	movf	?_NewStage+1,w
  5112  0159  0020               	movlb	0	; select bank0
  5113  015A  00AD               	movwf	CopyStageData@dest+1
  5114  015B  0877               	movf	?_NewStage,w
  5115  015C  00AC               	movwf	CopyStageData@dest
  5116  015D  0021               	movlb	1	; select bank1
  5117  015E  082B               	movf	(InitWigwagPattern@right_side_on+1)^(0+128),w
  5118  015F  0020               	movlb	0	; select bank0
  5119  0160  00AF               	movwf	CopyStageData@source+1
  5120  0161  0021               	movlb	1	; select bank1
  5121  0162  082A               	movf	InitWigwagPattern@right_side_on^(0+128),w
  5122  0163  0020               	movlb	0	; select bank0
  5123  0164  00AE               	movwf	CopyStageData@source
  5124  0165  3182  22BA  3180   	fcall	_CopyStageData
  5125  0168  0020               	movlb	0	; select bank0
  5126  0169  082D               	movf	?_CopyStageData+1,w
  5127  016A  00B8               	movwf	AppendStage@new_stage+1
  5128  016B  082C               	movf	?_CopyStageData,w
  5129  016C  00B7               	movwf	AppendStage@new_stage
  5130  016D  3182  2213  3180   	fcall	_AppendStage
  5131                           
  5132                           ;Pattern.c: 115:         AppendStage( head, CopyStageData( NewStage(), off ) );
  5133  0170  0021               	movlb	1	; select bank1
  5134  0171  0833               	movf	(InitWigwagPattern@head+1)^(0+128),w
  5135  0172  0020               	movlb	0	; select bank0
  5136  0173  00B6               	movwf	AppendStage@head+1
  5137  0174  0021               	movlb	1	; select bank1
  5138  0175  0832               	movf	InitWigwagPattern@head^(0+128),w
  5139  0176  0020               	movlb	0	; select bank0
  5140  0177  00B5               	movwf	AppendStage@head
  5141  0178  3182  226B  3180   	fcall	_NewStage
  5142  017B  0878               	movf	?_NewStage+1,w
  5143  017C  0020               	movlb	0	; select bank0
  5144  017D  00AD               	movwf	CopyStageData@dest+1
  5145  017E  0877               	movf	?_NewStage,w
  5146  017F  00AC               	movwf	CopyStageData@dest
  5147  0180  0021               	movlb	1	; select bank1
  5148  0181  0831               	movf	(InitWigwagPattern@off+1)^(0+128),w
  5149  0182  0020               	movlb	0	; select bank0
  5150  0183  00AF               	movwf	CopyStageData@source+1
  5151  0184  0021               	movlb	1	; select bank1
  5152  0185  0830               	movf	InitWigwagPattern@off^(0+128),w
  5153  0186  0020               	movlb	0	; select bank0
  5154  0187  00AE               	movwf	CopyStageData@source
  5155  0188  3182  22BA  3180   	fcall	_CopyStageData
  5156  018B  0020               	movlb	0	; select bank0
  5157  018C  082D               	movf	?_CopyStageData+1,w
  5158  018D  00B8               	movwf	AppendStage@new_stage+1
  5159  018E  082C               	movf	?_CopyStageData,w
  5160  018F  00B7               	movwf	AppendStage@new_stage
  5161  0190  3182  2213  3180   	fcall	_AppendStage
  5162  0193                     l1844:	
  5163                           
  5164                           ;Pattern.c: 116:     }
  5165  0193  3001               	movlw	1
  5166  0194  0021               	movlb	1	; select bank1
  5167  0195  07AE               	addwf	InitWigwagPattern@i_759^(0+128),f
  5168  0196  3000               	movlw	0
  5169  0197  3DAF               	addwfc	(InitWigwagPattern@i_759+1)^(0+128),f
  5170  0198                     l1846:	
  5171  0198  082F               	movf	(InitWigwagPattern@i_759+1)^(0+128),w
  5172  0199  3A80               	xorlw	128
  5173  019A  0020               	movlb	0	; select bank0
  5174  019B  00BF               	movwf	??_InitWigwagPattern
  5175  019C  3080               	movlw	128
  5176  019D  023F               	subwf	??_InitWigwagPattern,w
  5177  019E  1D03               	skipz
  5178  019F  29A3               	goto	u485
  5179  01A0  3003               	movlw	3
  5180  01A1  0021               	movlb	1	; select bank1
  5181  01A2  022E               	subwf	InitWigwagPattern@i_759^(0+128),w
  5182  01A3                     u485:	
  5183  01A3  1C03               	skipc
  5184  01A4  29A6               	goto	u481
  5185  01A5  29A7               	goto	u480
  5186  01A6                     u481:	
  5187  01A6  294D               	goto	l1842
  5188  01A7                     u480:	
  5189  01A7                     l391:	
  5190  01A7  0008               	return
  5191  01A8                     __end_of_InitWigwagPattern:	
  5192                           
  5193                           	psect	text13
  5194  02BA                     __ptext13:	
  5195 ;; *************** function _CopyStageData *****************
  5196 ;; Defined at:
  5197 ;;		line 51 in file "Pattern.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;  dest            2   12[BANK0 ] PTR struct Stage
  5200 ;;		 -> stage_stash(320), NULL(0), 
  5201 ;;  source          2   14[BANK0 ] PTR struct Stage
  5202 ;;		 -> stage_stash(320), NULL(0), 
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;  i               2   19[BANK0 ] int 
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  2   12[BANK0 ] PTR struct Stage
  5207 ;; Registers used:
  5208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5214 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5215 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5217 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5218 ;;Total ram usage:        9 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:    4
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_InitWigwagPattern
  5225 ;;		_CopyStage
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           
  5230                           ;psect for function _CopyStageData
  5231  02BA                     _CopyStageData:	
  5232  02BA                     l1774:	
  5233                           ;incstack = 0
  5234                           ; Regs used in _CopyStageData: [wreg-fsr1h+status,2+status,0]
  5235                           
  5236                           
  5237                           ;Pattern.c: 51: struct Stage* CopyStageData( struct Stage* dest, struct Stage* source );
      +                          Pattern.c: 52: {;Pattern.c: 53:     for( int i = 0; i < NUM_LIGHTS; i++ )
  5238  02BA  0020               	movlb	0	; select bank0
  5239  02BB  01B3               	clrf	CopyStageData@i
  5240  02BC  01B4               	clrf	CopyStageData@i+1
  5241  02BD                     l1780:	
  5242                           
  5243                           ;Pattern.c: 54:         dest->light_states[i] = source->light_states[i];
  5244  02BD  0020               	movlb	0	; select bank0
  5245  02BE  0833               	movf	CopyStageData@i,w
  5246  02BF  072E               	addwf	CopyStageData@source,w
  5247  02C0  0086               	movwf	6
  5248  02C1  0834               	movf	CopyStageData@i+1,w
  5249  02C2  3D2F               	addwfc	CopyStageData@source+1,w
  5250  02C3  0087               	movwf	7
  5251  02C4  0801               	movf	1,w
  5252  02C5  00B0               	movwf	??_CopyStageData
  5253  02C6  0833               	movf	CopyStageData@i,w
  5254  02C7  072C               	addwf	CopyStageData@dest,w
  5255  02C8  00B1               	movwf	??_CopyStageData+1
  5256  02C9  0834               	movf	CopyStageData@i+1,w
  5257  02CA  3D2D               	addwfc	CopyStageData@dest+1,w
  5258  02CB  00B2               	movwf	??_CopyStageData+2
  5259  02CC  0831               	movf	??_CopyStageData+1,w
  5260  02CD  0086               	movwf	6
  5261  02CE  0832               	movf	??_CopyStageData+2,w
  5262  02CF  0087               	movwf	7
  5263  02D0  0830               	movf	??_CopyStageData,w
  5264  02D1  0081               	movwf	1
  5265  02D2                     l1782:	
  5266  02D2  3001               	movlw	1
  5267  02D3  07B3               	addwf	CopyStageData@i,f
  5268  02D4  3000               	movlw	0
  5269  02D5  3DB4               	addwfc	CopyStageData@i+1,f
  5270  02D6                     l1784:	
  5271  02D6  0834               	movf	CopyStageData@i+1,w
  5272  02D7  3A80               	xorlw	128
  5273  02D8  00B0               	movwf	??_CopyStageData
  5274  02D9  3080               	movlw	128
  5275  02DA  0230               	subwf	??_CopyStageData,w
  5276  02DB  1D03               	skipz
  5277  02DC  2ADF               	goto	u445
  5278  02DD  3004               	movlw	4
  5279  02DE  0233               	subwf	CopyStageData@i,w
  5280  02DF                     u445:	
  5281  02DF  1C03               	skipc
  5282  02E0  2AE2               	goto	u441
  5283  02E1  2AE3               	goto	u440
  5284  02E2                     u441:	
  5285  02E2  2ABD               	goto	l1780
  5286  02E3                     u440:	
  5287  02E3                     l1786:	
  5288                           
  5289                           ;Pattern.c: 55:     dest->time_ms = source->time_ms;
  5290  02E3  0020               	movlb	0	; select bank0
  5291  02E4  082E               	movf	CopyStageData@source,w
  5292  02E5  0086               	movwf	6
  5293  02E6  082F               	movf	CopyStageData@source+1,w
  5294  02E7  0087               	movwf	7
  5295  02E8  3144               	addfsr 1,4
  5296  02E9  082C               	movf	CopyStageData@dest,w
  5297  02EA  0084               	movwf	4
  5298  02EB  082D               	movf	CopyStageData@dest+1,w
  5299  02EC  0085               	movwf	5
  5300  02ED  3104               	addfsr 0,4
  5301  02EE  3F40               	moviw [0]fsr1
  5302  02EF  3F80               	movwi [0]fsr0
  5303  02F0  3F41               	moviw [1]fsr1
  5304  02F1  3F81               	movwi [1]fsr0
  5305  02F2                     l1788:	
  5306  02F2                     l366:	
  5307                           ;Pattern.c: 56:     return dest;
  5308                           
  5309  02F2  0008               	return
  5310  02F3                     __end_of_CopyStageData:	
  5311                           
  5312                           	psect	text14
  5313  0353                     __ptext14:	
  5314 ;; *************** function _ConstructStage *****************
  5315 ;; Defined at:
  5316 ;;		line 35 in file "Pattern.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  states          1    wreg     PTR const _Bool 
  5319 ;;		 -> InitWigwagPattern@right_side_states(4), InitWigwagPattern@left_side_states(4), 
  5320 ;;  time_ms         2   12[BANK0 ] const unsigned short 
  5321 ;;  next            1   14[BANK0 ] PTR struct Stage
  5322 ;;		 -> NULL(0), 
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;  states          1   15[BANK0 ] PTR const _Bool 
  5325 ;;		 -> InitWigwagPattern@right_side_states(4), InitWigwagPattern@left_side_states(4), 
  5326 ;;  new_stage       2   16[BANK0 ] PTR struct Stage
  5327 ;;		 -> stage_stash(320), NULL(0), 
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  2   12[BANK0 ] PTR struct Stage
  5330 ;; Registers used:
  5331 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5337 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5338 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5339 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5340 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5341 ;;Total ram usage:        7 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; Hardware stack levels required when called:    6
  5344 ;; This function calls:
  5345 ;;		_AssignLightStates
  5346 ;;		_NewStage
  5347 ;; This function is called by:
  5348 ;;		_InitWigwagPattern
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           
  5353                           ;psect for function _ConstructStage
  5354  0353                     _ConstructStage:	
  5355                           
  5356                           ;incstack = 0
  5357                           ; Regs used in _ConstructStage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5358                           ;ConstructStage@states stored from wreg
  5359  0353  0020               	movlb	0	; select bank0
  5360  0354  00AF               	movwf	ConstructStage@states
  5361  0355                     l1764:	
  5362                           
  5363                           ;Pattern.c: 35: struct Stage* ConstructStage( const _Bool states[NUM_LIGHTS], const uint
      +                           time_ms, struct Stage* next );Pattern.c: 36: {;Pattern.c: 37:     struct Stage* new_sta
      +                          ge = NewStage();
  5364  0355  3182  226B  3183   	fcall	_NewStage
  5365  0358  0878               	movf	?_NewStage+1,w
  5366  0359  0020               	movlb	0	; select bank0
  5367  035A  00B1               	movwf	ConstructStage@new_stage+1
  5368  035B  0877               	movf	?_NewStage,w
  5369  035C  00B0               	movwf	ConstructStage@new_stage
  5370                           
  5371                           ;Pattern.c: 38:     AssignLightStates( new_stage, states );
  5372  035D  0831               	movf	ConstructStage@new_stage+1,w
  5373  035E  00F3               	movwf	AssignLightStates@stage+1
  5374  035F  0830               	movf	ConstructStage@new_stage,w
  5375  0360  00F2               	movwf	AssignLightStates@stage
  5376  0361  082F               	movf	ConstructStage@states,w
  5377  0362  00F9               	movwf	??_ConstructStage
  5378  0363  0879               	movf	??_ConstructStage,w
  5379  0364  00F4               	movwf	AssignLightStates@states
  5380  0365  3183  23AA  3183   	fcall	_AssignLightStates
  5381  0368                     l1766:	
  5382                           
  5383                           ;Pattern.c: 39:     new_stage->time_ms = time_ms;
  5384  0368  0020               	movlb	0	; select bank0
  5385  0369  0830               	movf	ConstructStage@new_stage,w
  5386  036A  0086               	movwf	6
  5387  036B  0831               	movf	ConstructStage@new_stage+1,w
  5388  036C  0087               	movwf	7
  5389  036D  3144               	addfsr 1,4
  5390  036E  082C               	movf	ConstructStage@time_ms,w
  5391  036F  3FC0               	movwi [0]fsr1
  5392  0370  082D               	movf	ConstructStage@time_ms+1,w
  5393  0371  3FC1               	movwi [1]fsr1
  5394  0372                     l1768:	
  5395                           
  5396                           ;Pattern.c: 40:     new_stage->next = next;
  5397  0372  0830               	movf	ConstructStage@new_stage,w
  5398  0373  0086               	movwf	6
  5399  0374  0831               	movf	ConstructStage@new_stage+1,w
  5400  0375  0087               	movwf	7
  5401  0376  3146               	addfsr 1,6
  5402  0377  082E               	movf	ConstructStage@next,w
  5403  0378  3FC0               	movwi [0]fsr1
  5404  0379  3000               	movlw	0
  5405  037A  3FC1               	movwi [1]fsr1
  5406  037B                     l1770:	
  5407                           
  5408                           ;Pattern.c: 41:     return new_stage;
  5409  037B  0831               	movf	ConstructStage@new_stage+1,w
  5410  037C  00AD               	movwf	?_ConstructStage+1
  5411  037D  0830               	movf	ConstructStage@new_stage,w
  5412  037E  00AC               	movwf	?_ConstructStage
  5413  037F                     l358:	
  5414  037F  0008               	return
  5415  0380                     __end_of_ConstructStage:	
  5416                           
  5417                           	psect	text15
  5418  026B                     __ptext15:	
  5419 ;; *************** function _NewStage *****************
  5420 ;; Defined at:
  5421 ;;		line 21 in file "Pattern.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;		None
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;  init_states     4    6[BANK0 ] _Bool [4]
  5426 ;;  new_stage       2   10[BANK0 ] PTR struct Stage
  5427 ;;		 -> stage_stash(320), 
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  2    7[COMMON] PTR struct Stage
  5430 ;; Registers used:
  5431 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5438 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5439 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5440 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5441 ;;Total ram usage:       10 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; Hardware stack levels required when called:    5
  5444 ;; This function calls:
  5445 ;;		_AssignLightStates
  5446 ;; This function is called by:
  5447 ;;		_ConstructStage
  5448 ;;		_InitWigwagPattern
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           
  5453                           ;psect for function _NewStage
  5454  026B                     _NewStage:	
  5455  026B                     l1730:	
  5456                           ;incstack = 0
  5457                           ; Regs used in _NewStage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5458                           
  5459                           
  5460                           ;Pattern.c: 23:     if ( stage_list_iter >= MAX_STAGES )
  5461  026B  3000               	movlw	0
  5462  026C  0020               	movlb	0	; select bank0
  5463  026D  0244               	subwf	_stage_list_iter+1,w
  5464  026E  3028               	movlw	40
  5465  026F  1903               	skipnz
  5466  0270  0243               	subwf	_stage_list_iter,w
  5467  0271  1C03               	skipc
  5468  0272  2A74               	goto	u431
  5469  0273  2A75               	goto	u430
  5470  0274                     u431:	
  5471  0274  2A78               	goto	l1736
  5472  0275                     u430:	
  5473  0275                     l1732:	
  5474                           
  5475                           ;Pattern.c: 24:         return ((void*)0);
  5476  0275  01F7               	clrf	?_NewStage
  5477  0276  01F8               	clrf	?_NewStage+1
  5478  0277  2AB9               	goto	l353
  5479  0278                     l1736:	
  5480                           
  5481                           ;Pattern.c: 26:     struct Stage* new_stage = &stage_stash[ stage_list_iter++ ];
  5482  0278  0844               	movf	_stage_list_iter+1,w
  5483  0279  00A3               	movwf	??_NewStage+1
  5484  027A  0843               	movf	_stage_list_iter,w
  5485  027B  00A2               	movwf	??_NewStage
  5486  027C  35A2               	lslf	??_NewStage,f
  5487  027D  0DA3               	rlf	??_NewStage+1,f
  5488  027E  35A2               	lslf	??_NewStage,f
  5489  027F  0DA3               	rlf	??_NewStage+1,f
  5490  0280  35A2               	lslf	??_NewStage,f
  5491  0281  0DA3               	rlf	??_NewStage+1,f
  5492  0282  30B0               	movlw	176
  5493  0283  00A4               	movwf	??_NewStage+2
  5494  0284  3022               	movlw	34
  5495  0285  00A5               	movwf	??_NewStage+3
  5496  0286  0822               	movf	??_NewStage,w
  5497  0287  0724               	addwf	??_NewStage+2,w
  5498  0288  00AA               	movwf	NewStage@new_stage
  5499  0289  0823               	movf	??_NewStage+1,w
  5500  028A  3D25               	addwfc	??_NewStage+3,w
  5501  028B  00AB               	movwf	NewStage@new_stage+1
  5502  028C                     l1738:	
  5503  028C  3001               	movlw	1
  5504  028D  07C3               	addwf	_stage_list_iter,f
  5505  028E  3000               	movlw	0
  5506  028F  3DC4               	addwfc	_stage_list_iter+1,f
  5507  0290                     l1740:	
  5508                           
  5509                           ;Pattern.c: 27:     _Bool init_states[NUM_LIGHTS] = { 0, 0, 0, 0 };
  5510  0290  3000               	movlw	0
  5511  0291  00A9               	movwf	NewStage@init_states+3
  5512  0292  3000               	movlw	0
  5513  0293  00A8               	movwf	NewStage@init_states+2
  5514  0294  3000               	movlw	0
  5515  0295  00A7               	movwf	NewStage@init_states+1
  5516  0296  3000               	movlw	0
  5517  0297  00A6               	movwf	NewStage@init_states
  5518  0298                     l1742:	
  5519                           
  5520                           ;Pattern.c: 28:     AssignLightStates( new_stage, init_states );
  5521  0298  082B               	movf	NewStage@new_stage+1,w
  5522  0299  00F3               	movwf	AssignLightStates@stage+1
  5523  029A  082A               	movf	NewStage@new_stage,w
  5524  029B  00F2               	movwf	AssignLightStates@stage
  5525  029C  3026               	movlw	(low (NewStage@init_states| 0))& (0+255)
  5526  029D  00A2               	movwf	??_NewStage
  5527  029E  0822               	movf	??_NewStage,w
  5528  029F  00F4               	movwf	AssignLightStates@states
  5529  02A0  3183  23AA  3182   	fcall	_AssignLightStates
  5530  02A3                     l1744:	
  5531                           
  5532                           ;Pattern.c: 29:     new_stage->time_ms = 120;
  5533  02A3  0020               	movlb	0	; select bank0
  5534  02A4  082A               	movf	NewStage@new_stage,w
  5535  02A5  0086               	movwf	6
  5536  02A6  082B               	movf	NewStage@new_stage+1,w
  5537  02A7  0087               	movwf	7
  5538  02A8  3144               	addfsr 1,4
  5539  02A9  3078               	movlw	120
  5540  02AA  3FC0               	movwi [0]fsr1
  5541  02AB  3000               	movlw	0
  5542  02AC  3FC1               	movwi [1]fsr1
  5543  02AD                     l1746:	
  5544                           
  5545                           ;Pattern.c: 30:     new_stage->next = ((void*)0);
  5546  02AD  082A               	movf	NewStage@new_stage,w
  5547  02AE  0086               	movwf	6
  5548  02AF  082B               	movf	NewStage@new_stage+1,w
  5549  02B0  0087               	movwf	7
  5550  02B1  3146               	addfsr 1,6
  5551  02B2  3000               	movlw	0
  5552  02B3  3FC0               	movwi [0]fsr1
  5553  02B4  3FC1               	movwi [1]fsr1
  5554  02B5                     l1748:	
  5555                           
  5556                           ;Pattern.c: 32:     return new_stage;
  5557  02B5  082B               	movf	NewStage@new_stage+1,w
  5558  02B6  00F8               	movwf	?_NewStage+1
  5559  02B7  082A               	movf	NewStage@new_stage,w
  5560  02B8  00F7               	movwf	?_NewStage
  5561  02B9                     l353:	
  5562  02B9  0008               	return
  5563  02BA                     __end_of_NewStage:	
  5564                           
  5565                           	psect	text16
  5566  03AA                     __ptext16:	
  5567 ;; *************** function _AssignLightStates *****************
  5568 ;; Defined at:
  5569 ;;		line 13 in file "Pattern.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  stage           2    2[COMMON] PTR struct Stage
  5572 ;;		 -> stage_stash(320), NULL(0), 
  5573 ;;  states          1    4[COMMON] PTR const _Bool 
  5574 ;;		 -> InitWigwagPattern@right_side_states(4), InitWigwagPattern@left_side_states(4), NewStage@init_states(4), 
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;  i               2    0[BANK0 ] unsigned short 
  5577 ;; Return value:  Size  Location     Type
  5578 ;;                  1    wreg      void 
  5579 ;; Registers used:
  5580 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5581 ;; Tracked objects:
  5582 ;;		On entry : 0/0
  5583 ;;		On exit  : 0/0
  5584 ;;		Unchanged: 0/0
  5585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5586 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5587 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5588 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5589 ;;      Totals:         7       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5590 ;;Total ram usage:        9 bytes
  5591 ;; Hardware stack levels used:    1
  5592 ;; Hardware stack levels required when called:    4
  5593 ;; This function calls:
  5594 ;;		Nothing
  5595 ;; This function is called by:
  5596 ;;		_NewStage
  5597 ;;		_ConstructStage
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           
  5602                           ;psect for function _AssignLightStates
  5603  03AA                     _AssignLightStates:	
  5604  03AA                     l1718:	
  5605                           ;incstack = 0
  5606                           ; Regs used in _AssignLightStates: [wreg+fsr1l+fsr1h+status,2+status,0]
  5607                           
  5608                           
  5609                           ;Pattern.c: 13: void AssignLightStates( struct Stage* stage, const _Bool states[ NUM_LIG
      +                          HTS ] );Pattern.c: 14: {;Pattern.c: 15:     for( uint i = 0; i < NUM_LIGHTS; i++ )
  5610  03AA  0020               	movlb	0	; select bank0
  5611  03AB  01A0               	clrf	AssignLightStates@i
  5612  03AC  01A1               	clrf	AssignLightStates@i+1
  5613  03AD                     l1724:	
  5614                           
  5615                           ;Pattern.c: 16:     {;Pattern.c: 17:         stage->light_states[i] = states[i];
  5616  03AD  0820               	movf	AssignLightStates@i,w
  5617  03AE  0774               	addwf	AssignLightStates@states,w
  5618  03AF  00F5               	movwf	??_AssignLightStates
  5619  03B0  0875               	movf	??_AssignLightStates,w
  5620  03B1  0086               	movwf	6
  5621  03B2  0187               	clrf	7
  5622  03B3  0801               	movf	1,w
  5623  03B4  00F6               	movwf	??_AssignLightStates+1
  5624  03B5  0820               	movf	AssignLightStates@i,w
  5625  03B6  0772               	addwf	AssignLightStates@stage,w
  5626  03B7  00F7               	movwf	??_AssignLightStates+2
  5627  03B8  0821               	movf	AssignLightStates@i+1,w
  5628  03B9  3D73               	addwfc	AssignLightStates@stage+1,w
  5629  03BA  00F8               	movwf	??_AssignLightStates+3
  5630  03BB  0877               	movf	??_AssignLightStates+2,w
  5631  03BC  0086               	movwf	6
  5632  03BD  0878               	movf	??_AssignLightStates+3,w
  5633  03BE  0087               	movwf	7
  5634  03BF  0876               	movf	??_AssignLightStates+1,w
  5635  03C0  0081               	movwf	1
  5636  03C1                     l1726:	
  5637                           
  5638                           ;Pattern.c: 18:     }
  5639  03C1  3001               	movlw	1
  5640  03C2  07A0               	addwf	AssignLightStates@i,f
  5641  03C3  3000               	movlw	0
  5642  03C4  3DA1               	addwfc	AssignLightStates@i+1,f
  5643  03C5                     l1728:	
  5644  03C5  3000               	movlw	0
  5645  03C6  0221               	subwf	AssignLightStates@i+1,w
  5646  03C7  3004               	movlw	4
  5647  03C8  1903               	skipnz
  5648  03C9  0220               	subwf	AssignLightStates@i,w
  5649  03CA  1C03               	skipc
  5650  03CB  2BCD               	goto	u421
  5651  03CC  2BCE               	goto	u420
  5652  03CD                     u421:	
  5653  03CD  2BAD               	goto	l1724
  5654  03CE                     u420:	
  5655  03CE                     l349:	
  5656  03CE  0008               	return
  5657  03CF                     __end_of_AssignLightStates:	
  5658                           
  5659                           	psect	text17
  5660  0213                     __ptext17:	
  5661 ;; *************** function _AppendStage *****************
  5662 ;; Defined at:
  5663 ;;		line 59 in file "Pattern.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  head            2   21[BANK0 ] PTR struct Stage
  5666 ;;		 -> stage_stash(320), NULL(0), 
  5667 ;;  new_stage       2   23[BANK0 ] PTR struct Stage
  5668 ;;		 -> stage_stash(320), NULL(0), 
  5669 ;; Auto vars:     Size  Location     Type
  5670 ;;  last_stage      2   27[BANK0 ] PTR struct Stage
  5671 ;;		 -> stage_stash(320), NULL(0), 
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  1    wreg      void 
  5674 ;; Registers used:
  5675 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5681 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5682 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5683 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5684 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5685 ;;Total ram usage:        8 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; Hardware stack levels required when called:    4
  5688 ;; This function calls:
  5689 ;;		Nothing
  5690 ;; This function is called by:
  5691 ;;		_InitWigwagPattern
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           
  5696                           ;psect for function _AppendStage
  5697  0213                     _AppendStage:	
  5698  0213                     l1792:	
  5699                           ;incstack = 0
  5700                           ; Regs used in _AppendStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  5701                           
  5702                           
  5703                           ;Pattern.c: 59: void AppendStage( struct Stage* head, struct Stage* new_stage );Pattern.
      +                          c: 60: {;Pattern.c: 61:     if ( head->next == ((void*)0) )
  5704  0213  0020               	movlb	0	; select bank0
  5705  0214  0835               	movf	AppendStage@head,w
  5706  0215  0086               	movwf	6
  5707  0216  0836               	movf	AppendStage@head+1,w
  5708  0217  0087               	movwf	7
  5709  0218  3146               	addfsr 1,6
  5710  0219  0016               	moviw fsr1++
  5711  021A  0401               	iorwf	1,w
  5712  021B  1D03               	btfss	3,2
  5713  021C  2A1E               	goto	u451
  5714  021D  2A1F               	goto	u450
  5715  021E                     u451:	
  5716  021E  2A32               	goto	l1796
  5717  021F                     u450:	
  5718  021F                     l1794:	
  5719                           
  5720                           ;Pattern.c: 62:     {;Pattern.c: 63:         head->next = new_stage;
  5721  021F  0835               	movf	AppendStage@head,w
  5722  0220  0086               	movwf	6
  5723  0221  0836               	movf	AppendStage@head+1,w
  5724  0222  0087               	movwf	7
  5725  0223  3146               	addfsr 1,6
  5726  0224  0837               	movf	AppendStage@new_stage,w
  5727  0225  3FC0               	movwi [0]fsr1
  5728  0226  0838               	movf	AppendStage@new_stage+1,w
  5729  0227  3FC1               	movwi [1]fsr1
  5730                           
  5731                           ;Pattern.c: 64:         new_stage->next = head;
  5732  0228  0837               	movf	AppendStage@new_stage,w
  5733  0229  0086               	movwf	6
  5734  022A  0838               	movf	AppendStage@new_stage+1,w
  5735  022B  0087               	movwf	7
  5736  022C  3146               	addfsr 1,6
  5737  022D  0835               	movf	AppendStage@head,w
  5738  022E  3FC0               	movwi [0]fsr1
  5739  022F  0836               	movf	AppendStage@head+1,w
  5740  0230  3FC1               	movwi [1]fsr1
  5741                           
  5742                           ;Pattern.c: 65:     }
  5743  0231  2A6A               	goto	l374
  5744  0232                     l1796:	
  5745                           
  5746                           ;Pattern.c: 67:     {;Pattern.c: 68:         struct Stage* last_stage = head->next;
  5747  0232  0835               	movf	AppendStage@head,w
  5748  0233  0086               	movwf	6
  5749  0234  0836               	movf	AppendStage@head+1,w
  5750  0235  0087               	movwf	7
  5751  0236  3146               	addfsr 1,6
  5752  0237  3F40               	moviw [0]fsr1
  5753  0238  00BB               	movwf	AppendStage@last_stage
  5754  0239  3F41               	moviw [1]fsr1
  5755  023A  00BC               	movwf	AppendStage@last_stage+1
  5756                           
  5757                           ;Pattern.c: 69:         while( last_stage->next != head )
  5758  023B  2A45               	goto	l1800
  5759  023C                     l1798:	
  5760                           
  5761                           ;Pattern.c: 70:             last_stage = last_stage->next;
  5762  023C  083B               	movf	AppendStage@last_stage,w
  5763  023D  0086               	movwf	6
  5764  023E  083C               	movf	AppendStage@last_stage+1,w
  5765  023F  0087               	movwf	7
  5766  0240  3146               	addfsr 1,6
  5767  0241  3F40               	moviw [0]fsr1
  5768  0242  00BB               	movwf	AppendStage@last_stage
  5769  0243  3F41               	moviw [1]fsr1
  5770  0244  00BC               	movwf	AppendStage@last_stage+1
  5771  0245                     l1800:	
  5772                           
  5773                           ;Pattern.c: 69:         while( last_stage->next != head )
  5774  0245  083B               	movf	AppendStage@last_stage,w
  5775  0246  0086               	movwf	6
  5776  0247  083C               	movf	AppendStage@last_stage+1,w
  5777  0248  0087               	movwf	7
  5778  0249  3146               	addfsr 1,6
  5779  024A  3F40               	moviw [0]fsr1
  5780  024B  00B9               	movwf	??_AppendStage
  5781  024C  3F41               	moviw [1]fsr1
  5782  024D  00BA               	movwf	??_AppendStage+1
  5783  024E  0836               	movf	AppendStage@head+1,w
  5784  024F  063A               	xorwf	??_AppendStage+1,w
  5785  0250  1D03               	skipz
  5786  0251  2A54               	goto	u465
  5787  0252  0835               	movf	AppendStage@head,w
  5788  0253  0639               	xorwf	??_AppendStage,w
  5789  0254                     u465:	
  5790  0254  1D03               	skipz
  5791  0255  2A57               	goto	u461
  5792  0256  2A58               	goto	u460
  5793  0257                     u461:	
  5794  0257  2A3C               	goto	l1798
  5795  0258                     u460:	
  5796  0258                     l1802:	
  5797                           
  5798                           ;Pattern.c: 73:         last_stage->next = new_stage;
  5799  0258  083B               	movf	AppendStage@last_stage,w
  5800  0259  0086               	movwf	6
  5801  025A  083C               	movf	AppendStage@last_stage+1,w
  5802  025B  0087               	movwf	7
  5803  025C  3146               	addfsr 1,6
  5804  025D  0837               	movf	AppendStage@new_stage,w
  5805  025E  3FC0               	movwi [0]fsr1
  5806  025F  0838               	movf	AppendStage@new_stage+1,w
  5807  0260  3FC1               	movwi [1]fsr1
  5808                           
  5809                           ;Pattern.c: 74:         new_stage->next = head;
  5810  0261  0837               	movf	AppendStage@new_stage,w
  5811  0262  0086               	movwf	6
  5812  0263  0838               	movf	AppendStage@new_stage+1,w
  5813  0264  0087               	movwf	7
  5814  0265  3146               	addfsr 1,6
  5815  0266  0835               	movf	AppendStage@head,w
  5816  0267  3FC0               	movwi [0]fsr1
  5817  0268  0836               	movf	AppendStage@head+1,w
  5818  0269  3FC1               	movwi [1]fsr1
  5819  026A                     l374:	
  5820  026A  0008               	return
  5821  026B                     __end_of_AppendStage:	
  5822                           
  5823                           	psect	text18
  5824  0325                     __ptext18:	
  5825 ;; *************** function _PatternCycleInputChanged *****************
  5826 ;; Defined at:
  5827 ;;		line 10 in file "PatternSelector.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;		None
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;  delay_count     2    4[COMMON] unsigned short 
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  1    wreg      _Bool 
  5834 ;; Registers used:
  5835 ;;		wreg, status,2, status,0
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5842 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5843 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5844 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5845 ;;Total ram usage:        4 bytes
  5846 ;; Hardware stack levels used:    1
  5847 ;; Hardware stack levels required when called:    4
  5848 ;; This function calls:
  5849 ;;		Nothing
  5850 ;; This function is called by:
  5851 ;;		_main
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           
  5856                           ;psect for function _PatternCycleInputChanged
  5857  0325                     _PatternCycleInputChanged:	
  5858  0325                     l1630:	
  5859                           ;incstack = 0
  5860                           ; Regs used in _PatternCycleInputChanged: [wreg+status,2+status,0]
  5861                           
  5862                           
  5863                           ;PatternSelector.c: 12:     if ( cur_pc_input_state != last_pc_input_state )
  5864  0325  0020               	movlb	0	; select bank0
  5865  0326  084F               	movf	_cur_pc_input_state,w
  5866  0327  064E               	xorwf	_last_pc_input_state,w
  5867  0328  1903               	skipnz
  5868  0329  2B2B               	goto	u321
  5869  032A  2B2C               	goto	u320
  5870  032B                     u321:	
  5871  032B  2B3F               	goto	l1638
  5872  032C                     u320:	
  5873  032C                     l1632:	
  5874                           
  5875                           ;PatternSelector.c: 13:     {;PatternSelector.c: 14:         uint delay_count = 0;
  5876  032C  01F4               	clrf	PatternCycleInputChanged@delay_count
  5877  032D  01F5               	clrf	PatternCycleInputChanged@delay_count+1
  5878                           
  5879                           ;PatternSelector.c: 16:         while ( delay_count++ < 3 )
  5880  032E  2B41               	goto	l1642
  5881  032F                     l1634:	
  5882                           
  5883                           ;PatternSelector.c: 17:         {;PatternSelector.c: 18:             _delay((unsigned lo
      +                          ng)((10)*(1000000/4000.0)));
  5884  032F  3004               	movlw	4
  5885  0330  00F2               	movwf	??_PatternCycleInputChanged
  5886  0331  303E               	movlw	62
  5887  0332                     u517:	
  5888  0332  0B89               	decfsz	9,f
  5889  0333  2B32               	goto	u517
  5890  0334  0BF2               	decfsz	??_PatternCycleInputChanged,f
  5891  0335  2B32               	goto	u517
  5892  0336                     l1636:	
  5893                           
  5894                           ;PatternSelector.c: 20:             if( PORTCbits.RC5 != cur_pc_input_state )
  5895  0336  0020               	movlb	0	; select bank0
  5896  0337  0E0E               	swapf	14,w	;volatile
  5897  0338  0C89               	rrf	9,f
  5898  0339  3901               	andlw	1
  5899  033A  064F               	xorwf	_cur_pc_input_state,w
  5900  033B  1903               	skipnz
  5901  033C  2B3E               	goto	u331
  5902  033D  2B3F               	goto	u330
  5903  033E                     u331:	
  5904  033E  2B41               	goto	l1642
  5905  033F                     u330:	
  5906  033F                     l1638:	
  5907                           
  5908                           ;PatternSelector.c: 21:             {;PatternSelector.c: 22:                 return 0;
  5909  033F  3000               	movlw	0
  5910  0340  2B52               	goto	l302
  5911  0341                     l1642:	
  5912                           
  5913                           ;PatternSelector.c: 16:         while ( delay_count++ < 3 )
  5914  0341  0875               	movf	PatternCycleInputChanged@delay_count+1,w
  5915  0342  00F3               	movwf	??_PatternCycleInputChanged+1
  5916  0343  0874               	movf	PatternCycleInputChanged@delay_count,w
  5917  0344  00F2               	movwf	??_PatternCycleInputChanged
  5918  0345  0AF4               	incf	PatternCycleInputChanged@delay_count,f
  5919  0346  1903               	skipnz
  5920  0347  0AF5               	incf	PatternCycleInputChanged@delay_count+1,f
  5921  0348  3000               	movlw	0
  5922  0349  0273               	subwf	??_PatternCycleInputChanged+1,w
  5923  034A  3003               	movlw	3
  5924  034B  1903               	skipnz
  5925  034C  0272               	subwf	??_PatternCycleInputChanged,w
  5926  034D  1C03               	skipc
  5927  034E  2B50               	goto	u341
  5928  034F  2B51               	goto	u340
  5929  0350                     u341:	
  5930  0350  2B2F               	goto	l1634
  5931  0351                     u340:	
  5932  0351                     l1648:	
  5933                           
  5934                           ;PatternSelector.c: 29:     return 1;
  5935  0351  3001               	movlw	1
  5936  0352                     l302:	
  5937  0352  0008               	return
  5938  0353                     __end_of_PatternCycleInputChanged:	
  5939                           
  5940                           	psect	text19
  5941  01A8                     __ptext19:	
  5942 ;; *************** function _FlashPattern *****************
  5943 ;; Defined at:
  5944 ;;		line 11 in file "PatternFlasher.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;  pattern         2    6[COMMON] PTR struct Pattern
  5947 ;;		 -> Wigwag(3), 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;  current_time    2    8[COMMON] unsigned short 
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  1    wreg      void 
  5952 ;; Registers used:
  5953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5959 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5960 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5961 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5962 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5963 ;;Total ram usage:        8 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    5
  5966 ;; This function calls:
  5967 ;;		_SetLight
  5968 ;; This function is called by:
  5969 ;;		_main
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           
  5974                           ;psect for function _FlashPattern
  5975  01A8                     _FlashPattern:	
  5976  01A8                     l1862:	
  5977                           ;incstack = 0
  5978                           ; Regs used in _FlashPattern: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5979                           
  5980                           
  5981                           ;PatternFlasher.c: 11: void FlashPattern( struct Pattern* pattern );PatternFlasher.c: 12
      +                          : {;PatternFlasher.c: 13:     uint current_time = cur_ms;
  5982  01A8  0020               	movlb	0	; select bank0
  5983  01A9  084A               	movf	_cur_ms+1,w
  5984  01AA  00F9               	movwf	FlashPattern@current_time+1
  5985  01AB  0849               	movf	_cur_ms,w
  5986  01AC  00F8               	movwf	FlashPattern@current_time
  5987  01AD                     l1864:	
  5988                           
  5989                           ;PatternFlasher.c: 15:     if ( current_time - start_time > current_stage->time_ms )
  5990  01AD  0841               	movf	_start_time,w
  5991  01AE  0278               	subwf	FlashPattern@current_time,w
  5992  01AF  00A0               	movwf	??_FlashPattern
  5993  01B0  0842               	movf	_start_time+1,w
  5994  01B1  3B79               	subwfb	FlashPattern@current_time+1,w
  5995  01B2  00A1               	movwf	??_FlashPattern+1
  5996  01B3  087A               	movf	_current_stage,w
  5997  01B4  0086               	movwf	6
  5998  01B5  087B               	movf	_current_stage+1,w
  5999  01B6  0087               	movwf	7
  6000  01B7  3144               	addfsr 1,4
  6001  01B8  3F40               	moviw [0]fsr1
  6002  01B9  00A2               	movwf	??_FlashPattern+2
  6003  01BA  3F41               	moviw [1]fsr1
  6004  01BB  00A3               	movwf	??_FlashPattern+3
  6005  01BC  0821               	movf	??_FlashPattern+1,w
  6006  01BD  0223               	subwf	??_FlashPattern+3,w
  6007  01BE  1D03               	skipz
  6008  01BF  29C2               	goto	u495
  6009  01C0  0820               	movf	??_FlashPattern,w
  6010  01C1  0222               	subwf	??_FlashPattern+2,w
  6011  01C2                     u495:	
  6012  01C2  1803               	skipnc
  6013  01C3  29C5               	goto	u491
  6014  01C4  29C6               	goto	u490
  6015  01C5                     u491:	
  6016  01C5  29D5               	goto	l1872
  6017  01C6                     u490:	
  6018  01C6                     l1866:	
  6019                           
  6020                           ;PatternFlasher.c: 16:     {;PatternFlasher.c: 17:         current_stage = current_stage
      +                          ->next;
  6021  01C6  087A               	movf	_current_stage,w
  6022  01C7  0086               	movwf	6
  6023  01C8  087B               	movf	_current_stage+1,w
  6024  01C9  0087               	movwf	7
  6025  01CA  3146               	addfsr 1,6
  6026  01CB  3F40               	moviw [0]fsr1
  6027  01CC  00FA               	movwf	_current_stage
  6028  01CD  3F41               	moviw [1]fsr1
  6029  01CE  00FB               	movwf	_current_stage+1
  6030  01CF                     l1868:	
  6031                           
  6032                           ;PatternFlasher.c: 18:         start_time = current_time;
  6033  01CF  0879               	movf	FlashPattern@current_time+1,w
  6034  01D0  00C2               	movwf	_start_time+1
  6035  01D1  0878               	movf	FlashPattern@current_time,w
  6036  01D2  00C1               	movwf	_start_time
  6037  01D3                     l1870:	
  6038                           
  6039                           ;PatternFlasher.c: 19:         update_stage = 1;
  6040  01D3  01CD               	clrf	_update_stage
  6041  01D4  0ACD               	incf	_update_stage,f
  6042  01D5                     l1872:	
  6043                           
  6044                           ;PatternFlasher.c: 23:     if ( update_stage == 1 )
  6045  01D5  034D               	decf	_update_stage,w
  6046  01D6  1D03               	btfss	3,2
  6047  01D7  29D9               	goto	u501
  6048  01D8  29DA               	goto	u500
  6049  01D9                     u501:	
  6050  01D9  2A12               	goto	l424
  6051  01DA                     u500:	
  6052  01DA                     l1874:	
  6053                           
  6054                           ;PatternFlasher.c: 24:     {;PatternFlasher.c: 25:         SetLight( L1, current_stage->
      +                          light_states[L1] );
  6055  01DA  087A               	movf	_current_stage,w
  6056  01DB  0086               	movwf	6
  6057  01DC  087B               	movf	_current_stage+1,w
  6058  01DD  0087               	movwf	7
  6059  01DE  0801               	movf	1,w
  6060  01DF  00A0               	movwf	??_FlashPattern
  6061  01E0  0820               	movf	??_FlashPattern,w
  6062  01E1  00F2               	movwf	SetLight@state
  6063  01E2  3000               	movlw	0
  6064  01E3  3182  22F3  3181   	fcall	_SetLight
  6065                           
  6066                           ;PatternFlasher.c: 26:         SetLight( L2, current_stage->light_states[L2] );
  6067  01E6  087A               	movf	_current_stage,w
  6068  01E7  0086               	movwf	6
  6069  01E8  087B               	movf	_current_stage+1,w
  6070  01E9  0087               	movwf	7
  6071  01EA  3141               	addfsr 1,1
  6072  01EB  0801               	movf	1,w
  6073  01EC  0020               	movlb	0	; select bank0
  6074  01ED  00A0               	movwf	??_FlashPattern
  6075  01EE  0820               	movf	??_FlashPattern,w
  6076  01EF  00F2               	movwf	SetLight@state
  6077  01F0  3001               	movlw	1
  6078  01F1  3182  22F3  3181   	fcall	_SetLight
  6079                           
  6080                           ;PatternFlasher.c: 27:         SetLight( L3, current_stage->light_states[L3] );
  6081  01F4  087A               	movf	_current_stage,w
  6082  01F5  0086               	movwf	6
  6083  01F6  087B               	movf	_current_stage+1,w
  6084  01F7  0087               	movwf	7
  6085  01F8  3142               	addfsr 1,2
  6086  01F9  0801               	movf	1,w
  6087  01FA  0020               	movlb	0	; select bank0
  6088  01FB  00A0               	movwf	??_FlashPattern
  6089  01FC  0820               	movf	??_FlashPattern,w
  6090  01FD  00F2               	movwf	SetLight@state
  6091  01FE  3002               	movlw	2
  6092  01FF  3182  22F3  3181   	fcall	_SetLight
  6093                           
  6094                           ;PatternFlasher.c: 28:         SetLight( L4, current_stage->light_states[L4] );
  6095  0202  087A               	movf	_current_stage,w
  6096  0203  0086               	movwf	6
  6097  0204  087B               	movf	_current_stage+1,w
  6098  0205  0087               	movwf	7
  6099  0206  3143               	addfsr 1,3
  6100  0207  0801               	movf	1,w
  6101  0208  0020               	movlb	0	; select bank0
  6102  0209  00A0               	movwf	??_FlashPattern
  6103  020A  0820               	movf	??_FlashPattern,w
  6104  020B  00F2               	movwf	SetLight@state
  6105  020C  3003               	movlw	3
  6106  020D  3182  22F3  3181   	fcall	_SetLight
  6107  0210                     l1876:	
  6108                           
  6109                           ;PatternFlasher.c: 29:         update_stage = 0;
  6110  0210  0020               	movlb	0	; select bank0
  6111  0211  01CD               	clrf	_update_stage
  6112  0212                     l424:	
  6113  0212  0008               	return
  6114  0213                     __end_of_FlashPattern:	
  6115                           
  6116                           	psect	text20
  6117  02F3                     __ptext20:	
  6118 ;; *************** function _SetLight *****************
  6119 ;; Defined at:
  6120 ;;		line 12 in file "Lights.c"
  6121 ;; Parameters:    Size  Location     Type
  6122 ;;  light           1    wreg     const enum E39
  6123 ;;  state           1    2[COMMON] const _Bool 
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;  light           1    5[COMMON] const enum E39
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  1    wreg      void 
  6128 ;; Registers used:
  6129 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6135 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6136 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6137 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6138 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6139 ;;Total ram usage:        4 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:    4
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_SetOutputs
  6146 ;;		_FlashPattern
  6147 ;; This function uses a non-reentrant model
  6148 ;;
  6149                           
  6150                           
  6151                           ;psect for function _SetLight
  6152  02F3                     _SetLight:	
  6153                           
  6154                           ;incstack = 0
  6155                           ; Regs used in _SetLight: [wreg-fsr0h+status,2+status,0]
  6156                           ;SetLight@light stored from wreg
  6157  02F3  00F5               	movwf	SetLight@light
  6158  02F4                     l1752:	
  6159                           
  6160                           ;Lights.c: 12: void SetLight( const enum Light light, const _Bool state );Lights.c: 13: 
      +                          {;Lights.c: 15:     switch ( light )
  6161  02F4  2B0E               	goto	l1758
  6162  02F5                     l1754:	
  6163  02F5  0C72               	rrf	SetLight@state,w
  6164  02F6  0022               	movlb	2	; select bank2
  6165  02F7  1C03               	skipc
  6166  02F8  108E               	bcf	14,1	;volatile
  6167  02F9  1803               	skipnc
  6168  02FA  148E               	bsf	14,1	;volatile
  6169  02FB                     l316:	
  6170                           ;Lights.c: 20:             do { LATCbits.LATC2 = state; } while(0);
  6171                           
  6172  02FB  0C72               	rrf	SetLight@state,w
  6173  02FC  0022               	movlb	2	; select bank2
  6174  02FD  1C03               	skipc
  6175  02FE  110E               	bcf	14,2	;volatile
  6176  02FF  1803               	skipnc
  6177  0300  150E               	bsf	14,2	;volatile
  6178  0301                     l319:	
  6179                           ;Lights.c: 22:             do { LATCbits.LATC3 = state; } while(0);
  6180                           
  6181  0301  0C72               	rrf	SetLight@state,w
  6182  0302  0022               	movlb	2	; select bank2
  6183  0303  1C03               	skipc
  6184  0304  118E               	bcf	14,3	;volatile
  6185  0305  1803               	skipnc
  6186  0306  158E               	bsf	14,3	;volatile
  6187  0307                     l323:	
  6188                           ;Lights.c: 25:             do { LATCbits.LATC4 = state; } while(0);
  6189                           
  6190  0307  0C72               	rrf	SetLight@state,w
  6191  0308  0022               	movlb	2	; select bank2
  6192  0309  1C03               	skipc
  6193  030A  120E               	bcf	14,4	;volatile
  6194  030B  1803               	skipnc
  6195  030C  160E               	bsf	14,4	;volatile
  6196  030D  2B24               	goto	l326
  6197  030E                     l1758:	
  6198  030E  0875               	movf	SetLight@light,w
  6199  030F  00F3               	movwf	??_SetLight
  6200  0310  01F4               	clrf	??_SetLight+1
  6201                           
  6202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6203                           ; Switch size 1, requested type "simple"
  6204                           ; Number of cases is 1, Range of values is 0 to 0
  6205                           ; switch strategies available:
  6206                           ; Name         Instructions Cycles
  6207                           ; simple_byte            4     3 (average)
  6208                           ; direct_byte            8     6 (fixed)
  6209                           ; jumptable            260     6 (fixed)
  6210                           ;	Chosen strategy is simple_byte
  6211  0311  0874               	movf	??_SetLight+1,w
  6212  0312  3A00               	xorlw	0	; case 0
  6213  0313  1903               	skipnz
  6214  0314  2B16               	goto	l1912
  6215  0315  2B07               	goto	l323
  6216  0316                     l1912:	
  6217                           
  6218                           ; Switch size 1, requested type "simple"
  6219                           ; Number of cases is 4, Range of values is 0 to 3
  6220                           ; switch strategies available:
  6221                           ; Name         Instructions Cycles
  6222                           ; simple_byte           13     7 (average)
  6223                           ; direct_byte           14     6 (fixed)
  6224                           ; jumptable            260     6 (fixed)
  6225                           ;	Chosen strategy is simple_byte
  6226  0316  0873               	movf	??_SetLight,w
  6227  0317  3A00               	xorlw	0	; case 0
  6228  0318  1903               	skipnz
  6229  0319  2AF5               	goto	l1754
  6230  031A  3A01               	xorlw	1	; case 1
  6231  031B  1903               	skipnz
  6232  031C  2AFB               	goto	l316
  6233  031D  3A03               	xorlw	3	; case 2
  6234  031E  1903               	skipnz
  6235  031F  2B01               	goto	l319
  6236  0320  3A01               	xorlw	1	; case 3
  6237  0321  1903               	skipnz
  6238  0322  2B07               	goto	l323
  6239  0323  2B07               	goto	l323
  6240  0324                     l326:	
  6241  0324  0008               	return
  6242  0325                     __end_of_SetLight:	
  6243                           
  6244                           	psect	intentry
  6245  0004                     __pintentry:	
  6246 ;; *************** function _INTERRUPT_InterruptManager *****************
  6247 ;; Defined at:
  6248 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;		None
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;		None
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  1    wreg      void 
  6255 ;; Registers used:
  6256 ;;		wreg, status,2, status,0, pclath, cstack
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6266 ;;Total ram usage:        0 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; Hardware stack levels required when called:    3
  6269 ;; This function calls:
  6270 ;;		_PIN_MANAGER_IOC
  6271 ;;		_TMR1_ISR
  6272 ;; This function is called by:
  6273 ;;		Interrupt level 1
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277  0004                     _INTERRUPT_InterruptManager:	
  6278                           
  6279                           ;incstack = 0
  6280  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6281                           
  6282                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  6283  0005  3180               	pagesel	$
  6284  0006                     i1l1668:	
  6285                           
  6286                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
  6287  0006  0021               	movlb	1	; select bank1
  6288  0007  1E10               	btfss	16,4	;volatile
  6289  0008  280A               	goto	u37_21
  6290  0009  280B               	goto	u37_20
  6291  000A                     u37_21:	
  6292  000A  2814               	goto	i1l148
  6293  000B                     u37_20:	
  6294  000B                     i1l1670:	
  6295  000B  0020               	movlb	0	; select bank0
  6296  000C  1E10               	btfss	16,4	;volatile
  6297  000D  280F               	goto	u38_21
  6298  000E  2810               	goto	u38_20
  6299  000F                     u38_21:	
  6300  000F  2814               	goto	i1l148
  6301  0010                     u38_20:	
  6302  0010                     i1l1672:	
  6303                           
  6304                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  6305  0010  3184  2493  3180   	fcall	_PIN_MANAGER_IOC
  6306                           
  6307                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  6308  0013  2826               	goto	i1l154
  6309  0014                     i1l148:	
  6310                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  6311                           
  6312  0014  1F0B               	btfss	11,6	;volatile
  6313  0015  2817               	goto	u39_21
  6314  0016  2818               	goto	u39_20
  6315  0017                     u39_21:	
  6316  0017  2826               	goto	i1l154
  6317  0018                     u39_20:	
  6318  0018                     i1l1674:	
  6319                           
  6320                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  6321  0018  0021               	movlb	1	; select bank1
  6322  0019  1C11               	btfss	17,0	;volatile
  6323  001A  281C               	goto	u40_21
  6324  001B  281D               	goto	u40_20
  6325  001C                     u40_21:	
  6326  001C  2826               	goto	i1l153
  6327  001D                     u40_20:	
  6328  001D                     i1l1676:	
  6329  001D  0020               	movlb	0	; select bank0
  6330  001E  1C11               	btfss	17,0	;volatile
  6331  001F  2821               	goto	u41_21
  6332  0020  2822               	goto	u41_20
  6333  0021                     u41_21:	
  6334  0021  2826               	goto	i1l153
  6335  0022                     u41_20:	
  6336  0022                     i1l1678:	
  6337                           
  6338                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_ISR();
  6339  0022  3184  2460  3180   	fcall	_TMR1_ISR
  6340                           
  6341                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  6342  0025  2826               	goto	i1l154
  6343  0026                     i1l153:	
  6344                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  6345                           
  6346  0026                     i1l154:	
  6347  0026  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6348  0027  0009               	retfie
  6349  0028                     __end_of_INTERRUPT_InterruptManager:	
  6350                           
  6351                           	psect	text22
  6352  0460                     __ptext22:	
  6353 ;; *************** function _TMR1_ISR *****************
  6354 ;; Defined at:
  6355 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;		None
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;		None
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  1    wreg      void 
  6362 ;; Registers used:
  6363 ;;		wreg, status,2, status,0, pclath, cstack
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6373 ;;Total ram usage:        0 bytes
  6374 ;; Hardware stack levels used:    1
  6375 ;; Hardware stack levels required when called:    1
  6376 ;; This function calls:
  6377 ;;		_TMR1_WriteTimer
  6378 ;; This function is called by:
  6379 ;;		_INTERRUPT_InterruptManager
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           
  6384                           ;psect for function _TMR1_ISR
  6385  0460                     _TMR1_ISR:	
  6386  0460                     i1l1610:	
  6387                           ;incstack = 0
  6388                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  6389                           
  6390                           
  6391                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  6392  0460  0020               	movlb	0	; select bank0
  6393  0461  1011               	bcf	17,0	;volatile
  6394  0462                     i1l1612:	
  6395                           
  6396                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  6397  0462  0857               	movf	_timer1ReloadVal+1,w	;volatile
  6398  0463  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  6399  0464  0856               	movf	_timer1ReloadVal,w	;volatile
  6400  0465  00F0               	movwf	TMR1_WriteTimer@timerVal
  6401  0466  3184  243F  3184   	fcall	_TMR1_WriteTimer
  6402  0469                     i1l1614:	
  6403                           
  6404                           ;mcc_generated_files/tmr1.c: 164:     cur_ms++;
  6405  0469  3001               	movlw	1
  6406  046A  0020               	movlb	0	; select bank0
  6407  046B  07C9               	addwf	_cur_ms,f
  6408  046C  3000               	movlw	0
  6409  046D  3DCA               	addwfc	_cur_ms+1,f
  6410  046E                     i1l215:	
  6411  046E  0008               	return
  6412  046F                     __end_of_TMR1_ISR:	
  6413                           
  6414                           	psect	text23
  6415  043F                     __ptext23:	
  6416 ;; *************** function _TMR1_WriteTimer *****************
  6417 ;; Defined at:
  6418 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;  timerVal        2    0[COMMON] unsigned short 
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;		None
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  1    wreg      void 
  6425 ;; Registers used:
  6426 ;;		wreg, status,2
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6432 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6435 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6436 ;;Total ram usage:        2 bytes
  6437 ;; Hardware stack levels used:    1
  6438 ;; This function calls:
  6439 ;;		Nothing
  6440 ;; This function is called by:
  6441 ;;		_TMR1_ISR
  6442 ;;		_TMR1_Reload
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446                           
  6447                           ;psect for function _TMR1_WriteTimer
  6448  043F                     _TMR1_WriteTimer:	
  6449  043F                     i1l1548:	
  6450                           ;incstack = 0
  6451                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  6452                           
  6453                           
  6454                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.T1SYNC == 1)
  6455  043F  0020               	movlb	0	; select bank0
  6456  0440  1D1B               	btfss	27,2	;volatile
  6457  0441  2C43               	goto	u28_21
  6458  0442  2C44               	goto	u28_20
  6459  0443                     u28_21:	
  6460  0443  2C4B               	goto	i1l1558
  6461  0444                     u28_20:	
  6462  0444                     i1l1550:	
  6463                           
  6464                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  6465  0444  101B               	bcf	27,0	;volatile
  6466  0445                     i1l1552:	
  6467                           
  6468                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  6469  0445  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  6470  0446  009A               	movwf	26	;volatile
  6471  0447                     i1l1554:	
  6472                           
  6473                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  6474  0447  0870               	movf	TMR1_WriteTimer@timerVal,w
  6475  0448  0099               	movwf	25	;volatile
  6476  0449                     i1l1556:	
  6477                           
  6478                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  6479  0449  141B               	bsf	27,0	;volatile
  6480                           
  6481                           ;mcc_generated_files/tmr1.c: 133:     }
  6482  044A  2C4F               	goto	i1l203
  6483  044B                     i1l1558:	
  6484                           
  6485                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  6486  044B  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  6487  044C  009A               	movwf	26	;volatile
  6488  044D                     i1l1560:	
  6489                           
  6490                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  6491  044D  0870               	movf	TMR1_WriteTimer@timerVal,w
  6492  044E  0099               	movwf	25	;volatile
  6493  044F                     i1l203:	
  6494  044F  0008               	return
  6495  0450                     __end_of_TMR1_WriteTimer:	
  6496                           
  6497                           	psect	text24
  6498  0493                     __ptext24:	
  6499 ;; *************** function _PIN_MANAGER_IOC *****************
  6500 ;; Defined at:
  6501 ;;		line 122 in file "mcc_generated_files/pin_manager.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;		None
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;		None
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  1    wreg      void 
  6508 ;; Registers used:
  6509 ;;		wreg, status,2, status,0, pclath, cstack
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6519 ;;Total ram usage:        0 bytes
  6520 ;; Hardware stack levels used:    1
  6521 ;; Hardware stack levels required when called:    2
  6522 ;; This function calls:
  6523 ;;		_IOCCF0_ISR
  6524 ;; This function is called by:
  6525 ;;		_INTERRUPT_InterruptManager
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           
  6530                           ;psect for function _PIN_MANAGER_IOC
  6531  0493                     _PIN_MANAGER_IOC:	
  6532  0493                     i1l1606:	
  6533                           ;incstack = 0
  6534                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  6535                           
  6536                           
  6537                           ;mcc_generated_files/pin_manager.c: 125:     if(IOCCFbits.IOCCF0 == 1)
  6538  0493  0027               	movlb	7	; select bank7
  6539  0494  1C19               	btfss	25,0	;volatile
  6540  0495  2C97               	goto	u31_21
  6541  0496  2C98               	goto	u31_20
  6542  0497                     u31_21:	
  6543  0497  2C9B               	goto	i1l109
  6544  0498                     u31_20:	
  6545  0498                     i1l1608:	
  6546                           
  6547                           ;mcc_generated_files/pin_manager.c: 126:     {;mcc_generated_files/pin_manager.c: 127:  
      +                                 IOCCF0_ISR();
  6548  0498  3184  246F  3184   	fcall	_IOCCF0_ISR
  6549  049B                     i1l109:	
  6550  049B  0008               	return
  6551  049C                     __end_of_PIN_MANAGER_IOC:	
  6552                           
  6553                           	psect	text25
  6554  046F                     __ptext25:	
  6555 ;; *************** function _IOCCF0_ISR *****************
  6556 ;; Defined at:
  6557 ;;		line 134 in file "mcc_generated_files/pin_manager.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;		None
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;		None
  6562 ;; Return value:  Size  Location     Type
  6563 ;;                  1    wreg      void 
  6564 ;; Registers used:
  6565 ;;		wreg, status,2, status,0, pclath, cstack
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6575 ;;Total ram usage:        0 bytes
  6576 ;; Hardware stack levels used:    1
  6577 ;; Hardware stack levels required when called:    1
  6578 ;; This function calls:
  6579 ;;		Absolute function
  6580 ;;		_IOCCF0_DefaultInterruptHandler
  6581 ;; This function is called by:
  6582 ;;		_PIN_MANAGER_IOC
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           
  6587                           ;psect for function _IOCCF0_ISR
  6588  046F                     _IOCCF0_ISR:	
  6589  046F                     i1l1540:	
  6590                           ;incstack = 0
  6591                           ; Regs used in _IOCCF0_ISR: [wreg+status,2+status,0+pclath+cstack]
  6592                           
  6593                           
  6594                           ;mcc_generated_files/pin_manager.c: 139:     if(IOCCF0_InterruptHandler)
  6595  046F  0020               	movlb	0	; select bank0
  6596  0470  0858               	movf	_IOCCF0_InterruptHandler,w
  6597  0471  0459               	iorwf	_IOCCF0_InterruptHandler+1,w
  6598  0472  1903               	btfsc	3,2
  6599  0473  2C75               	goto	u27_21
  6600  0474  2C76               	goto	u27_20
  6601  0475                     u27_21:	
  6602  0475  2C7B               	goto	i1l1544
  6603  0476                     u27_20:	
  6604  0476                     i1l1542:	
  6605                           
  6606                           ;mcc_generated_files/pin_manager.c: 140:     {;mcc_generated_files/pin_manager.c: 141:  
      +                                 IOCCF0_InterruptHandler();
  6607  0476  0859               	movf	_IOCCF0_InterruptHandler+1,w
  6608  0477  008A               	movwf	10
  6609  0478  0858               	movf	_IOCCF0_InterruptHandler,w
  6610  0479  000A               	callw
  6611  047A  3184               	pagesel	$
  6612  047B                     i1l1544:	
  6613                           
  6614                           ;mcc_generated_files/pin_manager.c: 143:     IOCCFbits.IOCCF0 = 0;
  6615  047B  0027               	movlb	7	; select bank7
  6616  047C  1019               	bcf	25,0	;volatile
  6617  047D                     i1l113:	
  6618  047D  0008               	return
  6619  047E                     __end_of_IOCCF0_ISR:	
  6620                           
  6621                           	psect	text26
  6622  04BF                     __ptext26:	
  6623 ;; *************** function _IOCCF0_DefaultInterruptHandler *****************
  6624 ;; Defined at:
  6625 ;;		line 156 in file "mcc_generated_files/pin_manager.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;		None
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;		None
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  1    wreg      void 
  6632 ;; Registers used:
  6633 ;;		None
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6643 ;;Total ram usage:        0 bytes
  6644 ;; Hardware stack levels used:    1
  6645 ;; This function calls:
  6646 ;;		Nothing
  6647 ;; This function is called by:
  6648 ;;		_PIN_MANAGER_Initialize
  6649 ;;		_IOCCF0_ISR
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652                           
  6653                           
  6654                           ;psect for function _IOCCF0_DefaultInterruptHandler
  6655  04BF                     _IOCCF0_DefaultInterruptHandler:	
  6656  04BF                     i1l119:	
  6657                           ;incstack = 0
  6658                           ; Regs used in _IOCCF0_DefaultInterruptHandler: []
  6659                           
  6660  04BF  0008               	return
  6661  04C0                     __end_of_IOCCF0_DefaultInterruptHandler:	
  6662  007E                     btemp	set	126	;btemp
  6663  007E                     int$flags	set	126
  6664  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         25
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     33      62
    BANK1            80     20      28
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            48      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    GetStage@head.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    Wigwag.first_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    stage_stash.next.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    stage_stash.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ?_GetStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ?_CopyStageData.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ?_CopyStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ?_ConstructStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ?_NewStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    FlashPattern@pattern	PTR struct Pattern size(2) Largest target is 3
		 -> Wigwag(BANK0[3]), 

    InitWigwagPattern@head.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@head	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@pattern.first_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@off.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@off	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@right_side_on.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@right_side_on	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@left_side_on.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@left_side_on	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@pattern.first_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    InitWigwagPattern@pattern	PTR struct Pattern size(2) Largest target is 3
		 -> Wigwag(BANK0[3]), 

    sp__GetStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__GetStage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    GetStage@get_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@last_stage.next.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@last_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@last_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@new_stage.next.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@new_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@head.next.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@new_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@head.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AppendStage@head	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__CopyStageData.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    CopyStageData@source.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    CopyStageData@dest.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    CopyStageData@source	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    CopyStageData@dest	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__CopyStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__CopyStage	PTR struct Stage size(1) Largest target is 0

    CopyStage@dest.next.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    CopyStage@source.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    CopyStage@dest.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__CopyStageData	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__ConstructStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__ConstructStage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ConstructStage@new_stage.next.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ConstructStage@next	PTR struct Stage size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    ConstructStage@states	PTR const _Bool  size(1) Largest target is 4
		 -> InitWigwagPattern@right_side_states(BANK1[4]), InitWigwagPattern@left_side_states(BANK1[4]), 

    ConstructStage@new_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    ConstructStage@new_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    sp__NewStage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    NewStage@new_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    NewStage@new_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), 

    sp__NewStage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AssignLightStates@stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    AssignLightStates@states	PTR const _Bool  size(1) Largest target is 4
		 -> InitWigwagPattern@right_side_states(BANK1[4]), InitWigwagPattern@left_side_states(BANK1[4]), NewStage@init_states(BANK0[4]), 

    AssignLightStates@stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    S443Stage$next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    current_stage.next	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    current_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    S452Pattern$first_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    Wigwag.first_stage	PTR struct Stage size(2) Largest target is 320
		 -> stage_stash(BIGRAM[320]), NULL(NULL[0]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    IOCCF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF0_DefaultInterruptHandler(), 

    IOCCF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCCF0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_FlashPattern
    _SetOutputs->_SetLight
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF0_SetInterruptHandler
    _InitWigwagPattern->_ConstructStage
    _ConstructStage->_AssignLightStates
    _NewStage->_AssignLightStates
    _FlashPattern->_SetLight

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _setup->_InitWigwagPattern
    _InitWigwagPattern->_AppendStage
    _CopyStageData->_NewStage
    _ConstructStage->_NewStage
    _NewStage->_AssignLightStates
    _AppendStage->_CopyStageData

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _setup->_InitWigwagPattern

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    8352
                                             32 BANK0      1     1      0
                       _FlashPattern
           _PatternCycleInputChanged
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    7299
                  _InitWigwagPattern
                  _SYSTEM_Initialize
                         _SetOutputs
                    _TMR1_Initialize
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SetOutputs                                           2     2      0     999
                                              6 COMMON     2     2      0
                           _SetLight
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     196
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0      98
         _IOCCF0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _IOCCF0_SetInterruptHandler                           2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitWigwagPattern                                   23    21      2    6006
                                             29 BANK0      3     1      2
                                              0 BANK1     20    20      0
                        _AppendStage
                     _ConstructStage
                      _CopyStageData
                           _NewStage
 ---------------------------------------------------------------------------------
 (3) _CopyStageData                                        9     5      4    1365
                                             12 BANK0      9     5      4
                           _NewStage (ARG)
 ---------------------------------------------------------------------------------
 (3) _ConstructStage                                       7     4      3    1920
                                              9 COMMON     1     1      0
                                             12 BANK0      6     3      3
                  _AssignLightStates
                           _NewStage
 ---------------------------------------------------------------------------------
 (3) _NewStage                                            10    10      0     716
                                              2 BANK0     10    10      0
                  _AssignLightStates
 ---------------------------------------------------------------------------------
 (4) _AssignLightStates                                    9     6      3     552
                                              2 COMMON     7     4      3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _AppendStage                                          8     4      4    1309
                                             21 BANK0      8     4      4
                      _CopyStageData (ARG)
                           _NewStage (ARG)
 ---------------------------------------------------------------------------------
 (1) _PatternCycleInputChanged                             4     4      0      23
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _FlashPattern                                         8     6      2    1030
                                              6 COMMON     4     2      2
                                              0 BANK0      4     4      0
                           _SetLight
 ---------------------------------------------------------------------------------
 (3) _SetLight                                             4     3      1     875
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     240
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCCF0_ISR
 ---------------------------------------------------------------------------------
 (8) _IOCCF0_ISR                                           0     0      0       0
                   Absolute function *
     _IOCCF0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _IOCCF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FlashPattern
     _SetLight
   _PatternCycleInputChanged
   _setup
     _InitWigwagPattern
       _AppendStage
         _CopyStageData (ARG)
           _NewStage (ARG)
             _AssignLightStates
         _NewStage (ARG)
           _AssignLightStates
       _ConstructStage
         _AssignLightStates
         _NewStage
           _AssignLightStates
       _CopyStageData
         _NewStage (ARG)
           _AssignLightStates
       _NewStage
         _AssignLightStates
     _SYSTEM_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
         _IOCCF0_SetInterruptHandler
       _PMD_Initialize
       _TMR1_Initialize
         _TMR1_SetInterruptHandler
       _WDT_Initialize
     _SetOutputs
       _SetLight
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR1_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF0_ISR
       Absolute function(Fake) *
       _IOCCF0_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      3E       5       77.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     14      1C       7       35.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      66      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               30      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      66      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed May 06 12:12:31 2020

                              _update_stage 004D                                 __CFG_CP$OFF 0000  
                                        l50 0492                                          l53 04BB  
                                        l47 045F                                          l56 04A3  
                        ConstructStage@next 002E                                 __CFG_LVP$ON 0000  
                                       l105 03A9                                         l116 04AF  
                                       l302 0352                                         l218 04A9  
                                       l323 0307                                         l316 02FB  
                                       l326 0324                                         l319 0301  
                                       l424 0212                                         l192 04BE  
                                       l353 02B9                                         l329 03F0  
                                       l268 040D                                         l349 03CE  
                                       l189 043E                                         l374 026A  
                                       l358 037F                                         l366 02F2  
                                       l391 01A7                                         u320 032C  
                                       u321 032B                                         u330 033F  
                                       u331 033E                                         u500 01DA  
                                       u340 0351                                         u420 03CE  
                                       u501 01D9                                         u341 0350  
                                       u421 03CD                                         u430 0275  
                                       u431 0274                                         u440 02E3  
                                       u441 02E2                                         u450 021F  
                              __CFG_CPD$OFF 0000                                         u451 021E  
                                       u460 0258                                         u517 0332  
                                       u461 0257                                         u445 02DF  
                                       u470 0127                                         u471 0126  
                                       u480 01A7                                         u465 0254  
                                       u481 01A6                                         u490 01C6  
                                       u491 01C5                                         u475 0123  
                                       u485 01A3                                         u495 01C2  
                           _timer1ReloadVal 0056                     __size_of_PMD_Initialize 0008  
                                       wreg 0009          __end_of_IOCCF0_SetInterruptHandler 04B0  
                _IOCCF0_SetInterruptHandler 04AA                                        l1400 04A4  
                                      l1430 0384                                        l1440 0390  
                                      l1432 0387                                        l1424 049C  
                                      l1450 03A0                                        l1442 0392  
                                      l1434 0389                                        l1426 0380  
                                      l1530 0450                                        l1460 0491  
                                      l1452 03A7                                        l1444 039D  
                                      l1436 038D                                        l1428 0382  
                                      l1532 0453                                        l1630 0325  
                                      l1454 048A                                        l1446 039E  
                                      l1438 038F                                        l1470 042D  
                                      l1462 04B8                                        l1534 0456  
                                      l1632 032C                                        l1800 0245  
                                      l1456 048D                                        l1448 039F  
                                      l1472 0432                                        l1464 0428  
                                      l1536 0459                                        l1634 032F  
                                      l1642 0341                                        l1802 0258  
                                      l1730 026B                                        l1810 0080  
                                      l1458 048E                                        l1474 0434  
                                      l1466 042A                                        l1538 045C  
                                      l1546 04BC                                        l1636 0336  
                                      l1724 03AD                                        l1740 0290  
                                      l1732 0275                                        l1820 00C1  
                                      l1812 0092                                        l1476 043B  
                                      l1468 042C                                        l1804 03D0  
                                      l1638 033F                                        l1726 03C1  
                                      l1718 03AA                                        l1742 0298  
                                      l1830 0113                                        l1822 00CB  
                                      l1814 009A                                        l1806 006B  
                                      l1398 04AA                                        l1912 0316  
                                      l1752 02F4                                        l1648 0351  
                                      l1728 03C5                                        l1744 02A3  
                                      l1736 0278                                        l1832 0118  
                                      l1816 00AC                                        l1808 0071  
                                      l1754 02F5                                        l1746 02AD  
                                      l1738 028C                                        l1770 037B  
                                      l1842 014D                                        l1834 0127  
                                      l1818 00B4                                        l1850 03F4  
                                      l1748 02B5                                        l1764 0355  
                                      l1780 02BD                                        l1844 0193  
                                      l1836 014A                                        l1828 00CD  
                                      l1860 0408                                        l1852 03F5  
                                      l1758 030E                                        l1870 01D3  
                                      l1862 01A8                                        l1766 0368  
                                      l1782 02D2                                        l1774 02BA  
                                      l1846 0198                                        l1854 03F9  
                                      l1872 01D5                                        l1864 01AD  
                                      l1792 0213                                        l1768 0372  
                                      l1784 02D6                                        l1856 03FC  
                                      l1848 03F1                                        l1880 0411  
                                      l1874 01DA                                        l1866 01C6  
                                      l1794 021F                                        l1786 02E3  
                                      l1858 0400                                        l1882 0416  
                                      l1876 0210                                        l1868 01CF  
                                      l1796 0232                                        l1788 02F2  
                                      l1884 0419                                        l1798 023C  
                                      l1886 041E                                        l1878 040E  
                           ?_ConstructStage 002C                                        _LATA 010C  
                                      _LATC 010E                                        _PMD0 0911  
                                      _PMD1 0912                                        _PMD2 0913  
                                      _PMD3 0914                                        _PMD4 0915  
                                      _PMD5 0916                                        _WPUA 020C  
                                      _WPUC 020E                                __CFG_WRT$OFF 0000  
                             SetLight@light 0075                               __CFG_FCMEN$ON 0000  
                      ConstructStage@states 002F                               SetLight@state 0072  
                                      _main 040E                         __end_of_AppendStage 026B  
                                      fsr0h 0005                                        fsr1h 0007  
                                      indf0 0000                                        fsr0l 0004  
                                      indf1 0001                                        fsr1l 0006  
                                      btemp 007E                               __CFG_BOREN$ON 0000  
                             __CFG_BORV$LOW 0000                                        start 0028  
                ??_TMR1_SetInterruptHandler 0074                               __CFG_CSWEN$ON 0000  
                             __CFG_MCLRE$ON 0000                              CopyStageData@i 0033  
                           ??_CopyStageData 0030              __size_of_OSCILLATOR_Initialize 0009  
             __end_of_OSCILLATOR_Initialize 0493                         __size_of_IOCCF0_ISR 000F  
                                     ?_main 0070                               __CFG_WDTE$OFF 0000  
                           _TMR1_StartTimer 04BC                                       _T1CON 001B  
                            __CFG_DEBUG$OFF 0000                                       i1l113 047D  
                                     i1l203 044F                                       i1l109 049B  
                                     i1l119 04BF                                       i1l215 046E  
                                     i1l153 0026                                       i1l154 0026  
                                     i1l148 0014                                       _OSCEN 091D  
                                     u31_20 0498                                       u31_21 0497  
                                     u40_20 001D                                       u40_21 001C  
                                     u41_20 0022                                       u41_21 0021  
                                     _TMR1H 001A                                       _TMR1L 0019  
                                     u27_20 0476                                       u27_21 0475  
                                     u28_20 0444                                       u28_21 0443  
                                     u37_20 000B                                       u37_21 000A  
                                     u38_20 0010                                       u38_21 000F  
                                     u39_20 0018                                       u39_21 0017  
                                     _TRISA 008C                                       _TRISC 008E  
                     ConstructStage@time_ms 002C                            __end_of_TMR1_ISR 046F  
                   __end_of_PIN_MANAGER_IOC 049C                              _WDT_Initialize 04B8  
                                     _setup 03F1                     __end_of_TMR1_Initialize 043F  
                                     pclath 000A                        __end_of_FlashPattern 0213  
                                     status 0003                                       wtemp0 007E  
                  FlashPattern@current_time 0078                    _PatternCycleInputChanged 0325  
                           _TMR1_WriteTimer 043F                             __initialization 002A  
                       NewStage@init_states 0026                                __end_of_main 0428  
               ?_INTERRUPT_InterruptManager 0070                            __end_of_NewStage 02BA  
                                    ??_main 0040                            __end_of_SetLight 0325  
                    __end_of_WDT_Initialize 04BC                          _cur_pc_input_state 004F  
                               _AppendStage 0213                                      ?_setup 0070  
                                    _ANSELA 018C                                      _ANSELC 018E  
                        __CFG_RSTOSC$HFINT1 0000                                      _T1GCON 001C  
                   TMR1_WriteTimer@timerVal 0070                                      _ODCONA 028C  
                                    i1l1610 0460                                      _ODCONC 028E  
                                    i1l1540 046F                                      i1l1612 0462  
                                    i1l1542 0476                                      i1l1606 0493  
                                    i1l1550 0444                                      i1l1614 0469  
                                    i1l1544 047B                                      i1l1608 0498  
                                    i1l1560 044D                                      i1l1552 0445  
                                    i1l1554 0447                                      i1l1556 0449  
                                    i1l1548 043F                                      i1l1558 044B  
                                    i1l1670 000B                                      i1l1672 0010  
                                    i1l1674 0018                                      i1l1676 001D  
                                    i1l1668 0006                                      i1l1678 0022  
                                    _INLVLA 038C                                      _INLVLC 038E  
                                    _OSCFRQ 091F                                      _WDTCON 0097  
                                _SetOutputs 03CF                              __CFG_PWRTE$OFF 0000  
              _TMR1_DefaultInterruptHandler 0000                             SetOutputs@state 0077  
                                    _Wigwag 0051                     __end_of_TMR1_StartTimer 04BF  
                            __CFG_STVREN$ON 0000           InitWigwagPattern@left_side_states 00A0  
                                    _cur_ms 0049                         CopyStageData@source 002E  
                            _PMD_Initialize 049C                             ?_WDT_Initialize 0070  
  TMR1_SetInterruptHandler@InterruptHandler 0072  IOCCF0_SetInterruptHandler@InterruptHandler 0072  
                          ?_PIN_MANAGER_IOC 0070                     __end_of_TMR1_WriteTimer 0450  
                              ??_IOCCF0_ISR 0070                            ?_TMR1_Initialize 0070  
                    AssignLightStates@stage 0072                           _SYSTEM_Initialize 0450  
                   __end_of__initialization 0067                          ?_SYSTEM_Initialize 0070  
                            __pcstackCOMMON 0070          InitWigwagPattern@right_side_states 00A4  
                              __pidataBANK0 04B0                                __pidataBANK1 04B4  
                       ??_SYSTEM_Initialize 0074                                   ?_TMR1_ISR 0070  
                             __end_of_setup 040E                      __end_of_PMD_Initialize 04A4  
                        __end_of_IOCCF0_ISR 047E                           NewStage@new_stage 002A  
                          ??_ConstructStage 0079                 ?_IOCCF0_SetInterruptHandler 0072  
                     __size_of_FlashPattern 006B                   __end_of_SYSTEM_Initialize 0460  
                                   ??_setup 007A                                NewStage@F411 00B4  
                                __pbssBANK0 0041                                  __pbssBANK1 00B4  
                             _current_stage 007A                                   ?_NewStage 0077  
                               ?_SetOutputs 0070                                   ?_SetLight 0072  
                        AssignLightStates@i 0020                        AppendStage@new_stage 0037  
                                __pmaintext 040E                            ?_TMR1_StartTimer 0070  
                                ??_TMR1_ISR 0072                             __CFG_PPS1WAY$ON 0000  
                                __pintentry 0004            ??_IOCCF0_DefaultInterruptHandler 0070  
           ?_IOCCF0_DefaultInterruptHandler 0070                             ?_PMD_Initialize 0070  
                        InitWigwagPattern@i 00AC                                _FlashPattern 01A8  
                                   _OSCCON1 0919                                     _OSCCON3 091B  
                                   _OSCTUNE 091E                  ??_PatternCycleInputChanged 0072  
                                   _SLRCONA 030C                                     _SLRCONC 030E  
                          ?_TMR1_WriteTimer 0070                     ConstructStage@new_stage 0030  
                                ??_NewStage 0022                                  ??_SetLight 0073  
       PatternCycleInputChanged@delay_count 0074                       __end_of_CopyStageData 02F3  
                      InitWigwagPattern@off 00B0                                     __ptext1 03F1  
                                   __ptext2 04BC                                     __ptext3 03CF  
                                   __ptext4 0450                                     __ptext5 04B8  
                                   __ptext6 0428                                     __ptext7 04A4  
                                   __ptext8 049C                                     __ptext9 0380  
                                 _T1CONbits 001B                                     _cur_sec 0045  
                     _OSCILLATOR_Initialize 048A                         __size_of_SetOutputs 0022  
         __size_of_TMR1_SetInterruptHandler 0006                    ??_PIN_MANAGER_Initialize 0074  
                 ?_TMR1_SetInterruptHandler 0072                                   _IOCCFbits 0399  
                                   _temp_ms 004B                                   _IOCCNbits 0398  
                                 _IOCCPbits 0397                                ?_AppendStage 0035  
                __size_of_SYSTEM_Initialize 0010                                     clrloop0 047F  
                      end_of_initialization 0067                         _last_pc_input_state 004E  
                          ??_WDT_Initialize 0072                                   _PORTCbits 000E  
                   AssignLightStates@states 0074                            __CFG_FEXTOSC$OFF 0000  
                                _start_time 0041                                  _ts_trigger 0050  
                         __size_of_TMR1_ISR 000F                           CopyStageData@dest 002C  
                    ?_OSCILLATOR_Initialize 0070                         start_initialization 002A  
           __size_of_PIN_MANAGER_Initialize 002A                             AppendStage@head 0035  
                              ??_SetOutputs 0076                    __size_of_PIN_MANAGER_IOC 0009  
                  InitWigwagPattern@pattern 003D                           __size_of_NewStage 004F  
                          __CFG_LPBOREN$OFF 0000                    __size_of_TMR1_Initialize 0017  
                         __size_of_SetLight 0032                            ??_PMD_Initialize 0072  
                               __pdataBANK0 005A                                 __pdataBANK1 00B8  
                               __pbssBIGRAM 22B0                                 __pbssCOMMON 007A  
                     AppendStage@last_stage 003B                                   ___latbits 0002  
                        __end_of_SetOutputs 03F1                               __pcstackBANK0 0020  
                             __pcstackBANK1 00A0                      InitWigwagPattern@i_759 00AE  
    __end_of_IOCCF0_DefaultInterruptHandler 04C0     __size_of_IOCCF0_DefaultInterruptHandler 0001  
            _IOCCF0_DefaultInterruptHandler 04BF                        __size_of_AppendStage 0058  
                                 __pnvBANK0 0054                      _PIN_MANAGER_Initialize 0380  
          __end_of_TMR1_SetInterruptHandler 04AA                           _AssignLightStates 03AA  
                         _InitWigwagPattern 006B                          ?_AssignLightStates 0072  
              ??_INTERRUPT_InterruptManager 0072                          ?_InitWigwagPattern 003D  
                  __size_of_TMR1_StartTimer 0003                         ??_AssignLightStates 0075  
                       ??_InitWigwagPattern 003F                              __size_of_setup 001D  
                   __size_of_ConstructStage 002D                                    _LATCbits 010E  
                                 clear_ram0 047E                                    _PIE0bits 0090  
                                  _PIE1bits 0091                    __size_of_TMR1_WriteTimer 0011  
                 __end_of_AssignLightStates 03CF         __size_of_INTERRUPT_InterruptManager 0024  
                                  _PIR0bits 0010                                    _PIR1bits 0011  
         __size_of_PatternCycleInputChanged 002E                   ?_PatternCycleInputChanged 0070  
                 __end_of_InitWigwagPattern 01A8                                    _TMR1_ISR 0460  
                         ??_PIN_MANAGER_IOC 0070                           ??_TMR1_Initialize 0074  
                    __size_of_CopyStageData 0039                                    _NewStage 026B  
                                  _SetLight 02F3                             _stage_list_iter 0043  
                   ??_OSCILLATOR_Initialize 0072                       InitWigwagPattern@F436 005A  
                     InitWigwagPattern@F439 00B8                    _TMR1_SetInterruptHandler 04A4  
                     InitWigwagPattern@head 00B2                       _TMR1_InterruptHandler 0054  
                   _IOCCF0_InterruptHandler 0058                                    __ptext10 04AA  
                                  __ptext11 048A                                    __ptext20 02F3  
                                  __ptext12 006B                                    __ptext13 02BA  
                                _T1GCONbits 001C                                    __ptext22 0460  
                                  __ptext14 0353                                    __ptext23 043F  
                                  __ptext15 026B                                    __ptext24 0493  
                                  __ptext16 03AA                                    __ptext25 046F  
                                  __ptext17 0213                                    __ptext26 04BF  
                                  __ptext18 0325                                    __ptext19 01A8  
              ??_IOCCF0_SetInterruptHandler 0074              InitWigwagPattern@right_side_on 00AA  
                         ??_TMR1_StartTimer 0072                                  _IOCCF0_ISR 046F  
                                  _cur_hsec 0047                               __size_of_main 001A  
                __size_of_AssignLightStates 0025               InitWigwagPattern@left_side_on 00A8  
                __size_of_InitWigwagPattern 013D                                    int$flags 007E  
        __end_of_INTERRUPT_InterruptManager 0028                  _INTERRUPT_InterruptManager 0004  
                         ??_TMR1_WriteTimer 0072                               _CopyStageData 02BA  
                       FlashPattern@pattern 0076                               ?_FlashPattern 0076  
       __size_of_IOCCF0_SetInterruptHandler 0006                                  _INTCONbits 000B  
                   __size_of_WDT_Initialize 0004                                    intlevel1 0000  
                            _ConstructStage 0353                     ?_PIN_MANAGER_Initialize 0070  
                         __CFG_CLKOUTEN$OFF 0000                              ?_CopyStageData 002C  
                            ??_FlashPattern 0020                               ??_AppendStage 0039  
          __end_of_PatternCycleInputChanged 0353                      __end_of_ConstructStage 0380  
                               ?_IOCCF0_ISR 0070              __end_of_PIN_MANAGER_Initialize 03AA  
                           _PIN_MANAGER_IOC 0493                                 _stage_stash 22B0  
                           _TMR1_Initialize 0428  
